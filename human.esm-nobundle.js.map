{
  "version": 3,
  "sources": ["../src/util/util.ts", "../src/config.ts", "tfjs.esm.js", "../src/image/imagefxshaders.ts", "../src/image/imagefx.ts", "../src/image/enhance.ts", "../src/image/image.ts", "../src/util/env.ts", "../src/models.ts", "../src/gear/gear.ts", "../src/tfjs/constants.ts", "../src/gear/ssrnet-age.ts", "../src/gear/ssrnet-gender.ts", "../src/face/antispoof.ts", "../src/face/facemeshcoords.ts", "../src/face/facemeshutil.ts", "../src/face/blazeface.ts", "../src/body/blazeposecoords.ts", "../src/body/blazeposedetector.ts", "../src/util/box.ts", "../src/body/blazepose.ts", "../src/object/labels.ts", "../src/object/centernet.ts", "../src/body/efficientposecoords.ts", "../src/body/efficientpose.ts", "../src/gear/emotion.ts", "../src/face/mobilefacenet.ts", "../src/face/insightface.ts", "../src/face/iris.ts", "../src/face/constants.ts", "../src/face/attention.ts", "../src/face/facemesh.ts", "../src/face/faceres.ts", "../src/hand/handposeutil.ts", "../src/hand/handposeanchors.ts", "../src/hand/handposedetector.ts", "../src/hand/handposepipeline.ts", "../src/hand/fingerdef.ts", "../src/hand/fingergesture.ts", "../src/hand/fingerpose.ts", "../src/hand/handpose.ts", "../src/tfjs/humangl.ts", "../src/tfjs/backend.ts", "../src/hand/handtrack.ts", "../src/face/liveness.ts", "../src/body/movenetcoords.ts", "../src/body/movenetfix.ts", "../src/body/movenet.ts", "../src/object/nanodet.ts", "../src/body/posenetutils.ts", "../src/body/posenet.ts", "../src/segmentation/segmentation.ts", "../src/tfjs/load.ts", "../src/draw/draw.ts", "../src/draw/primitives.ts", "../src/draw/options.ts", "../src/draw/face.ts", "../src/draw/body.ts", "../src/draw/hand.ts", "../src/draw/object.ts", "../src/draw/gesture.ts", "../src/face/mask.ts", "../src/face/angles.ts", "../src/face/face.ts", "../src/gesture/gesture.ts", "../src/util/interpolate.ts", "../src/face/match.ts", "../src/util/persons.ts", "../src/sample.ts", "../src/warmup.ts", "../src/human.ts"],
  "sourcesContent": ["import type { Config } from '../exports';\n\n/**\n * Simple helper functions used accross codebase\n */\n\n// helper function: wrapper around console output\nexport function log(...msg): void {\n  const dt = new Date();\n  const ts = `${dt.getHours().toString().padStart(2, '0')}:${dt.getMinutes().toString().padStart(2, '0')}:${dt.getSeconds().toString().padStart(2, '0')}.${dt.getMilliseconds().toString().padStart(3, '0')}`;\n  if (msg) console.log(ts, 'Human:', ...msg); // eslint-disable-line no-console\n}\n\n// helper function: join two paths\nexport function join(folder: string, file: string): string {\n  const separator = folder.endsWith('/') ? '' : '/';\n  const skipJoin = file.startsWith('.') || file.startsWith('/') || file.startsWith('http:') || file.startsWith('https:') || file.startsWith('file:');\n  const path = skipJoin ? `${file}` : `${folder}${separator}${file}`;\n  if (!path.toLocaleLowerCase().includes('.json')) throw new Error(`modelpath error: expecting json file: ${path}`);\n  return path;\n}\n\n// helper function: gets elapsed time on both browser and nodejs\nexport const now = () => {\n  if (typeof performance !== 'undefined') return performance.now();\n  return parseInt((Number(process.hrtime.bigint()) / 1000 / 1000).toString());\n};\n\n// helper function: checks current config validity\nexport function validate(defaults: Partial<Config>, config: Partial<Config>, parent = 'config', msgs: { reason: string, where: string, expected?: string }[] = []) {\n  for (const key of Object.keys(config)) {\n    if (typeof config[key] === 'object') {\n      validate(defaults[key], config[key], key, msgs);\n    } else {\n      const defined = defaults && (typeof defaults[key] !== 'undefined');\n      if (!defined) msgs.push({ reason: 'unknown property', where: `${parent}.${key} = ${config[key]}` });\n      const same = defaults && typeof defaults[key] === typeof config[key];\n      if (defined && !same) msgs.push({ reason: 'property type mismatch', where: `${parent}.${key} = ${config[key]}`, expected: typeof defaults[key] });\n    }\n    // ok = ok && defined && same;\n  }\n  if (config.debug && parent === 'config' && msgs.length > 0) log('invalid configuration', msgs);\n  return msgs;\n}\n\n// helper function: perform deep merge of multiple objects so it allows full inheritance with overrides\nexport function mergeDeep(...objects) {\n  const isObject = (obj) => obj && typeof obj === 'object';\n  return objects.reduce((prev, obj) => {\n    Object.keys(obj || {}).forEach((key) => {\n      const pVal = prev[key];\n      const oVal = obj[key];\n      if (Array.isArray(pVal) && Array.isArray(oVal)) prev[key] = pVal.concat(...oVal);\n      else if (isObject(pVal) && isObject(oVal)) prev[key] = mergeDeep(pVal, oVal);\n      else prev[key] = oVal;\n    });\n    return prev;\n  }, {});\n}\n\n// helper function: return min and max from input array\nexport const minmax = (data: number[]) => data.reduce((acc: number[], val) => {\n  acc[0] = (acc[0] === undefined || val < acc[0]) ? val : acc[0];\n  acc[1] = (acc[1] === undefined || val > acc[1]) ? val : acc[1];\n  return acc;\n}, []);\n\n// helper function: async wait\nexport async function wait(time: number) {\n  const waiting = new Promise((resolve) => { setTimeout(() => resolve(true), time); });\n  await waiting;\n}\n", "/* eslint-disable no-multi-spaces */\n\n/** Generic config type inherited by all module types */\nexport interface GenericConfig {\n  /** is module enabled? */\n  enabled: boolean,\n  /** path to model json file (relative to `modelBasePath` */\n  modelPath: string,\n  /** how many max frames to go without re-running model if cached results are acceptable\n   * for two-phase models such as face and hand caching applies to bounding boxes detection only */\n  skipFrames: number,\n  /** how many max milliseconds to go without re-running model if cached results are acceptable\n  * for two-phase models such as face and hand caching applies to bounding boxes detection only */\n  skipTime: number,\n}\n\n/** Detector part of face configuration */\nexport interface FaceDetectorConfig extends GenericConfig {\n  /** is face rotation correction performed after detecting face?\n   * used to correctly analyze faces under high angles\n  */\n  rotation: boolean,\n  /** maximum number of detected faces */\n  maxDetected: number,\n  /** minimum confidence for a detected face before results are discarded */\n  minConfidence: number,\n  /** minimum overlap between two detected faces before one is discarded */\n  iouThreshold: number,\n  /** should child models perform on masked image of a face */\n  mask: boolean,\n  /** should face detection return processed and cropped face tensor that can with an external model for addtional processing?\n   * if enabled it must be manually deallocated to avoid memory leak */\n  return: boolean,\n}\n\n/** Mesh part of face configuration */\nexport interface FaceMeshConfig extends GenericConfig {\n  /** Keep detected faces that cannot be verified using facemesh */\n  keepInvalid: boolean\n}\n\n/** Iris part of face configuration */\nexport interface FaceIrisConfig extends GenericConfig {}\n\n/** Attention part of face configuration */\nexport interface FaceAttentionConfig extends GenericConfig {}\n\n/** Description or face embedding part of face configuration\n * - also used by age and gender detection\n */\nexport interface FaceDescriptionConfig extends GenericConfig {\n  /** minimum confidence for a detected face before results are discarded */\n  minConfidence: number,\n}\n\n/** Emotion part of face configuration */\nexport interface FaceEmotionConfig extends GenericConfig {\n  /** minimum confidence for a detected face before results are discarded */\n  minConfidence: number,\n}\n\n/** Anti-spoofing part of face configuration */\nexport interface FaceAntiSpoofConfig extends GenericConfig {}\n\n/** Liveness part of face configuration */\nexport interface FaceLivenessConfig extends GenericConfig {}\n\n/** Gear part of face configuration */\nexport interface FaceGearConfig extends GenericConfig {\n  /** minimum confidence for a detected race before results are discarded */\n  minConfidence: number,\n}\n\n/** Configures all face-specific options: face detection, mesh analysis, age, gender, emotion detection and face description */\nexport interface FaceConfig extends GenericConfig {\n  detector: Partial<FaceDetectorConfig>,\n  mesh: Partial<FaceMeshConfig>,\n  attention: Partial<FaceAttentionConfig>,\n  iris: Partial<FaceIrisConfig>,\n  description: Partial<FaceDescriptionConfig>,\n  emotion: Partial<FaceEmotionConfig>,\n  antispoof: Partial<FaceAntiSpoofConfig>,\n  liveness: Partial<FaceLivenessConfig>,\n  gear: Partial<FaceGearConfig>,\n}\n\n/** Configures all body detection specific options */\nexport interface BodyConfig extends GenericConfig {\n  /** maximum number of detected bodies */\n  maxDetected: number,\n  /** minimum confidence for a detected body before results are discarded */\n  minConfidence: number,\n  /* experimental\n  /** experimental: detector used for body model before actual analysis\n  detector?: {\n    /** experimental: enable body detector before body landmarks\n    enabled: boolean,\n    /** experimental: path to optional body detector model json file\n    modelPath: string,\n    /** experimental: minimum confidence for a detected body before results are discarded\n    minConfidence: number,\n    /** experimental: minimum overlap between two detected bodies before one is discarded\n    iouThreshold: number\n  },\n  */\n}\n\n/** Configures all hand detection specific options */\nexport interface HandConfig extends GenericConfig {\n  /** should hand rotation correction be performed after hand detection? */\n  rotation: boolean,\n  /** minimum confidence for a detected hand before results are discarded */\n  minConfidence: number,\n  /** minimum overlap between two detected hands before one is discarded */\n  iouThreshold: number,\n  /** maximum number of detected hands */\n  maxDetected: number,\n  /** should hand landmarks be detected or just return detected hand box */\n  landmarks: boolean,\n  detector: {\n    /** path to hand detector model json */\n    modelPath?: string,\n  },\n  skeleton: {\n    /** path to hand skeleton model json */\n    modelPath?: string,\n  },\n}\n\n/** Configures all object detection specific options */\nexport interface ObjectConfig extends GenericConfig {\n  /** minimum confidence for a detected objects before results are discarded */\n  minConfidence: number,\n  /** minimum overlap between two detected objects before one is discarded */\n  iouThreshold: number,\n  /** maximum number of detected objects */\n  maxDetected: number,\n}\n\n/** Configures all body segmentation module\n * removes background from input containing person\n * if segmentation is enabled it will run as preprocessing task before any other model\n * alternatively leave it disabled and use it on-demand using human.segmentation method which can\n * remove background or replace it with user-provided background\n*/\nexport interface SegmentationConfig extends GenericConfig {\n  /** blur segmentation output by <number> pixels for more realistic image */\n  blur: number,\n}\n\n/** Run input through image filters before inference\n * - available only in Browser environments\n * - image filters run with near-zero latency as they are executed on the GPU using WebGL\n*/\nexport interface FilterConfig {\n  /** are image filters enabled? */\n  enabled: boolean,\n  /** perform image histogram equalization\n   * - equalization is performed on input as a whole and detected face before its passed for further analysis\n  */\n  equalization: boolean,\n  /** resize input width\n  * - if both width and height are set to 0, there is no resizing\n  * - if just one is set, second one is scaled automatically\n  * - if both are set, values are used as-is\n  */\n  width: number,\n  /** resize input height\n  * - if both width and height are set to 0, there is no resizing\n  * - if just one is set, second one is scaled automatically\n  * - if both are set, values are used as-is\n  */\n  height: number,\n  /** return processed canvas imagedata in result */\n  return: boolean,\n  /** flip input as mirror image */\n  flip: boolean,\n  /** range: -1 (darken) to 1 (lighten) */\n  brightness: number,\n  /** range: -1 (reduce contrast) to 1 (increase contrast) */\n  contrast: number,\n  /** range: 0 (no sharpening) to 1 (maximum sharpening) */\n  sharpness: number,\n  /** range: 0 (no blur) to N (blur radius in pixels) */\n  blur: number\n  /** range: -1 (reduce saturation) to 1 (increase saturation) */\n  saturation: number,\n  /** range: 0 (no change) to 360 (hue rotation in degrees) */\n  hue: number,\n  /** image negative */\n  negative: boolean,\n  /** image sepia colors */\n  sepia: boolean,\n  /** image vintage colors */\n  vintage: boolean,\n  /** image kodachrome colors */\n  kodachrome: boolean,\n  /** image technicolor colors */\n  technicolor: boolean,\n  /** image polaroid camera effect */\n  polaroid: boolean,\n  /** range: 0 (no pixelate) to N (number of pixels to pixelate) */\n  pixelate: number,\n}\n\n/** Controlls gesture detection */\nexport interface GestureConfig {\n  /** is gesture detection enabled? */\n  enabled: boolean,\n}\n/** Possible TensorFlow backends */\nexport type BackendType = ['cpu', 'wasm', 'webgl', 'humangl', 'tensorflow', 'webgpu'];\n\n/** Possible values for `human.warmup` */\nexport type WarmupType = ['' | 'none' | 'face' | 'full' | 'body'];\n\n/**\n * Configuration interface definition for **Human** library\n * Contains all configurable parameters\n * Defaults: [config](https://github.com/vladmandic/human/blob/main/src/config.ts#L262)\n */\nexport interface Config {\n  /** Backend used for TFJS operations\n   * valid build-in backends are:\n   * - Browser: `cpu`, `wasm`, `webgl`, `humangl`, `webgpu`\n   * - NodeJS: `cpu`, `wasm`, `tensorflow`\n   * default: `webgl` for browser and `tensorflow` for nodejs\n  */\n  backend: '' | 'cpu' | 'wasm' | 'webgl' | 'humangl' | 'tensorflow' | 'webgpu',\n\n  /** Path to *.wasm files if backend is set to `wasm`\n   *\n   * default: auto-detects to link to CDN `jsdelivr` when running in browser\n  */\n  wasmPath: string,\n\n  /** Force WASM loader to use platform fetch\n   *\n   * default: auto-detects to link to CDN `jsdelivr` when running in browser\n  */\n  wasmPlatformFetch: boolean,\n\n  /** Print debug statements to console\n   *\n   * default: `true`\n  */\n  debug: boolean,\n\n  /** Perform model loading and inference concurrently or sequentially\n   *\n   * default: `true`\n  */\n  async: boolean,\n\n  /** What to use for `human.warmup()`\n   * - warmup pre-initializes all models for faster inference but can take significant time on startup\n   * - used by `webgl`, `humangl` and `webgpu` backends\n   *\n   * default: `full`\n  */\n  warmup: '' | 'none' | 'face' | 'full' | 'body',\n\n  /** Base model path (typically starting with file://, http:// or https://) for all models\n   * - individual modelPath values are relative to this path\n   *\n   * default: `../models/` for browsers and `file://models/` for nodejs\n  */\n  modelBasePath: string,\n\n  /** Cache models in IndexDB on first sucessfull load\n   * default: true if indexdb is available (browsers), false if its not (nodejs)\n   */\n  cacheModels: boolean,\n\n  /** Validate kernel ops used in model during model load\n   * default: true\n   * any errors will be printed on console but will be treated as non-fatal\n   */\n  validateModels: boolean,\n\n  /** Cache sensitivity\n   * - values 0..1 where 0.01 means reset cache if input changed more than 1%\n   * - set to 0 to disable caching\n   *\n   * default: 0.7\n  */\n  cacheSensitivity: number;\n\n  /** Explicit flags passed to initialize TFJS */\n  flags: Record<string, unknown>,\n\n  /** Software Kernels\n   * Registers software kernel ops running on CPU when accelerated version of kernel is not found in the current backend\n  */\n  softwareKernels: boolean,\n\n  /** Perform immediate garbage collection on deallocated tensors instead of caching them */\n  deallocate: boolean;\n\n  /** Internal Variable */\n  skipAllowed: boolean;\n\n  /** Filter config {@link FilterConfig} */\n  filter: Partial<FilterConfig>,\n\n  /** Gesture config {@link GestureConfig} */\n  gesture: Partial<GestureConfig>;\n\n  /** Face config {@link FaceConfig} */\n  face: Partial<FaceConfig>,\n\n  /** Body config {@link BodyConfig} */\n  body: Partial<BodyConfig>,\n\n  /** Hand config {@link HandConfig} */\n  hand: Partial<HandConfig>,\n\n  /** Object config {@link ObjectConfig} */\n  object: Partial<ObjectConfig>,\n\n  /** Segmentation config {@link SegmentationConfig} */\n  segmentation: Partial<SegmentationConfig>,\n}\n\n/** - [See all default Config values...](https://github.com/vladmandic/human/blob/main/src/config.ts#L262) */\nconst config: Config = {\n  backend: '',\n  modelBasePath: '',\n  cacheModels: true,\n  validateModels: true,\n  wasmPath: '',\n  wasmPlatformFetch: false,\n  debug: false,\n  async: true,\n  warmup: 'full',\n  cacheSensitivity: 0.70,\n  skipAllowed: false,\n  deallocate: false,\n  flags: {},\n  softwareKernels: false,\n  filter: {\n    enabled: true,\n    equalization: false,\n    width: 0,\n    height: 0,\n    flip: false,\n    return: true,\n    brightness: 0,\n    contrast: 0,\n    sharpness: 0,\n    blur: 0,\n    saturation: 0,\n    hue: 0,\n    negative: false,\n    sepia: false,\n    vintage: false,\n    kodachrome: false,\n    technicolor: false,\n    polaroid: false,\n    pixelate: 0,\n  },\n  gesture: {\n    enabled: true,\n  },\n  face: {\n    enabled: true,\n    detector: {\n      modelPath: 'blazeface.json',\n      rotation: true,\n      maxDetected: 1,\n      skipFrames: 99,\n      skipTime: 2500,\n      minConfidence: 0.2,\n      iouThreshold: 0.1,\n      mask: false,\n      return: false,\n    },\n    mesh: {\n      enabled: true,\n      modelPath: 'facemesh.json',\n      keepInvalid: false,\n    },\n    attention: {\n      enabled: false,\n      modelPath: 'facemesh-attention.json',\n    },\n    iris: {\n      enabled: true,\n      modelPath: 'iris.json',\n    },\n    emotion: {\n      enabled: true,\n      minConfidence: 0.1,\n      skipFrames: 99,\n      skipTime: 1500,\n      modelPath: 'emotion.json',\n    },\n    description: {\n      enabled: true,\n      modelPath: 'faceres.json',\n      skipFrames: 99,\n      skipTime: 3000,\n      minConfidence: 0.1,\n    },\n    antispoof: {\n      enabled: false,\n      skipFrames: 99,\n      skipTime: 4000,\n      modelPath: 'antispoof.json',\n    },\n    liveness: {\n      enabled: false,\n      skipFrames: 99,\n      skipTime: 4000,\n      modelPath: 'liveness.json',\n    },\n  },\n  body: {\n    enabled: true,\n    modelPath: 'movenet-lightning.json',\n    maxDetected: -1,\n    minConfidence: 0.3,\n    skipFrames: 1,\n    skipTime: 200,\n  },\n  hand: {\n    enabled: true,\n    rotation: true,\n    skipFrames: 99,\n    skipTime: 1000,\n    minConfidence: 0.50,\n    iouThreshold: 0.2,\n    maxDetected: -1,\n    landmarks: true,\n    detector: {\n      modelPath: 'handtrack.json',\n    },\n    skeleton: {\n      modelPath: 'handlandmark-full.json',\n    },\n  },\n  object: {\n    enabled: false,\n    modelPath: 'mb3-centernet.json',\n    minConfidence: 0.2,\n    iouThreshold: 0.4,\n    maxDetected: 10,\n    skipFrames: 99,\n    skipTime: 2000,\n  },\n  segmentation: {\n    enabled: false,\n    modelPath: 'selfie.json',\n    blur: 8,\n  },\n};\n\nexport { config as defaults };\n", "/*\n  Human\n  homepage: <https://github.com/vladmandic/human>\n  author: <https://github.com/vladmandic>'\n*/\n\nexport*from\"@tensorflow/tfjs/dist/index.js\";export*from\"@tensorflow/tfjs-backend-webgl/dist/index.js\";var r=\"3.20.0\",e=\"3.20.0\",o=\"3.20.0\",a=\"3.20.0\",t=\"3.20.0\",s=\"3.20.0\",f=\"3.20.0\",v={tfjs:r,\"tfjs-core\":e,\"tfjs-data\":o,\"tfjs-layers\":a,\"tfjs-converter\":t,\"tfjs-backend-webgl\":s,\"tfjs-backend-wasm\":f};import{Tensor as d}from\"@tensorflow/tfjs/dist/index.js\";import{GraphModel as b}from\"@tensorflow/tfjs-converter/dist/index\";export{b as GraphModel,d as Tensor,v as version};\n", "export const vertexIdentity = `\n  precision highp float;\n  attribute vec2 pos;\n  attribute vec2 uv;\n  varying vec2 vUv;\n  uniform float flipY;\n  void main(void) {\n    vUv = uv;\n    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);\n  }\n`;\n\nexport const fragmentIdentity = `\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  void main(void) {\n    gl_FragColor = texture2D(texture, vUv);\n  }\n`;\n\nexport const colorMatrixWithAlpha = `\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];\n    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];\n  }\n`;\n\nexport const colorMatrixWithoutAlpha = `\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];\n    gl_FragColor.a = c.a;\n  }\n`;\n\nexport const pixelate = `\n  precision highp float;\n  varying vec2 vUv;\n  uniform vec2 size;\n  uniform sampler2D texture;\n  vec2 pixelate(vec2 coord, vec2 size) {\n    return floor( coord / size ) * size;\n  }\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    vec2 coord = pixelate(vUv, size);\n    gl_FragColor += texture2D(texture, coord);\n  }\n`;\n\nexport const blur = `\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;\n    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;\n    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;\n  }\n`;\n\nexport const convolution = `\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  uniform float m[9];\n  void main(void) {\n    vec4 c11 = texture2D(texture, vUv - px); // top left\n    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center\n    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right\n    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left\n    vec4 c22 = texture2D(texture, vUv); // mid center\n    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right\n    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left\n    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center\n    vec4 c33 = texture2D(texture, vUv + px ); // bottom right\n    gl_FragColor = \n    c11 * m[0] + c12 * m[1] + c22 * m[2] +\n    c21 * m[3] + c22 * m[4] + c23 * m[5] +\n    c31 * m[6] + c32 * m[7] + c33 * m[8];\n    gl_FragColor.a = c22.a;\n  }\n`;\n", "/**\n * Image Filters in WebGL algoritm implementation\n * Based on: [WebGLImageFilter](https://github.com/phoboslab/WebGLImageFilter)\n */\n\n/* eslint-disable func-names */\n\nimport * as shaders from './imagefxshaders';\nimport { canvas } from './image';\nimport { log } from '../util/util';\n\nconst collect = (source, prefix: string, collection) => {\n  const r = new RegExp('\\\\b' + prefix + ' \\\\w+ (\\\\w+)', 'ig');\n  source.replace(r, (match, name) => {\n    collection[name] = 0;\n    return match;\n  });\n};\n\nclass GLProgram {\n  uniform = {};\n  attribute = {};\n  gl: WebGLRenderingContext;\n  id: WebGLProgram;\n\n  constructor(gl, vertexSource, fragmentSource) {\n    this.gl = gl;\n    const vertexShader = this.compile(vertexSource, this.gl.VERTEX_SHADER);\n    const fragmentShader = this.compile(fragmentSource, this.gl.FRAGMENT_SHADER);\n    this.id = this.gl.createProgram() as WebGLProgram;\n    if (!vertexShader || !fragmentShader) return;\n    if (!this.id) {\n      log('filter: could not create webgl program');\n      return;\n    }\n    this.gl.attachShader(this.id, vertexShader);\n    this.gl.attachShader(this.id, fragmentShader);\n    this.gl.linkProgram(this.id);\n    if (!this.gl.getProgramParameter(this.id, this.gl.LINK_STATUS)) {\n      log(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id) || 'unknown'}`);\n      return;\n    }\n    this.gl.useProgram(this.id);\n    collect(vertexSource, 'attribute', this.attribute); // Collect attributes\n    for (const a in this.attribute) this.attribute[a] = this.gl.getAttribLocation(this.id, a);\n    collect(vertexSource, 'uniform', this.uniform); // Collect uniforms\n    collect(fragmentSource, 'uniform', this.uniform);\n    for (const u in this.uniform) this.uniform[u] = this.gl.getUniformLocation(this.id, u);\n  }\n\n  compile = (source, type): WebGLShader | null => {\n    const shader = this.gl.createShader(type);\n    if (!shader) {\n      log('filter: could not create shader');\n      return null;\n    }\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      log(`filter: gl compile failed: ${this.gl.getShaderInfoLog(shader) || 'unknown'}`);\n      return null;\n    }\n    return shader;\n  };\n}\n\n// function that is instantiated as class so it has private this members\n/**\n * @class GLImageFilter\n * @property {function} reset reset current filter chain\n * @property {function} add add specified filter to filter chain\n * @property {function} apply execute filter chain and draw result\n * @property {function} draw just draw input to result\n */\n\nexport function GLImageFilter() {\n  let drawCount = 0;\n  let sourceTexture: WebGLTexture | null = null;\n  let lastInChain = false;\n  let currentFramebufferIndex = -1;\n  let tempFramebuffers: [null, null] | [{ fbo: WebGLFramebuffer | null, texture: WebGLTexture | null }] = [null, null];\n  let filterChain: Record<string, unknown>[] = [];\n  let vertexBuffer: WebGLBuffer | null = null;\n  let currentProgram: GLProgram | null = null;\n  const fxcanvas = canvas(100, 100);\n  const shaderProgramCache = { }; // key is the shader program source, value is the compiled program\n  const DRAW = { INTERMEDIATE: 1 };\n  const gl = fxcanvas.getContext('webgl') as WebGLRenderingContext;\n  if (!gl) {\n    log('filter: cannot get webgl context');\n    return;\n  }\n  // @ts-ignore used for sanity checks outside of imagefx\n  this.gl = gl;\n\n  function resize(width, height) {\n    if (width === fxcanvas.width && height === fxcanvas.height) return; // Same width/height? Nothing to do here\n    fxcanvas.width = width;\n    fxcanvas.height = height;\n    if (!vertexBuffer) { // Create the context if we don't have it yet\n      const vertices = new Float32Array([-1, -1, 0, 1, 1, -1, 1, 1, -1, 1, 0, 0, -1, 1, 0, 0, 1, -1, 1, 1, 1, 1, 1, 0]); // Create the vertex buffer for the two triangles [x, y, u, v] * 6\n      vertexBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n    }\n    gl.viewport(0, 0, fxcanvas.width, fxcanvas.height);\n    tempFramebuffers = [null, null]; // Delete old temp framebuffers\n  }\n\n  function createFramebufferTexture(width, height) {\n    const fbo = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n    const renderbuffer = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    return { fbo, texture };\n  }\n\n  function getTempFramebuffer(index): { fbo: WebGLFramebuffer | null, texture: WebGLTexture | null } {\n    tempFramebuffers[index] = tempFramebuffers[index] || createFramebufferTexture(fxcanvas.width, fxcanvas.height);\n    return tempFramebuffers[index] as { fbo: WebGLFramebuffer, texture: WebGLTexture };\n  }\n\n  function draw(flags = 0) {\n    if (!currentProgram) return;\n    let source: WebGLTexture | null = null;\n    let target: WebGLFramebuffer | null = null;\n    let flipY = false;\n    if (drawCount === 0) source = sourceTexture; // First draw call - use the source texture\n    else source = getTempFramebuffer(currentFramebufferIndex).texture || null; // All following draw calls use the temp buffer last drawn to\n    drawCount++;\n    if (lastInChain && !(flags & DRAW.INTERMEDIATE)) { // Last filter in our chain - draw directly to the WebGL Canvas. We may also have to flip the image vertically now\n      target = null;\n      flipY = drawCount % 2 === 0;\n    } else {\n      currentFramebufferIndex = (currentFramebufferIndex + 1) % 2;\n      target = getTempFramebuffer(currentFramebufferIndex).fbo || null; // Intermediate draw call - get a temp buffer to draw to\n    }\n    gl.bindTexture(gl.TEXTURE_2D, source); // Bind the source and target and draw the two triangles\n    gl.bindFramebuffer(gl.FRAMEBUFFER, target);\n    gl.uniform1f(currentProgram.uniform['flipY'], (flipY ? -1 : 1));\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  function compileShader(fragmentSource): GLProgram | null {\n    if (shaderProgramCache[fragmentSource]) {\n      currentProgram = shaderProgramCache[fragmentSource];\n      gl.useProgram((currentProgram ? currentProgram.id : null) || null);\n      return currentProgram;\n    }\n    currentProgram = new GLProgram(gl, shaders.vertexIdentity, fragmentSource);\n    if (!currentProgram) {\n      log('filter: could not get webgl program');\n      return null;\n    }\n    const floatSize = Float32Array.BYTES_PER_ELEMENT;\n    const vertSize = 4 * floatSize;\n    gl.enableVertexAttribArray(currentProgram.attribute['pos']);\n    gl.vertexAttribPointer(currentProgram.attribute['pos'], 2, gl.FLOAT, false, vertSize, 0 * floatSize);\n    gl.enableVertexAttribArray(currentProgram.attribute['uv']);\n    gl.vertexAttribPointer(currentProgram.attribute['uv'], 2, gl.FLOAT, false, vertSize, 2 * floatSize);\n    shaderProgramCache[fragmentSource] = currentProgram;\n    return currentProgram;\n  }\n\n  const filter = {\n    colorMatrix: (matrix: number[]) => { // general color matrix filter\n      const m = new Float32Array(matrix);\n      m[4] /= 255;\n      m[9] /= 255;\n      m[14] /= 255;\n      m[19] /= 255;\n      const shader = (m[18] === 1 && m[3] === 0 && m[8] === 0 && m[13] === 0 && m[15] === 0 && m[16] === 0 && m[17] === 0 && m[19] === 0) // Can we ignore the alpha value? Makes things a bit faster.\n        ? shaders.colorMatrixWithoutAlpha\n        : shaders.colorMatrixWithAlpha;\n      const program = compileShader(shader);\n      if (!program) return;\n      gl.uniform1fv(program.uniform['m'], m);\n      draw();\n    },\n\n    brightness: (brightness: number) => {\n      const b = (brightness || 0) + 1;\n      filter.colorMatrix([\n        b, 0, 0, 0, 0,\n        0, b, 0, 0, 0,\n        0, 0, b, 0, 0,\n        0, 0, 0, 1, 0,\n      ]);\n    },\n\n    saturation: (amount: number) => {\n      const x = (amount || 0) * 2 / 3 + 1;\n      const y = ((x - 1) * -0.5);\n      filter.colorMatrix([\n        x, y, y, 0, 0,\n        y, x, y, 0, 0,\n        y, y, x, 0, 0,\n        0, 0, 0, 1, 0,\n      ]);\n    },\n\n    desaturate: () => {\n      filter.saturation(-1);\n    },\n\n    contrast: (amount: number) => {\n      const v = (amount || 0) + 1;\n      const o = -128 * (v - 1);\n      filter.colorMatrix([\n        v, 0, 0, 0, o,\n        0, v, 0, 0, o,\n        0, 0, v, 0, o,\n        0, 0, 0, 1, 0,\n      ]);\n    },\n\n    negative: () => {\n      filter.contrast(-2);\n    },\n\n    hue: (rotation: number) => {\n      rotation = (rotation || 0) / 180 * Math.PI;\n      const cos = Math.cos(rotation);\n      const sin = Math.sin(rotation);\n      const lumR = 0.213;\n      const lumG = 0.715;\n      const lumB = 0.072;\n      filter.colorMatrix([\n        lumR + cos * (1 - lumR) + sin * (-lumR), lumG + cos * (-lumG) + sin * (-lumG), lumB + cos * (-lumB) + sin * (1 - lumB), 0, 0,\n        lumR + cos * (-lumR) + sin * (0.143), lumG + cos * (1 - lumG) + sin * (0.140), lumB + cos * (-lumB) + sin * (-0.283), 0, 0,\n        lumR + cos * (-lumR) + sin * (-(1 - lumR)), lumG + cos * (-lumG) + sin * (lumG), lumB + cos * (1 - lumB) + sin * (lumB), 0, 0,\n        0, 0, 0, 1, 0,\n      ]);\n    },\n\n    desaturateLuminance: () => {\n      filter.colorMatrix([\n        0.2764723, 0.9297080, 0.0938197, 0, -37.1,\n        0.2764723, 0.9297080, 0.0938197, 0, -37.1,\n        0.2764723, 0.9297080, 0.0938197, 0, -37.1,\n        0, 0, 0, 1, 0,\n      ]);\n    },\n\n    sepia: () => {\n      filter.colorMatrix([\n        0.393, 0.7689999, 0.18899999, 0, 0,\n        0.349, 0.6859999, 0.16799999, 0, 0,\n        0.272, 0.5339999, 0.13099999, 0, 0,\n        0, 0, 0, 1, 0,\n      ]);\n    },\n\n    brownie: () => {\n      filter.colorMatrix([\n        0.5997023498159715, 0.34553243048391263, -0.2708298674538042, 0, 47.43192855600873,\n        -0.037703249837783157, 0.8609577587992641, 0.15059552388459913, 0, -36.96841498319127,\n        0.24113635128153335, -0.07441037908422492, 0.44972182064877153, 0, -7.562075277591283,\n        0, 0, 0, 1, 0,\n      ]);\n    },\n\n    vintagePinhole: () => {\n      filter.colorMatrix([\n        0.6279345635605994, 0.3202183420819367, -0.03965408211312453, 0, 9.651285835294123,\n        0.02578397704808868, 0.6441188644374771, 0.03259127616149294, 0, 7.462829176470591,\n        0.0466055556782719, -0.0851232987247891, 0.5241648018700465, 0, 5.159190588235296,\n        0, 0, 0, 1, 0,\n      ]);\n    },\n\n    kodachrome: () => {\n      filter.colorMatrix([\n        1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n        -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n        -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n        0, 0, 0, 1, 0,\n      ]);\n    },\n\n    technicolor: () => {\n      filter.colorMatrix([\n        1.9125277891456083, -0.8545344976951645, -0.09155508482755585, 0, 11.793603434377337,\n        -0.3087833385928097, 1.7658908555458428, -0.10601743074722245, 0, -70.35205161461398,\n        -0.231103377548616, -0.7501899197440212, 1.847597816108189, 0, 30.950940869491138,\n        0, 0, 0, 1, 0,\n      ]);\n    },\n\n    polaroid: () => {\n      filter.colorMatrix([\n        1.438, -0.062, -0.062, 0, 0,\n        -0.122, 1.378, -0.122, 0, 0,\n        -0.016, -0.016, 1.483, 0, 0,\n        0, 0, 0, 1, 0,\n      ]);\n    },\n\n    shiftToBGR: () => {\n      filter.colorMatrix([\n        0, 0, 1, 0, 0,\n        0, 1, 0, 0, 0,\n        1, 0, 0, 0, 0,\n        0, 0, 0, 1, 0,\n      ]);\n    },\n\n    convolution: (matrix: number[]) => { // general convolution Filter\n      const m = new Float32Array(matrix);\n      const pixelSizeX = 1 / fxcanvas.width;\n      const pixelSizeY = 1 / fxcanvas.height;\n      const program = compileShader(shaders.convolution);\n      if (!program) return;\n      gl.uniform1fv(program.uniform['m'], m);\n      gl.uniform2f(program.uniform['px'], pixelSizeX, pixelSizeY);\n      draw();\n    },\n\n    detectEdges: () => {\n      // @ts-ignore this\n      filter.convolution.call(this, [\n        0, 1, 0,\n        1, -4, 1,\n        0, 1, 0,\n      ]);\n    },\n\n    sobelX: () => {\n      // @ts-ignore this\n      filter.convolution.call(this, [\n        -1, 0, 1,\n        -2, 0, 2,\n        -1, 0, 1,\n      ]);\n    },\n\n    sobelY: () => {\n      // @ts-ignore this\n      filter.convolution.call(this, [\n        -1, -2, -1,\n        0, 0, 0,\n        1, 2, 1,\n      ]);\n    },\n\n    sharpen: (amount) => {\n      const a = amount || 1;\n      // @ts-ignore this\n      filter.convolution.call(this, [\n        0, -1 * a, 0,\n        -1 * a, 1 + 4 * a, -1 * a,\n        0, -1 * a, 0,\n      ]);\n    },\n\n    emboss: (size: number) => {\n      const s = size || 1;\n      // @ts-ignore this\n      filter.convolution.call(this, [\n        -2 * s, -1 * s, 0,\n        -1 * s, 1, 1 * s,\n        0, 1 * s, 2 * s,\n      ]);\n    },\n\n    blur: (size: number) => {\n      const blurSizeX = (size / 7) / fxcanvas.width;\n      const blurSizeY = (size / 7) / fxcanvas.height;\n      const program = compileShader(shaders.blur);\n      if (!program) return;\n      // Vertical\n      gl.uniform2f(program.uniform['px'], 0, blurSizeY);\n      draw(DRAW.INTERMEDIATE);\n      // Horizontal\n      gl.uniform2f(program.uniform['px'], blurSizeX, 0);\n      draw();\n    },\n\n    pixelate: (size: number) => {\n      const blurSizeX = (size) / fxcanvas.width;\n      const blurSizeY = (size) / fxcanvas.height;\n      const program = compileShader(shaders.pixelate);\n      if (!program) return;\n      gl.uniform2f(program.uniform['size'], blurSizeX, blurSizeY);\n      draw();\n    },\n  };\n\n  // @ts-ignore this\n  this.add = function (name) {\n    const args = Array.prototype.slice.call(arguments, 1); // eslint-disable-line prefer-rest-params\n    const func = filter[name];\n    filterChain.push({ func, args });\n  };\n\n  // @ts-ignore this\n  this.reset = function () {\n    filterChain = [];\n  };\n\n  // @ts-ignore this\n  this.get = function () {\n    return filterChain;\n  };\n\n  // @ts-ignore this\n  this.apply = function (image) {\n    resize(image.width, image.height);\n    drawCount = 0;\n    if (!sourceTexture) sourceTexture = gl.createTexture(); // Create the texture for the input image if we haven't yet\n    gl.bindTexture(gl.TEXTURE_2D, sourceTexture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    for (let i = 0; i < filterChain.length; i++) {\n      lastInChain = (i === filterChain.length - 1);\n      const f = filterChain[i];\n      // @ts-ignore function assigment\n      f.func.apply(this, f.args || []);\n    }\n    return fxcanvas;\n  };\n\n  // @ts-ignore this\n  this.draw = function (image) {\n    this.add('brightness', 0);\n    return this.apply(image);\n  };\n}\n", "/**\n * Image enhancements\n */\n\nimport * as tf from '../../dist/tfjs.esm.js';\nimport type { Tensor } from '../exports';\n\nexport async function histogramEqualization(inputImage: Tensor): Promise<Tensor> {\n  // const maxValue = 254; // using 255 results in values slightly larger than 1 due to math rounding errors\n  const squeeze = inputImage.shape.length === 4 ? tf.squeeze(inputImage) : inputImage;\n  const channels = tf.split(squeeze, 3, 2);\n  const min: Tensor[] = [tf.min(channels[0]), tf.min(channels[1]), tf.min(channels[2])];\n  const max: Tensor[] = [tf.max(channels[0]), tf.max(channels[1]), tf.max(channels[2])];\n  const absMax = await Promise.all(max.map((channel) => channel.data()));\n  const maxValue = 0.99 * Math.max(absMax[0][0], absMax[1][0], absMax[2][0]);\n  const sub = [tf.sub(channels[0], min[0]), tf.sub(channels[1], min[1]), tf.sub(channels[2], min[2])];\n  const range = [tf.sub(max[0], min[0]), tf.sub(max[1], min[1]), tf.sub(max[2], min[2])];\n  const fact = [tf.div(maxValue, range[0]), tf.div(maxValue, range[1]), tf.div(maxValue, range[2])];\n  const enh = [tf.mul(sub[0], fact[0]), tf.mul(sub[1], fact[1]), tf.mul(sub[2], fact[2])];\n  const rgb = tf.stack([enh[0], enh[1], enh[2]], 2);\n  const reshape = tf.reshape(rgb, [1, squeeze.shape[0], squeeze.shape[1], 3]);\n  tf.dispose([...channels, ...min, ...max, ...sub, ...range, ...fact, ...enh, rgb, squeeze]);\n  return reshape as Tensor; // output shape is [1, height, width, 3]\n}\n", "/**\n * Image Processing algorithm implementation\n */\n\nimport * as tf from '../../dist/tfjs.esm.js';\nimport * as fxImage from './imagefx';\nimport type { Input, AnyCanvas, Tensor, Config } from '../exports';\nimport { env } from '../util/env';\nimport { log } from '../util/util';\nimport * as enhance from './enhance';\n\nconst maxSize = 3840;\n// internal temp canvases\nlet inCanvas: AnyCanvas | null = null; // use global variable to avoid recreating canvas on each frame\nlet outCanvas: AnyCanvas | null = null; // use global variable to avoid recreating canvas on each frame\nlet tmpCanvas: AnyCanvas | null = null; // use global variable to avoid recreating canvas on each frame\n// @ts-ignore // imagefx is js module that should be converted to a class\nlet fx: fxImage.GLImageFilter | null; // instance of imagefx\n\nconst last: { inputSum: number, cacheDiff: number, sumMethod: number, inputTensor: undefined | Tensor } = {\n  inputSum: 0,\n  cacheDiff: 1,\n  sumMethod: 0,\n  inputTensor: undefined,\n};\n\nexport function reset() {\n  last.inputSum = 0;\n  last.cacheDiff = 1;\n  last.sumMethod = 0;\n  last.inputTensor = undefined;\n}\n\nexport function canvas(width: number, height: number): AnyCanvas {\n  let c: AnyCanvas;\n  if (env.browser) { // browser defines canvas object\n    if (env.worker) { // if runing in web  worker use OffscreenCanvas\n      if (typeof OffscreenCanvas === 'undefined') throw new Error('canvas error: attempted to run in web worker but OffscreenCanvas is not supported');\n      c = new OffscreenCanvas(width, height);\n    } else { // otherwise use DOM canvas\n      if (typeof document === 'undefined') throw new Error('canvas error: attempted to run in browser but DOM is not defined');\n      c = document.createElement('canvas');\n      c.width = width;\n      c.height = height;\n    }\n  } else { // if not running in browser, there is no \"default\" canvas object, so we need monkey patch or fail\n    // @ts-ignore // env.canvas is an external monkey-patch\n    if (typeof env.Canvas !== 'undefined') c = new env.Canvas(width, height);\n    else if (typeof globalThis.Canvas !== 'undefined') c = new globalThis.Canvas(width, height);\n    // else throw new Error('canvas error: attempted to use canvas in nodejs without canvas support installed');\n  }\n  // @ts-ignore its either defined or we already threw an error\n  return c;\n}\n\n// helper function to copy canvas from input to output\nexport function copy(input: AnyCanvas, output?: AnyCanvas) {\n  const outputCanvas = output || canvas(input.width, input.height);\n  const ctx = outputCanvas.getContext('2d') as CanvasRenderingContext2D;\n  ctx.drawImage(input, 0, 0);\n  return outputCanvas;\n}\n\n// process input image and return tensor\n// input can be tensor, imagedata, htmlimageelement, htmlvideoelement\n// input is resized and run through imagefx filter\nexport async function process(input: Input, config: Config, getTensor: boolean = true): Promise<{ tensor: Tensor | null, canvas: AnyCanvas | null }> {\n  if (!input) {\n    // throw new Error('input is missing');\n    if (config.debug) log('input error: input is missing');\n    return { tensor: null, canvas: null }; // video may become temporarily unavailable due to onresize\n  }\n  // sanity checks since different browsers do not implement all dom elements\n  if (\n    !(input instanceof tf.Tensor)\n    && !(typeof Image !== 'undefined' && input instanceof Image)\n    && !(typeof env.Canvas !== 'undefined' && input instanceof env.Canvas)\n    && !(typeof globalThis.Canvas !== 'undefined' && input instanceof globalThis.Canvas)\n    && !(typeof ImageData !== 'undefined' && input instanceof ImageData)\n    && !(typeof ImageBitmap !== 'undefined' && input instanceof ImageBitmap)\n    && !(typeof HTMLImageElement !== 'undefined' && input instanceof HTMLImageElement)\n    && !(typeof HTMLMediaElement !== 'undefined' && input instanceof HTMLMediaElement)\n    && !(typeof HTMLVideoElement !== 'undefined' && input instanceof HTMLVideoElement)\n    && !(typeof HTMLCanvasElement !== 'undefined' && input instanceof HTMLCanvasElement)\n    && !(typeof OffscreenCanvas !== 'undefined' && input instanceof OffscreenCanvas)\n  ) {\n    throw new Error('input error: type is not recognized');\n  }\n  if (input instanceof tf.Tensor) { // if input is tensor use as-is without filters but correct shape as needed\n    let tensor: Tensor | null = null;\n    if ((input as Tensor)['isDisposedInternal']) throw new Error('input error: attempted to use tensor but it is disposed');\n    if (!(input as Tensor).shape) throw new Error('input error: attempted to use tensor without a shape');\n    if ((input as Tensor).shape.length === 3) { // [height, width, 3 || 4]\n      if ((input as Tensor).shape[2] === 3) { // [height, width, 3] so add batch\n        tensor = tf.expandDims(input, 0);\n      } else if ((input as Tensor).shape[2] === 4) { // [height, width, 4] so strip alpha and add batch\n        const rgb = tf.slice3d(input, [0, 0, 0], [-1, -1, 3]);\n        tensor = tf.expandDims(rgb, 0);\n        tf.dispose(rgb);\n      }\n    } else if ((input as Tensor).shape.length === 4) { // [1, width, height, 3 || 4]\n      if ((input as Tensor).shape[3] === 3) { // [1, width, height, 3] just clone\n        tensor = tf.clone(input);\n      } else if ((input as Tensor).shape[3] === 4) { // [1, width, height, 4] so strip alpha\n        tensor = tf.slice4d(input, [0, 0, 0, 0], [-1, -1, -1, 3]);\n      }\n    }\n    // at the end shape must be [1, height, width, 3]\n    if (tensor == null || tensor.shape.length !== 4 || tensor.shape[0] !== 1 || tensor.shape[3] !== 3) throw new Error(`input error: attempted to use tensor with unrecognized shape: ${((input as Tensor).shape).toString()}`);\n    if ((tensor).dtype === 'int32') {\n      const cast = tf.cast(tensor, 'float32');\n      tf.dispose(tensor);\n      tensor = cast;\n    }\n    return { tensor, canvas: (config.filter.return ? outCanvas : null) };\n  }\n  // check if resizing will be needed\n  if (typeof input['readyState'] !== 'undefined' && (input as HTMLMediaElement).readyState <= 2) {\n    if (config.debug) log('input stream is not ready');\n    return { tensor: null, canvas: inCanvas }; // video may become temporarily unavailable due to onresize\n  }\n  const originalWidth: number = input['naturalWidth'] || input['videoWidth'] || input['width'] || (input['shape'] && (input['shape'][1] > 0));\n  const originalHeight: number = input['naturalHeight'] || input['videoHeight'] || input['height'] || (input['shape'] && (input['shape'][2] > 0));\n  if (!originalWidth || !originalHeight) {\n    if (config.debug) log('cannot determine input dimensions');\n    return { tensor: null, canvas: inCanvas }; // video may become temporarily unavailable due to onresize\n  }\n  let targetWidth: number = originalWidth;\n  let targetHeight: number = originalHeight;\n  if (targetWidth > maxSize) {\n    targetWidth = maxSize;\n    targetHeight = Math.trunc(targetWidth * originalHeight / originalWidth);\n  }\n  if (targetHeight > maxSize) {\n    targetHeight = maxSize;\n    targetWidth = Math.trunc(targetHeight * originalWidth / originalHeight);\n  }\n\n  // create our canvas and resize it if needed\n  if ((config.filter?.width || 0) > 0) targetWidth = config.filter.width as number;\n  else if ((config.filter?.height || 0) > 0) targetWidth = originalWidth * ((config.filter.height || 0) / originalHeight);\n  if ((config.filter.height || 0) > 0) targetHeight = config.filter.height as number;\n  else if ((config.filter.width || 0) > 0) targetHeight = originalHeight * ((config.filter.width || 0) / originalWidth);\n  if (!targetWidth || !targetHeight) throw new Error('input error: cannot determine dimension');\n  if (!inCanvas || (inCanvas.width !== targetWidth) || (inCanvas.height !== targetHeight)) inCanvas = canvas(targetWidth, targetHeight);\n\n  // draw input to our canvas\n  const inCtx = inCanvas.getContext('2d') as CanvasRenderingContext2D;\n  if ((typeof ImageData !== 'undefined') && (input instanceof ImageData)) {\n    inCtx.putImageData(input, 0, 0);\n  } else {\n    if (config.filter.flip && typeof inCtx.translate !== 'undefined') {\n      inCtx.translate(originalWidth, 0);\n      inCtx.scale(-1, 1);\n      inCtx.drawImage(input as AnyCanvas, 0, 0, originalWidth, originalHeight, 0, 0, inCanvas.width, inCanvas.height);\n      inCtx.setTransform(1, 0, 0, 1, 0, 0); // resets transforms to defaults\n    } else {\n      inCtx.drawImage(input as AnyCanvas, 0, 0, originalWidth, originalHeight, 0, 0, inCanvas.width, inCanvas.height);\n    }\n  }\n\n  if (!outCanvas || (inCanvas.width !== outCanvas.width) || (inCanvas.height !== outCanvas.height)) outCanvas = canvas(inCanvas.width, inCanvas.height); // init output canvas\n\n  // imagefx transforms using gl from input canvas to output canvas\n  if (config.filter.enabled && env.webgl.supported) {\n    if (!fx) fx = env.browser ? new fxImage.GLImageFilter() : null; // && (typeof document !== 'undefined')\n    env.filter = !!fx;\n    if (!fx?.add) {\n      if (config.debug) log('input process error: cannot initialize filters');\n      env.webgl.supported = false;\n      config.filter.enabled = false;\n      copy(inCanvas, outCanvas); // filter failed to initialize\n      // return { tensor: null, canvas: inCanvas };\n    } else {\n      fx.reset();\n      if (config.filter.brightness !== 0) fx.add('brightness', config.filter.brightness);\n      if (config.filter.contrast !== 0) fx.add('contrast', config.filter.contrast);\n      if (config.filter.sharpness !== 0) fx.add('sharpen', config.filter.sharpness);\n      if (config.filter.blur !== 0) fx.add('blur', config.filter.blur);\n      if (config.filter.saturation !== 0) fx.add('saturation', config.filter.saturation);\n      if (config.filter.hue !== 0) fx.add('hue', config.filter.hue);\n      if (config.filter.negative) fx.add('negative');\n      if (config.filter.sepia) fx.add('sepia');\n      if (config.filter.vintage) fx.add('brownie');\n      if (config.filter.sepia) fx.add('sepia');\n      if (config.filter.kodachrome) fx.add('kodachrome');\n      if (config.filter.technicolor) fx.add('technicolor');\n      if (config.filter.polaroid) fx.add('polaroid');\n      if (config.filter.pixelate !== 0) fx.add('pixelate', config.filter.pixelate);\n      if (fx.get() > 0) outCanvas = fx.apply(inCanvas);\n      else outCanvas = fx.draw(inCanvas);\n    }\n  } else {\n    copy(inCanvas, outCanvas); // if no filters applied, output canvas is input canvas\n    if (fx) fx = null;\n    env.filter = !!fx;\n  }\n\n  if (!getTensor) return { tensor: null, canvas: outCanvas }; // just canvas was requested\n  if (!outCanvas) throw new Error('canvas error: cannot create output');\n\n  // create tensor from image unless input was a tensor already\n  let pixels;\n  let depth = 3;\n  if ((typeof ImageData !== 'undefined' && input instanceof ImageData) || ((input as ImageData).data && (input as ImageData).width && (input as ImageData).height)) { // if input is imagedata, just use it\n    if (env.browser && tf.browser) {\n      pixels = tf.browser ? tf.browser.fromPixels(input) : null;\n    } else {\n      depth = (input as ImageData).data.length / (input as ImageData).height / (input as ImageData).width;\n      // const arr = Uint8Array.from(input['data']);\n      const arr = new Uint8Array((input as ImageData).data.buffer);\n      pixels = tf.tensor(arr, [(input as ImageData).height, (input as ImageData).width, depth], 'int32');\n    }\n  } else {\n    if (!tmpCanvas || (outCanvas.width !== tmpCanvas.width) || (outCanvas.height !== tmpCanvas.height)) tmpCanvas = canvas(outCanvas.width, outCanvas.height); // init output canvas\n    if (tf.browser && env.browser) {\n      if (config.backend === 'webgl' || config.backend === 'humangl' || config.backend === 'webgpu') {\n        pixels = tf.browser.fromPixels(outCanvas); // safe to reuse since both backend and context are gl based\n      } else {\n        tmpCanvas = copy(outCanvas); // cannot use output canvas as it already has gl context so we do a silly one more canvas\n        pixels = tf.browser.fromPixels(tmpCanvas);\n      }\n    } else {\n      const tempCanvas = copy(outCanvas); // cannot use output canvas as it already has gl context so we do a silly one more canvas\n      const tempCtx = tempCanvas.getContext('2d') as CanvasRenderingContext2D;\n      const tempData = tempCtx.getImageData(0, 0, targetWidth, targetHeight);\n      depth = tempData.data.length / targetWidth / targetHeight;\n      const arr = new Uint8Array(tempData.data.buffer);\n      pixels = tf.tensor(arr, [targetWidth, targetHeight, depth]);\n    }\n  }\n  if (depth === 4) { // rgba to rgb\n    const rgb = tf.slice3d(pixels, [0, 0, 0], [-1, -1, 3]); // strip alpha channel\n    tf.dispose(pixels);\n    pixels = rgb;\n  }\n  if (!pixels) throw new Error('input error: cannot create tensor');\n  const casted: Tensor = tf.cast(pixels, 'float32');\n  const tensor: Tensor = config.filter.equalization ? await enhance.histogramEqualization(casted) : tf.expandDims(casted, 0);\n  tf.dispose([pixels, casted]);\n  return { tensor, canvas: (config.filter.return ? outCanvas : null) };\n}\n\n/*\nconst checksum = async (input: Tensor): Promise<number> => { // use tf sum or js based sum loop depending on which is faster\n  const resizeFact = 48;\n  const reduced: Tensor = tf.image.resizeBilinear(input, [Math.trunc((input.shape[1] || 1) / resizeFact), Math.trunc((input.shape[2] || 1) / resizeFact)]);\n  const tfSum = async (): Promise<number> => {\n    const sumT = tf.sum(reduced);\n    const sum0 = await sumT.data();\n    tf.dispose(sumT);\n    return sum0[0];\n  };\n  const jsSum = async (): Promise<number> => {\n    const reducedData = await reduced.data(); // raw image rgb array\n    let sum0 = 0;\n    for (let i = 0; i < reducedData.length / 3; i++) sum0 += reducedData[3 * i + 2]; // look only at green value of each pixel\n    return sum0;\n  };\n  if (last.sumMethod === 0) {\n    const t0 = now();\n    await jsSum();\n    const t1 = now();\n    await tfSum();\n    const t2 = now();\n    last.sumMethod = t1 - t0 < t2 - t1 ? 1 : 2;\n  }\n  const res = last.sumMethod === 1 ? await jsSum() : await tfSum();\n  tf.dispose(reduced);\n  return res;\n};\n*/\n\nexport async function skip(config: Partial<Config>, input: Tensor) {\n  let skipFrame = false;\n  if (config.cacheSensitivity === 0 || !input.shape || input.shape.length !== 4 || input.shape[1] > 2048 || input.shape[2] > 2048) return skipFrame; // cache disabled or input is invalid or too large for cache analysis\n\n  /*\n  const checkSum = await checksum(input);\n  const diff = 100 * (Math.max(checkSum, last.inputSum) / Math.min(checkSum, last.inputSum) - 1);\n  last.inputSum = checkSum;\n  // if previous frame was skipped, skip this frame if changed more than cacheSensitivity\n  // if previous frame was not skipped, then look for cacheSensitivity or difference larger than one in previous frame to avoid resetting cache in subsequent frames unnecessarily\n  let skipFrame = diff < Math.max(config.cacheSensitivity, last.cacheDiff);\n  // if difference is above 10x threshold, don't use last value to force reset cache for significant change of scenes or images\n  last.cacheDiff = diff > 10 * config.cacheSensitivity ? 0 : diff;\n  skipFrame = skipFrame && (last.cacheDiff > 0); // if no cached diff value then force no skip\n  */\n\n  if (!last.inputTensor) {\n    last.inputTensor = tf.clone(input);\n  } else if (last.inputTensor.shape[1] !== input.shape[1] || last.inputTensor.shape[2] !== input.shape[2]) { // input resolution changed\n    tf.dispose(last.inputTensor);\n    last.inputTensor = tf.clone(input);\n  } else {\n    const t: Record<string, Tensor> = {};\n    t.diff = tf.sub(input, last.inputTensor);\n    t.squared = tf.mul(t.diff, t.diff);\n    t.sum = tf.sum(t.squared);\n    const diffSum = await t.sum.data();\n    const diffRelative = diffSum[0] / (input.shape[1] || 1) / (input.shape[2] || 1) / 255 / 3; // squared difference relative to input resolution and averaged per channel\n    tf.dispose([last.inputTensor, t.diff, t.squared, t.sum]);\n    last.inputTensor = tf.clone(input);\n    skipFrame = diffRelative <= (config.cacheSensitivity || 0);\n  }\n  return skipFrame;\n}\n\nexport async function compare(config: Partial<Config>, input1: Tensor, input2: Tensor): Promise<number> {\n  const t: Record<string, Tensor> = {};\n  if (!input1 || !input2 || input1.shape.length !== 4 || input1.shape.length !== input2.shape.length) {\n    if (!config.debug) log('invalid input tensor or tensor shapes do not match:', input1.shape, input2.shape);\n    return 0;\n  }\n  if (input1.shape[0] !== 1 || input2.shape[0] !== 1 || input1.shape[3] !== 3 || input2.shape[3] !== 3) {\n    if (!config.debug) log('input tensors must be of shape [1, height, width, 3]:', input1.shape, input2.shape);\n    return 0;\n  }\n  t.input1 = tf.clone(input1);\n  t.input2 = (input1.shape[1] !== input2.shape[1] || input1.shape[2] !== input2.shape[2]) ? tf.image.resizeBilinear(input2, [input1.shape[1], input1.shape[2]]) : tf.clone(input2);\n  t.diff = tf.sub(t.input1, t.input2);\n  t.squared = tf.mul(t.diff, t.diff);\n  t.sum = tf.sum(t.squared);\n  const diffSum = await t.sum.data();\n  const diffRelative = diffSum[0] / (input1.shape[1] || 1) / (input1.shape[2] || 1) / 255 / 3;\n  tf.dispose([t.input1, t.input2, t.diff, t.squared, t.sum]);\n  return diffRelative;\n}\n", "import * as tf from '../../dist/tfjs.esm.js';\nimport * as image from '../image/image';\n\n/** Env class that holds detected capabilities */\nexport class Env {\n  /** Running in Browser */\n  browser: boolean;\n  /** Running in NodeJS */\n  node: boolean;\n  /** Running in WebWorker thread */\n  worker: boolean;\n  /** Detected platform */\n  platform: string = '';\n  /** Detected agent */\n  agent: string = '';\n  /** List of supported backends */\n  backends: string[] = [];\n  /** Has any work been performed so far */\n  initial: boolean;\n  /** Are image filters supported? */\n  filter: boolean | undefined;\n  /** TFJS instance details */\n  tfjs: {\n    version: undefined | string,\n  };\n  /** Is offscreenCanvas supported? */\n  offscreen: undefined | boolean;\n  /** Are performance counter instant values or additive */\n  perfadd: boolean = false;\n  /** If using tfjs-node get version of underlying tensorflow shared library and if gpu acceleration is enabled */\n  tensorflow: {\n    version: undefined | string,\n    gpu: undefined | boolean,\n  } = {\n      version: undefined,\n      gpu: undefined,\n    };\n  /** WASM detected capabilities */\n  wasm: {\n    supported: undefined | boolean,\n    backend: undefined | boolean,\n    simd: undefined | boolean,\n    multithread: undefined | boolean,\n  } = {\n      supported: undefined,\n      backend: undefined,\n      simd: undefined,\n      multithread: undefined,\n    };\n  /** WebGL detected capabilities */\n  webgl: {\n    supported: undefined | boolean,\n    backend: undefined | boolean,\n    version: undefined | string,\n    renderer: undefined | string,\n  } = {\n      supported: undefined,\n      backend: undefined,\n      version: undefined,\n      renderer: undefined,\n    };\n  /** WebGPU detected capabilities */\n  webgpu: {\n    supported: undefined | boolean,\n    backend: undefined | boolean,\n    adapter: undefined | string,\n  } = {\n      supported: undefined,\n      backend: undefined,\n      adapter: undefined,\n    };\n  /** CPU info */\n  cpu: {\n    model: undefined | string,\n    flags: string[],\n  } = {\n      model: undefined,\n      flags: [],\n    };\n  /** List of supported kernels for current backend */\n  kernels: string[] = [];\n  /** MonkeyPatch for Canvas */\n  Canvas: undefined;\n  /** MonkeyPatch for Image */\n  Image: undefined;\n  /** MonkeyPatch for ImageData */\n  ImageData: undefined;\n\n  constructor() {\n    this.browser = typeof navigator !== 'undefined';\n    this.node = (typeof process !== 'undefined') && (typeof process.versions !== 'undefined') && (typeof process.versions.node !== 'undefined');\n    this.tfjs = { version: tf.version['tfjs-core'] };\n    this.offscreen = typeof OffscreenCanvas !== 'undefined';\n    this.initial = true;\n\n    // @ts-ignore WorkerGlobalScope evaluated in browser only\n    this.worker = this.browser && this.offscreen ? (typeof WorkerGlobalScope !== 'undefined') : undefined;\n    if (typeof navigator !== 'undefined') {\n      const raw = navigator.userAgent.match(/\\(([^()]+)\\)/g);\n      if (raw?.[0]) {\n        const platformMatch = raw[0].match(/\\(([^()]+)\\)/g);\n        this.platform = (platformMatch?.[0]) ? platformMatch[0].replace(/\\(|\\)/g, '') : '';\n        this.agent = navigator.userAgent.replace(raw[0], '');\n        if (this.platform[1]) this.agent = this.agent.replace(raw[1], '');\n        this.agent = this.agent.replace(/  /g, ' ');\n        // chrome offscreencanvas gpu memory leak\n        /*\n        const isChrome = env.agent.match(/Chrome\\/.[0-9]/g);\n        const verChrome = isChrome && isChrome[0] ? isChrome[0].split('/')[1] : 0;\n        if (verChrome > 92 && verChrome < 96) {\n          log('disabling offscreenCanvas due to browser error:', isChrome ? isChrome[0] : 'unknown');\n          this.offscreen = false;\n        }\n        */\n      }\n    } else if (typeof process !== 'undefined') {\n      this.platform = `${process.platform} ${process.arch}`;\n      this.agent = `NodeJS ${process.version}`;\n    }\n  }\n\n  /** update backend information */\n  async updateBackend() {\n    // analyze backends\n    this.backends = Object.keys(tf.engine().registryFactory);\n    this.tensorflow = {\n      version: (tf.backend().binding ? tf.backend().binding.TF_Version : undefined),\n      gpu: (tf.backend().binding ? tf.backend().binding.isUsingGpuDevice() : undefined),\n    };\n    this.wasm.supported = typeof WebAssembly !== 'undefined';\n    this.wasm.backend = this.backends.includes('wasm');\n    if (this.wasm.supported && this.wasm.backend && tf.getBackend() === 'wasm') {\n      this.wasm.simd = tf.env().get('WASM_HAS_SIMD_SUPPORT');\n      this.wasm.multithread = tf.env().get('WASM_HAS_MULTITHREAD_SUPPORT');\n    }\n    const c = image.canvas(100, 100);\n    const ctx = c ? c.getContext('webgl2') : undefined; // causes too many gl contexts\n    // const ctx = typeof tf.backend().getGPGPUContext !== undefined ? tf.backend().getGPGPUContext : null;\n    this.webgl.supported = typeof ctx !== 'undefined';\n    this.webgl.backend = this.backends.includes('webgl');\n    if (this.webgl.supported && this.webgl.backend && (tf.getBackend() === 'webgl' || tf.getBackend() === 'humangl')) {\n      const gl = tf.backend().gpgpu !== 'undefined' ? await tf.backend().getGPGPUContext().gl : null;\n      if (gl) {\n        this.webgl.version = gl.getParameter(gl.VERSION);\n        this.webgl.renderer = gl.getParameter(gl.RENDERER);\n      }\n    }\n    this.webgpu.supported = this.browser && typeof navigator.gpu !== 'undefined';\n    this.webgpu.backend = this.backends.includes('webgpu');\n    try {\n      if (this.webgpu.supported) {\n        const adapter = await navigator.gpu.requestAdapter();\n        this.webgpu.adapter = adapter ? adapter.name : undefined;\n      }\n    } catch {\n      this.webgpu.supported = false;\n    }\n    try {\n      this.kernels = tf.getKernelsForBackend(tf.getBackend()).map((kernel) => (kernel.kernelName as string).toLowerCase());\n    } catch { /**/ }\n  }\n\n  /** update cpu information */\n  updateCPU() {\n    const cpu = { model: '', flags: [] };\n    if (this.node && this.platform.startsWith('linux')) {\n      /*\n      const fs = require('fs');\n      try {\n        const data = fs.readFileSync('/proc/cpuinfo').toString();\n        for (const line of data.split('\\n')) {\n          if (line.startsWith('model name')) cpu.model = line.match(/:(.*)/g)[0].replace(':', '').trim();\n          if (line.startsWith('flags')) cpu.flags = line.match(/:(.*)/g)[0].replace(':', '').trim().split(' ').sort();\n        }\n      } catch { }\n      */\n    }\n    if (!this.cpu) Object.defineProperty(this, 'cpu', { value: cpu });\n    else this.cpu = cpu;\n  }\n}\n\nexport const env = new Env();\n", "/**\n * Loader and Validator for all models used by Human\n */\n\nimport { env } from './util/env';\nimport { log } from './util/util';\nimport * as gear from './gear/gear';\nimport * as ssrnetAge from './gear/ssrnet-age';\nimport * as ssrnetGender from './gear/ssrnet-gender';\nimport * as antispoof from './face/antispoof';\nimport * as blazeface from './face/blazeface';\nimport * as blazepose from './body/blazepose';\nimport * as centernet from './object/centernet';\nimport * as efficientpose from './body/efficientpose';\nimport * as emotion from './gear/emotion';\nimport * as mobilefacenet from './face/mobilefacenet';\nimport * as insightface from './face/insightface';\nimport * as facemesh from './face/facemesh';\nimport * as faceres from './face/faceres';\nimport * as handpose from './hand/handpose';\nimport * as handtrack from './hand/handtrack';\nimport * as iris from './face/iris';\nimport * as liveness from './face/liveness';\nimport * as movenet from './body/movenet';\nimport * as nanodet from './object/nanodet';\nimport * as posenet from './body/posenet';\nimport * as segmentation from './segmentation/segmentation';\nimport { modelStats, ModelInfo } from './tfjs/load';\nimport type { GraphModel } from './tfjs/types';\nimport type { Human } from './human';\n\n/** Instances of all possible TFJS Graph Models used by Human\n * - loaded as needed based on configuration\n * - initialized explictly with `human.load()` method\n * - initialized implicity on first call to `human.detect()`\n * - each model can be `null` if not loaded, instance of `GraphModel` if loaded or `Promise` if loading\n */\nexport class Models {\n  ssrnetage: null | GraphModel | Promise<GraphModel> = null;\n  gear: null | GraphModel | Promise<GraphModel> = null;\n  blazeposedetect: null | GraphModel | Promise<GraphModel> = null;\n  blazepose: null | GraphModel | Promise<GraphModel> = null;\n  centernet: null | GraphModel | Promise<GraphModel> = null;\n  efficientpose: null | GraphModel | Promise<GraphModel> = null;\n  mobilefacenet: null | GraphModel | Promise<GraphModel> = null;\n  insightface: null | GraphModel | Promise<GraphModel> = null;\n  emotion: null | GraphModel | Promise<GraphModel> = null;\n  facedetect: null | GraphModel | Promise<GraphModel> = null;\n  faceiris: null | GraphModel | Promise<GraphModel> = null;\n  facemesh: null | GraphModel | Promise<GraphModel> = null;\n  faceres: null | GraphModel | Promise<GraphModel> = null;\n  ssrnetgender: null | GraphModel | Promise<GraphModel> = null;\n  handpose: null | GraphModel | Promise<GraphModel> = null;\n  handskeleton: null | GraphModel | Promise<GraphModel> = null;\n  handtrack: null | GraphModel | Promise<GraphModel> = null;\n  liveness: null | GraphModel | Promise<GraphModel> = null;\n  movenet: null | GraphModel | Promise<GraphModel> = null;\n  nanodet: null | GraphModel | Promise<GraphModel> = null;\n  posenet: null | GraphModel | Promise<GraphModel> = null;\n  segmentation: null | GraphModel | Promise<GraphModel> = null;\n  antispoof: null | GraphModel | Promise<GraphModel> = null;\n}\n\nexport interface ModelStats {\n  numLoadedModels: number,\n  numEnabledModels: undefined,\n  numDefinedModels: number,\n  percentageLoaded: number,\n  totalSizeFromManifest: number,\n  totalSizeWeights: number,\n  totalSizeLoading: number,\n  totalSizeEnabled: undefined,\n  modelStats: ModelInfo[],\n}\n\nexport const getModelStats = (instance: Human): ModelStats => {\n  let totalSizeFromManifest = 0;\n  let totalSizeWeights = 0;\n  let totalSizeLoading = 0;\n  for (const m of Object.values(modelStats)) {\n    totalSizeFromManifest += m.sizeFromManifest;\n    totalSizeWeights += m.sizeLoadedWeights;\n    totalSizeLoading += m.sizeDesired;\n  }\n  const percentageLoaded = totalSizeLoading > 0 ? totalSizeWeights / totalSizeLoading : 0;\n  return {\n    numLoadedModels: Object.values(modelStats).length,\n    numEnabledModels: undefined,\n    numDefinedModels: Object.keys(instance.models).length,\n    percentageLoaded,\n    totalSizeFromManifest,\n    totalSizeWeights,\n    totalSizeLoading,\n    totalSizeEnabled: undefined,\n    modelStats: Object.values(modelStats),\n  };\n};\n\nexport function reset(instance: Human): void {\n  // if (instance.config.debug) log('resetting loaded models');\n  for (const model of Object.keys(instance.models)) instance.models[model as keyof Models] = null;\n}\n\n/** Load method preloads all instance.configured models on-demand */\nexport async function load(instance: Human): Promise<void> {\n  if (env.initial) reset(instance);\n  if (instance.config.hand.enabled) { // handpose model is a combo that must be loaded as a whole\n    if (!instance.models.handpose && instance.config.hand.detector?.modelPath?.includes('handdetect')) {\n      [instance.models.handpose, instance.models.handskeleton] = await handpose.load(instance.config);\n    }\n    if (!instance.models.handskeleton && instance.config.hand.landmarks && instance.config.hand.detector?.modelPath?.includes('handdetect')) {\n      [instance.models.handpose, instance.models.handskeleton] = await handpose.load(instance.config);\n    }\n  }\n  if (instance.config.body.enabled && !instance.models.blazepose && instance.config.body.modelPath?.includes('blazepose')) instance.models.blazepose = blazepose.loadPose(instance.config);\n  if (instance.config.body.enabled && !instance.models.blazeposedetect && instance.config.body['detector'] && instance.config.body['detector'].modelPath) instance.models.blazeposedetect = blazepose.loadDetect(instance.config);\n  if (instance.config.body.enabled && !instance.models.efficientpose && instance.config.body.modelPath?.includes('efficientpose')) instance.models.efficientpose = efficientpose.load(instance.config);\n  if (instance.config.body.enabled && !instance.models.movenet && instance.config.body.modelPath?.includes('movenet')) instance.models.movenet = movenet.load(instance.config);\n  if (instance.config.body.enabled && !instance.models.posenet && instance.config.body.modelPath?.includes('posenet')) instance.models.posenet = posenet.load(instance.config);\n  if (instance.config.face.enabled && !instance.models.facedetect) instance.models.facedetect = blazeface.load(instance.config);\n  if (instance.config.face.enabled && instance.config.face.antispoof?.enabled && !instance.models.antispoof) instance.models.antispoof = antispoof.load(instance.config);\n  if (instance.config.face.enabled && instance.config.face.liveness?.enabled && !instance.models.liveness) instance.models.liveness = liveness.load(instance.config);\n  if (instance.config.face.enabled && instance.config.face.description?.enabled && !instance.models.faceres) instance.models.faceres = faceres.load(instance.config);\n  if (instance.config.face.enabled && instance.config.face.emotion?.enabled && !instance.models.emotion) instance.models.emotion = emotion.load(instance.config);\n  if (instance.config.face.enabled && instance.config.face.iris?.enabled && !instance.config.face.attention?.enabled && !instance.models.faceiris) instance.models.faceiris = iris.load(instance.config);\n  if (instance.config.face.enabled && instance.config.face.mesh?.enabled && (!instance.models.facemesh)) instance.models.facemesh = facemesh.load(instance.config);\n  if (instance.config.face.enabled && instance.config.face['gear']?.enabled && !instance.models.gear) instance.models.gear = gear.load(instance.config);\n  if (instance.config.face.enabled && instance.config.face['ssrnet']?.enabled && !instance.models.ssrnetage) instance.models.ssrnetage = ssrnetAge.load(instance.config);\n  if (instance.config.face.enabled && instance.config.face['ssrnet']?.enabled && !instance.models.ssrnetgender) instance.models.ssrnetgender = ssrnetGender.load(instance.config);\n  if (instance.config.face.enabled && instance.config.face['mobilefacenet']?.enabled && !instance.models.mobilefacenet) instance.models.mobilefacenet = mobilefacenet.load(instance.config);\n  if (instance.config.face.enabled && instance.config.face['insightface']?.enabled && !instance.models.insightface) instance.models.insightface = insightface.load(instance.config);\n  if (instance.config.hand.enabled && !instance.models.handtrack && instance.config.hand.detector?.modelPath?.includes('handtrack')) instance.models.handtrack = handtrack.loadDetect(instance.config);\n  if (instance.config.hand.enabled && instance.config.hand.landmarks && !instance.models.handskeleton && instance.config.hand.detector?.modelPath?.includes('handtrack')) instance.models.handskeleton = handtrack.loadSkeleton(instance.config);\n  if (instance.config.object.enabled && !instance.models.centernet && instance.config.object.modelPath?.includes('centernet')) instance.models.centernet = centernet.load(instance.config);\n  if (instance.config.object.enabled && !instance.models.nanodet && instance.config.object.modelPath?.includes('nanodet')) instance.models.nanodet = nanodet.load(instance.config);\n  if (instance.config.segmentation.enabled && !instance.models.segmentation) instance.models.segmentation = segmentation.load(instance.config);\n\n  // models are loaded in parallel asynchronously so lets wait until they are actually loaded\n  for await (const model of Object.keys(instance.models)) {\n    if (instance.models[model as keyof Models] && typeof instance.models[model as keyof Models] !== 'undefined') {\n      instance.models[model as keyof Models] = await instance.models[model as keyof Models];\n    }\n  }\n}\n\nlet instance: Human;\nexport interface KernelOps { name: string, url: string, missing: string[], ops: string[] }\n\nexport function validateModel(newInstance: Human | null, model: GraphModel | null, name: string): KernelOps | null {\n  if (newInstance) instance = newInstance;\n  if (!model) return null;\n  if (!instance) log('instance not registred');\n  if (!instance.config.validateModels) return null;\n  const simpleOps = ['const', 'placeholder', 'noop', 'pad', 'squeeze', 'add', 'sub', 'mul', 'div'];\n  const ignoreOps = ['biasadd', 'fusedbatchnormv3', 'matmul'];\n  const ops: string[] = [];\n  const missing: string[] = [];\n  interface Op { name: string, category: string, op: string }\n  const url = model['modelUrl'] as string;\n  const executor = model['executor'];\n  if (executor?.graph?.nodes) {\n    for (const kernel of Object.values(executor.graph.nodes)) {\n      const op = (kernel as Op).op.toLowerCase();\n      if (!ops.includes(op)) ops.push(op);\n    }\n  } else {\n    if (!executor && instance.config.debug) {\n      log('model not loaded', name);\n    }\n  }\n  for (const op of ops) {\n    if (!simpleOps.includes(op) // exclude simple ops\n      && !ignoreOps.includes(op) // exclude specific ops\n      && !instance.env.kernels.includes(op) // check actual kernel ops\n      && !instance.env.kernels.includes(op.replace('_', '')) // check variation without _\n      && !instance.env.kernels.includes(op.replace('native', '')) // check standard variation\n      && !instance.env.kernels.includes(op.replace('v2', ''))) { // check non-versioned variation\n      missing.push(op);\n    }\n  }\n  if (instance.config.debug && missing.length > 0) log('model validation failed:', name, missing);\n  return missing.length > 0 ? { name, missing, ops, url } : null;\n}\n\nexport function validate(newInstance: Human): { name: string, missing: string[] }[] {\n  instance = newInstance;\n  const missing: KernelOps[] = [];\n  for (const defined of Object.keys(instance.models)) {\n    const model: GraphModel | null = instance.models[defined as keyof Models] as GraphModel | null;\n    if (!model) continue;\n    const res = validateModel(instance, model, defined);\n    if (res) missing.push(res);\n  }\n  return missing;\n}\n", "/**\n * GEAR [gender/emotion/age/race] model implementation\n *\n * Based on: [**GEAR Predictor**](https://github.com/Udolf15/GEAR-Predictor)\n */\n\nimport { log, now } from '../util/util';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport type { Gender, Race } from '../result';\nimport type { Config } from '../config';\nimport type { GraphModel, Tensor } from '../tfjs/types';\nimport { env } from '../util/env';\n\nexport interface GearType { age: number, gender: Gender, genderScore: number, race: { score: number, race: Race }[] }\nlet model: GraphModel | null;\nconst last: GearType[] = [];\nconst raceNames = ['white', 'black', 'asian', 'indian', 'other'];\nconst ageWeights = [15, 23, 28, 35.5, 45.5, 55.5, 65];\nlet lastCount = 0;\nlet lastTime = 0;\nlet skipped = Number.MAX_SAFE_INTEGER;\n\nexport async function load(config: Config) {\n  if (env.initial) model = null;\n  if (!model) model = await loadModel(config.face.gear?.modelPath);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n\nexport async function predict(image: Tensor, config: Config, idx: number, count: number): Promise<GearType> {\n  if (!model) return { age: 0, gender: 'unknown', genderScore: 0, race: [] };\n  const skipFrame = skipped < (config.face.gear?.skipFrames || 0);\n  const skipTime = (config.face.gear?.skipTime || 0) > (now() - lastTime);\n  if (config.skipAllowed && skipTime && skipFrame && (lastCount === count) && last[idx]) {\n    skipped++;\n    return last[idx];\n  }\n  skipped = 0;\n  return new Promise(async (resolve) => {\n    if (!model?.inputs[0].shape) return;\n    const t: Record<string, Tensor> = {};\n    // t.resize = tf.image.resizeBilinear(image, [model?.inputs[0].shape[2], model?.inputs[0].shape[1]], false);\n    const box = [[0.0, 0.10, 0.90, 0.90]]; // empyrical values for top, left, bottom, right\n    t.resize = tf.image.cropAndResize(image, box, [0], [model.inputs[0].shape[2], model.inputs[0].shape[1]]);\n    const obj: GearType = { age: 0, gender: 'unknown', genderScore: 0, race: [] };\n    if (config.face.gear?.enabled) [t.age, t.gender, t.race] = model.execute(t.resize, ['age_output', 'gender_output', 'race_output']) as Tensor[];\n    const gender = await t.gender.data();\n    obj.gender = gender[0] > gender[1] ? 'male' : 'female';\n    obj.genderScore = Math.round(100 * (gender[0] > gender[1] ? gender[0] : gender[1])) / 100;\n    const race = await t.race.data();\n    for (let i = 0; i < race.length; i++) {\n      if (race[i] > (config.face.gear?.minConfidence || 0.2)) obj.race.push({ score: Math.round(100 * race[i]) / 100, race: raceNames[i] as Race });\n    }\n    obj.race.sort((a, b) => b.score - a.score);\n    // {0: 'Below20', 1: '21-25', 2: '26-30', 3: '31-40',4: '41-50', 5: '51-60', 6: 'Above60'}\n    const ageDistribution = Array.from(await t.age.data());\n    const ageSorted = ageDistribution.map((a, i) => [ageWeights[i], a]).sort((a, b) => b[1] - a[1]);\n    let age = ageSorted[0][0]; // pick best starting point\n    for (let i = 1; i < ageSorted.length; i++) age += ageSorted[i][1] * (ageSorted[i][0] - age); // adjust with each other choice by weight\n    obj.age = Math.round(10 * age) / 10;\n    Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n    last[idx] = obj;\n    lastCount = count;\n    lastTime = now();\n    resolve(obj);\n  });\n}\n", "import * as tf from '../../dist/tfjs.esm.js';\nimport type { Tensor } from './types';\n\nexport const constants: Record<string, Tensor | number | number[]> = {\n  tf255: 255.0,\n  tf1: 1.0,\n  tf2: 2.0,\n  tf05: 0.5,\n  tf127: 127.5,\n  rgb: [0.2989, 0.5870, 0.1140],\n};\n\nexport function init() {\n  constants.tf255 = tf.scalar(255.0, 'float32');\n  constants.tf1 = tf.scalar(1.0, 'float32');\n  constants.tf2 = tf.scalar(2.0, 'float32');\n  constants.tf05 = tf.scalar(0.5, 'float32');\n  constants.tf127 = tf.scalar(127.5, 'float32');\n  constants.rgb = tf.tensor1d([0.2989, 0.5870, 0.1140], 'float32'); // factors for red/green/blue colors when converting to grayscale\n}\n", "/**\n * Age model implementation\n *\n * Based on: [**SSR-Net**](https://github.com/shamangary/SSR-Net)\n */\n\nimport { log, now } from '../util/util';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport { env } from '../util/env';\nimport { constants } from '../tfjs/constants';\nimport type { Config } from '../config';\nimport type { GraphModel, Tensor } from '../tfjs/types';\n\nlet model: GraphModel | null;\nconst last: { age: number }[] = [];\nlet lastCount = 0;\nlet lastTime = 0;\nlet skipped = Number.MAX_SAFE_INTEGER;\n\nexport async function load(config: Config) {\n  if (env.initial) model = null;\n  if (!model) model = await loadModel(config.face['ssrnet'].modelPathAge);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n\nexport async function predict(image: Tensor, config: Config, idx: number, count: number): Promise<{ age: number }> {\n  if (!model) return { age: 0 };\n  const skipFrame = skipped < (config.face['ssrnet']?.skipFrames || 0);\n  const skipTime = (config.face['ssrnet']?.skipTime || 0) > (now() - lastTime);\n  if (config.skipAllowed && skipFrame && skipTime && (lastCount === count) && last[idx]?.age && (last[idx]?.age > 0)) {\n    skipped++;\n    return last[idx];\n  }\n  skipped = 0;\n  return new Promise(async (resolve) => {\n    if (!model?.inputs || !model.inputs[0] || !model.inputs[0].shape) return;\n    const t: Record<string, Tensor> = {};\n    t.resize = tf.image.resizeBilinear(image, [model.inputs[0].shape[2], model.inputs[0].shape[1]], false);\n    t.enhance = tf.mul(t.resize, constants.tf255);\n    const obj = { age: 0 };\n    if (config.face['ssrnet']?.enabled) t.age = model.execute(t.enhance) as Tensor;\n    if (t.age) {\n      const data = await t.age.data();\n      obj.age = Math.trunc(10 * data[0]) / 10;\n    }\n    Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n    last[idx] = obj;\n    lastCount = count;\n    lastTime = now();\n    resolve(obj);\n  });\n}\n", "/**\n * Gender model implementation\n *\n * Based on: [**SSR-Net**](https://github.com/shamangary/SSR-Net)\n */\n\nimport { log, now } from '../util/util';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport { constants } from '../tfjs/constants';\nimport type { Gender } from '../result';\nimport type { Config } from '../config';\nimport type { GraphModel, Tensor } from '../tfjs/types';\nimport { env } from '../util/env';\n\nlet model: GraphModel | null;\nconst last: { gender: Gender, genderScore: number }[] = [];\nlet lastCount = 0;\nlet lastTime = 0;\nlet skipped = Number.MAX_SAFE_INTEGER;\n\n// tuning values\nconst rgb = [0.2989, 0.5870, 0.1140]; // factors for red/green/blue colors when converting to grayscale\n\nexport async function load(config: Config) {\n  if (env.initial) model = null;\n  if (!model) model = await loadModel(config.face['ssrnet']?.modelPathGender);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n\nexport async function predict(image: Tensor, config: Config, idx, count): Promise<{ gender: Gender, genderScore: number }> {\n  if (!model) return { gender: 'unknown', genderScore: 0 };\n  const skipFrame = skipped < (config.face['ssrnet']?.skipFrames || 0);\n  const skipTime = (config.face['ssrnet']?.skipTime || 0) > (now() - lastTime);\n  if (config.skipAllowed && skipFrame && skipTime && (lastCount === count) && last[idx]?.gender && (last[idx]?.genderScore > 0)) {\n    skipped++;\n    return last[idx];\n  }\n  skipped = 0;\n  return new Promise(async (resolve) => {\n    if (!model?.inputs[0].shape) return;\n    const t: Record<string, Tensor> = {};\n    t.resize = tf.image.resizeBilinear(image, [model.inputs[0].shape[2], model.inputs[0].shape[1]], false);\n    t.enhance = tf.tidy(() => {\n      const [red, green, blue] = tf.split(t.resize, 3, 3);\n      const redNorm = tf.mul(red, rgb[0]);\n      const greenNorm = tf.mul(green, rgb[1]);\n      const blueNorm = tf.mul(blue, rgb[2]);\n      const grayscale = tf.addN([redNorm, greenNorm, blueNorm]);\n      const normalize = tf.mul(tf.sub(grayscale, constants.tf05), 2); // range grayscale:-1..1\n      return normalize;\n    });\n    const obj: { gender: Gender, genderScore: number } = { gender: 'unknown', genderScore: 0 };\n    if (config.face['ssrnet']?.enabled) t.gender = model.execute(t.enhance) as Tensor;\n    const data = await t.gender.data();\n    obj.gender = data[0] > data[1] ? 'female' : 'male'; // returns two values 0..1, bigger one is prediction\n    obj.genderScore = data[0] > data[1] ? (Math.trunc(100 * data[0]) / 100) : (Math.trunc(100 * data[1]) / 100);\n    Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n    last[idx] = obj;\n    lastCount = count;\n    lastTime = now();\n    resolve(obj);\n  });\n}\n", "/**\n * Anti-spoofing model implementation\n */\n\nimport { log, now } from '../util/util';\nimport type { Config } from '../config';\nimport type { GraphModel, Tensor } from '../tfjs/types';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport { env } from '../util/env';\n\nlet model: GraphModel | null;\nconst cached: number[] = [];\nlet skipped = Number.MAX_SAFE_INTEGER;\nlet lastCount = 0;\nlet lastTime = 0;\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (env.initial) model = null;\n  if (!model) model = await loadModel(config.face.antispoof?.modelPath);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n\nexport async function predict(image: Tensor, config: Config, idx: number, count: number): Promise<number> {\n  if (!model || !model?.['executor']) return 0;\n  const skipTime = (config.face.antispoof?.skipTime || 0) > (now() - lastTime);\n  const skipFrame = skipped < (config.face.antispoof?.skipFrames || 0);\n  if (config.skipAllowed && skipTime && skipFrame && (lastCount === count) && cached[idx]) {\n    skipped++;\n    return cached[idx];\n  }\n  skipped = 0;\n  return new Promise(async (resolve) => {\n    const resize = tf.image.resizeBilinear(image, [model?.inputs[0].shape ? model.inputs[0].shape[2] : 0, model?.inputs[0].shape ? model.inputs[0].shape[1] : 0], false);\n    const res = model?.execute(resize) as Tensor;\n    const num = (await res.data())[0];\n    cached[idx] = Math.round(100 * num) / 100;\n    lastCount = count;\n    lastTime = now();\n    tf.dispose([resize, res]);\n    resolve(cached[idx]);\n  });\n}\n", "/**\n * BlazeFace, FaceMesh & Iris model implementation\n * See `facemesh.ts` for entry point\n */\n\nexport const meshAnnotations: Record<string, number[]> = {\n  silhouette: [\n    10, 338, 297, 332, 284, 251, 389, 356, 454, 323, 361, 288,\n    397, 365, 379, 378, 400, 377, 152, 148, 176, 149, 150, 136,\n    172, 58, 132, 93, 234, 127, 162, 21, 54, 103, 67, 109,\n  ],\n  // lipsUpperOuter: [61, 185, 40, 39, 37, 0, 267, 269, 270, 409, 291], // 11\n  // lipsLowerOuter: [146, 91, 181, 84, 17, 314, 405, 321, 375, 291], // 10\n  // lipsUpperInner: [78, 191, 80, 81, 82, 13, 312, 311, 310, 415, 308], // 11\n  // lipsLowerInner: [78, 95, 88, 178, 87, 14, 317, 402, 318, 324, 308], // 11\n  lipsUpperOuter: [185, 40, 39, 37, 0, 267, 269, 270, 409],\n  lipsLowerOuter: [61, 146, 91, 181, 84, 17, 314, 405, 321, 375, 291],\n  lipsUpperInner: [191, 80, 81, 82, 13, 312, 311, 310, 415],\n  lipsLowerInner: [78, 95, 88, 178, 87, 14, 317, 402, 318, 324, 308],\n  lipsLowerSemiOuter: [76, 77, 90, 180, 85, 16, 315, 404, 320, 307, 306],\n  lipsUpperSemiOuter: [184, 74, 73, 72, 11, 302, 303, 304, 408],\n  lipsLowerSemiInner: [62, 96, 89, 179, 86, 15, 316, 403, 319, 325, 292],\n  lipsUpperSemiInner: [183, 42, 41, 38, 12, 268, 271, 272, 407],\n  rightEyeUpper0: [246, 161, 160, 159, 158, 157, 173], // 7\n  rightEyeLower0: [33, 7, 163, 144, 145, 153, 154, 155, 133], // 9\n  rightEyeUpper1: [247, 30, 29, 27, 28, 56, 190], // 7\n  rightEyeLower1: [130, 25, 110, 24, 23, 22, 26, 112, 243], // 9\n  rightEyeUpper2: [113, 225, 224, 223, 222, 221, 189], // 7\n  rightEyeLower2: [226, 31, 228, 229, 230, 231, 232, 233, 244], // 9\n  rightEyeLower3: [143, 111, 117, 118, 119, 120, 121, 128, 245], // 9\n  rightEyebrowUpper: [156, 70, 63, 105, 66, 107, 55, 193], // 8\n  rightEyebrowLower: [35, 124, 46, 53, 52, 65], // 6\n  rightEyeIris: [473, 474, 475, 476, 477], // 5\n  leftEyeUpper0: [466, 388, 387, 386, 385, 384, 398],\n  leftEyeLower0: [263, 249, 390, 373, 374, 380, 381, 382, 362],\n  leftEyeUpper1: [467, 260, 259, 257, 258, 286, 414],\n  leftEyeLower1: [359, 255, 339, 254, 253, 252, 256, 341, 463],\n  leftEyeUpper2: [342, 445, 444, 443, 442, 441, 413],\n  leftEyeLower2: [446, 261, 448, 449, 450, 451, 452, 453, 464],\n  leftEyeLower3: [372, 340, 346, 347, 348, 349, 350, 357, 465],\n  leftEyebrowUpper: [383, 300, 293, 334, 296, 336, 285, 417],\n  leftEyebrowLower: [265, 353, 276, 283, 282, 295],\n  leftEyeIris: [468, 469, 470, 471, 472],\n  midwayBetweenEyes: [168],\n  noseTip: [1],\n  noseBottom: [2],\n  noseRightCorner: [98],\n  noseLeftCorner: [327],\n  rightCheek: [205],\n  leftCheek: [425],\n};\n\nexport const meshLandmarks: Record<string, number | number[]> = {\n  count: 468,\n  mouth: 13,\n  symmetryLine: [13, meshAnnotations.midwayBetweenEyes[0]],\n};\n\nexport const blazeFaceLandmarks: Record<string, number | number[]> = {\n  leftEye: 0,\n  rightEye: 1,\n  nose: 2,\n  mouth: 3,\n  leftEar: 4,\n  rightEar: 5,\n  symmetryLine: [3, 2],\n};\n\nexport const irisIndices: { key: string, indices: number[] }[] = [ // A mapping from facemesh model keypoints to iris model keypoints.\n  { key: 'EyeUpper0', indices: [9, 10, 11, 12, 13, 14, 15] }, // 7 x 3d\n  { key: 'EyeUpper1', indices: [25, 26, 27, 28, 29, 30, 31] }, // 7 x 3d\n  { key: 'EyeUpper2', indices: [41, 42, 43, 44, 45, 46, 47] }, // 7 x 3d\n  { key: 'EyeLower0', indices: [0, 1, 2, 3, 4, 5, 6, 7, 8] }, // 7 x 3d\n  { key: 'EyeLower1', indices: [16, 17, 18, 19, 20, 21, 22, 23, 24] }, // 9 x 3d\n  { key: 'EyeLower2', indices: [32, 33, 34, 35, 36, 37, 38, 39, 40] }, // 9 x 3d\n  { key: 'EyeLower3', indices: [54, 55, 56, 57, 58, 59, 60, 61, 62] }, // 9 x 3d\n  { key: 'EyebrowUpper', indices: [63, 64, 65, 66, 67, 68, 69, 70] }, // 8 x 3d\n  { key: 'EyebrowLower', indices: [48, 49, 50, 51, 52, 53] }, // 6 x 3d\n];\n\nexport const UV468: [number, number][] = [\n  [0.499976992607117, 0.652534008026123],\n  [0.500025987625122, 0.547487020492554],\n  [0.499974012374878, 0.602371990680695],\n  [0.482113003730774, 0.471979022026062],\n  [0.500150978565216, 0.527155995368958],\n  [0.499909996986389, 0.498252987861633],\n  [0.499523013830185, 0.40106201171875],\n  [0.289712011814117, 0.380764007568359],\n  [0.499954998493195, 0.312398016452789],\n  [0.499987006187439, 0.269918978214264],\n  [0.500023007392883, 0.107050001621246],\n  [0.500023007392883, 0.666234016418457],\n  [0.5000159740448, 0.679224014282227],\n  [0.500023007392883, 0.692348003387451],\n  [0.499976992607117, 0.695277988910675],\n  [0.499976992607117, 0.70593398809433],\n  [0.499976992607117, 0.719385027885437],\n  [0.499976992607117, 0.737019002437592],\n  [0.499967992305756, 0.781370997428894],\n  [0.499816000461578, 0.562981009483337],\n  [0.473773002624512, 0.573909997940063],\n  [0.104906998574734, 0.254140973091125],\n  [0.365929991006851, 0.409575998783112],\n  [0.338757991790771, 0.41302502155304],\n  [0.311120003461838, 0.409460008144379],\n  [0.274657994508743, 0.389131009578705],\n  [0.393361985683441, 0.403706014156342],\n  [0.345234006643295, 0.344011008739471],\n  [0.370094001293182, 0.346076011657715],\n  [0.319321990013123, 0.347265005111694],\n  [0.297903001308441, 0.353591024875641],\n  [0.24779200553894, 0.410809993743896],\n  [0.396889001131058, 0.842755019664764],\n  [0.280097991228104, 0.375599980354309],\n  [0.106310002505779, 0.399955987930298],\n  [0.2099249958992, 0.391353011131287],\n  [0.355807989835739, 0.534406006336212],\n  [0.471751004457474, 0.65040397644043],\n  [0.474155008792877, 0.680191993713379],\n  [0.439785003662109, 0.657229006290436],\n  [0.414617002010345, 0.66654098033905],\n  [0.450374007225037, 0.680860996246338],\n  [0.428770989179611, 0.682690978050232],\n  [0.374971002340317, 0.727805018424988],\n  [0.486716985702515, 0.547628998756409],\n  [0.485300987958908, 0.527395009994507],\n  [0.257764995098114, 0.314490020275116],\n  [0.401223003864288, 0.455172002315521],\n  [0.429818987846375, 0.548614978790283],\n  [0.421351999044418, 0.533740997314453],\n  [0.276895999908447, 0.532056987285614],\n  [0.483370006084442, 0.499586999416351],\n  [0.33721199631691, 0.282882988452911],\n  [0.296391993761063, 0.293242990970612],\n  [0.169294998049736, 0.193813979625702],\n  [0.447580009698868, 0.302609980106354],\n  [0.392390012741089, 0.353887975215912],\n  [0.354490011930466, 0.696784019470215],\n  [0.067304998636246, 0.730105042457581],\n  [0.442739009857178, 0.572826027870178],\n  [0.457098007202148, 0.584792017936707],\n  [0.381974011659622, 0.694710969924927],\n  [0.392388999462128, 0.694203019142151],\n  [0.277076005935669, 0.271932005882263],\n  [0.422551989555359, 0.563233017921448],\n  [0.385919004678726, 0.281364023685455],\n  [0.383103013038635, 0.255840003490448],\n  [0.331431001424789, 0.119714021682739],\n  [0.229923993349075, 0.232002973556519],\n  [0.364500999450684, 0.189113974571228],\n  [0.229622006416321, 0.299540996551514],\n  [0.173287004232407, 0.278747975826263],\n  [0.472878992557526, 0.666198015213013],\n  [0.446828007698059, 0.668527007102966],\n  [0.422762006521225, 0.673889994621277],\n  [0.445307999849319, 0.580065965652466],\n  [0.388103008270264, 0.693961024284363],\n  [0.403039008378983, 0.706539988517761],\n  [0.403629004955292, 0.693953037261963],\n  [0.460041999816895, 0.557139039039612],\n  [0.431158006191254, 0.692366003990173],\n  [0.452181994915009, 0.692366003990173],\n  [0.475387006998062, 0.692366003990173],\n  [0.465828001499176, 0.779190003871918],\n  [0.472328990697861, 0.736225962638855],\n  [0.473087012767792, 0.717857003211975],\n  [0.473122000694275, 0.704625964164734],\n  [0.473033010959625, 0.695277988910675],\n  [0.427942007780075, 0.695277988910675],\n  [0.426479011774063, 0.703539967536926],\n  [0.423162013292313, 0.711845993995667],\n  [0.4183090031147, 0.720062971115112],\n  [0.390094995498657, 0.639572978019714],\n  [0.013953999616206, 0.560034036636353],\n  [0.499913990497589, 0.58014702796936],\n  [0.413199990987778, 0.69539999961853],\n  [0.409626007080078, 0.701822996139526],\n  [0.468080013990402, 0.601534962654114],\n  [0.422728985548019, 0.585985004901886],\n  [0.463079988956451, 0.593783974647522],\n  [0.37211999297142, 0.47341400384903],\n  [0.334562003612518, 0.496073007583618],\n  [0.411671012639999, 0.546965003013611],\n  [0.242175996303558, 0.14767599105835],\n  [0.290776997804642, 0.201445996761322],\n  [0.327338010072708, 0.256527006626129],\n  [0.399509996175766, 0.748921036720276],\n  [0.441727995872498, 0.261676013469696],\n  [0.429764986038208, 0.187834024429321],\n  [0.412198007106781, 0.108901023864746],\n  [0.288955003023148, 0.398952007293701],\n  [0.218936994671822, 0.435410976409912],\n  [0.41278201341629, 0.398970007896423],\n  [0.257135003805161, 0.355440020561218],\n  [0.427684992551804, 0.437960982322693],\n  [0.448339998722076, 0.536936044692993],\n  [0.178560003638268, 0.45755398273468],\n  [0.247308000922203, 0.457193970680237],\n  [0.286267012357712, 0.467674970626831],\n  [0.332827985286713, 0.460712015628815],\n  [0.368755996227264, 0.447206974029541],\n  [0.398963987827301, 0.432654976844788],\n  [0.476410001516342, 0.405806005001068],\n  [0.189241006970406, 0.523923993110657],\n  [0.228962004184723, 0.348950982093811],\n  [0.490725994110107, 0.562400996685028],\n  [0.404670000076294, 0.485132992267609],\n  [0.019469000399113, 0.401564002037048],\n  [0.426243007183075, 0.420431017875671],\n  [0.396993011236191, 0.548797011375427],\n  [0.266469985246658, 0.376977026462555],\n  [0.439121007919312, 0.51895797252655],\n  [0.032313998788595, 0.644356966018677],\n  [0.419054001569748, 0.387154996395111],\n  [0.462783008813858, 0.505746960639954],\n  [0.238978996872902, 0.779744982719421],\n  [0.198220998048782, 0.831938028335571],\n  [0.107550002634525, 0.540755033493042],\n  [0.183610007166862, 0.740257024765015],\n  [0.134409993886948, 0.333683013916016],\n  [0.385764002799988, 0.883153975009918],\n  [0.490967005491257, 0.579378008842468],\n  [0.382384985685349, 0.508572995662689],\n  [0.174399003386497, 0.397670984268188],\n  [0.318785011768341, 0.39623498916626],\n  [0.343364000320435, 0.400596976280212],\n  [0.396100014448166, 0.710216999053955],\n  [0.187885001301765, 0.588537991046906],\n  [0.430987000465393, 0.944064974784851],\n  [0.318993002176285, 0.898285031318665],\n  [0.266247987747192, 0.869701027870178],\n  [0.500023007392883, 0.190576016902924],\n  [0.499976992607117, 0.954452991485596],\n  [0.366169989109039, 0.398822009563446],\n  [0.393207013607025, 0.39553701877594],\n  [0.410373002290726, 0.391080021858215],\n  [0.194993004202843, 0.342101991176605],\n  [0.388664990663528, 0.362284004688263],\n  [0.365961998701096, 0.355970978736877],\n  [0.343364000320435, 0.355356991291046],\n  [0.318785011768341, 0.35834002494812],\n  [0.301414996385574, 0.363156020641327],\n  [0.058132998645306, 0.319076001644135],\n  [0.301414996385574, 0.387449026107788],\n  [0.499987989664078, 0.618434011936188],\n  [0.415838003158569, 0.624195992946625],\n  [0.445681989192963, 0.566076993942261],\n  [0.465844005346298, 0.620640993118286],\n  [0.49992299079895, 0.351523995399475],\n  [0.288718998432159, 0.819945991039276],\n  [0.335278987884521, 0.852819979190826],\n  [0.440512001514435, 0.902418971061707],\n  [0.128294005990028, 0.791940987110138],\n  [0.408771991729736, 0.373893976211548],\n  [0.455606997013092, 0.451801002025604],\n  [0.499877005815506, 0.908990025520325],\n  [0.375436991453171, 0.924192011356354],\n  [0.11421000212431, 0.615022003650665],\n  [0.448662012815475, 0.695277988910675],\n  [0.4480200111866, 0.704632043838501],\n  [0.447111994028091, 0.715808033943176],\n  [0.444831997156143, 0.730794012546539],\n  [0.430011987686157, 0.766808986663818],\n  [0.406787008047104, 0.685672998428345],\n  [0.400738000869751, 0.681069016456604],\n  [0.392399996519089, 0.677703022956848],\n  [0.367855995893478, 0.663918972015381],\n  [0.247923001646996, 0.601333022117615],\n  [0.452769994735718, 0.420849978923798],\n  [0.43639200925827, 0.359887003898621],\n  [0.416164010763168, 0.368713974952698],\n  [0.413385987281799, 0.692366003990173],\n  [0.228018000721931, 0.683571994304657],\n  [0.468268007040024, 0.352671027183533],\n  [0.411361992359161, 0.804327011108398],\n  [0.499989002943039, 0.469825029373169],\n  [0.479153990745544, 0.442654013633728],\n  [0.499974012374878, 0.439637005329132],\n  [0.432112008333206, 0.493588984012604],\n  [0.499886006116867, 0.866917014122009],\n  [0.49991300702095, 0.821729004383087],\n  [0.456548988819122, 0.819200992584229],\n  [0.344549000263214, 0.745438992977142],\n  [0.37890899181366, 0.574010014533997],\n  [0.374292999505997, 0.780184984207153],\n  [0.319687992334366, 0.570737957954407],\n  [0.357154995203018, 0.604269981384277],\n  [0.295284003019333, 0.621580958366394],\n  [0.447750002145767, 0.862477004528046],\n  [0.410986006259918, 0.508723020553589],\n  [0.31395098567009, 0.775308012962341],\n  [0.354128003120422, 0.812552988529205],\n  [0.324548006057739, 0.703992962837219],\n  [0.189096003770828, 0.646299958229065],\n  [0.279776990413666, 0.71465802192688],\n  [0.1338230073452, 0.682700991630554],\n  [0.336768001317978, 0.644733011722565],\n  [0.429883986711502, 0.466521978378296],\n  [0.455527991056442, 0.548622965812683],\n  [0.437114000320435, 0.558896005153656],\n  [0.467287987470627, 0.529924988746643],\n  [0.414712011814117, 0.335219979286194],\n  [0.37704598903656, 0.322777986526489],\n  [0.344107985496521, 0.320150971412659],\n  [0.312875986099243, 0.32233202457428],\n  [0.283526003360748, 0.333190023899078],\n  [0.241245999932289, 0.382785975933075],\n  [0.102986000478268, 0.468762993812561],\n  [0.267612010240555, 0.424560010433197],\n  [0.297879010438919, 0.433175981044769],\n  [0.333433985710144, 0.433878004550934],\n  [0.366427004337311, 0.426115989685059],\n  [0.396012008190155, 0.416696012020111],\n  [0.420121014118195, 0.41022801399231],\n  [0.007561000064015, 0.480777025222778],\n  [0.432949006557465, 0.569517970085144],\n  [0.458638995885849, 0.479089021682739],\n  [0.473466008901596, 0.545744001865387],\n  [0.476087987422943, 0.563830018043518],\n  [0.468472003936768, 0.555056989192963],\n  [0.433990985155106, 0.582361996173859],\n  [0.483518004417419, 0.562983989715576],\n  [0.482482999563217, 0.57784903049469],\n  [0.42645001411438, 0.389798998832703],\n  [0.438998997211456, 0.39649498462677],\n  [0.450067013502121, 0.400434017181396],\n  [0.289712011814117, 0.368252992630005],\n  [0.276670008897781, 0.363372981548309],\n  [0.517862021923065, 0.471948027610779],\n  [0.710287988185883, 0.380764007568359],\n  [0.526226997375488, 0.573909997940063],\n  [0.895093023777008, 0.254140973091125],\n  [0.634069979190826, 0.409575998783112],\n  [0.661242008209229, 0.41302502155304],\n  [0.688880026340485, 0.409460008144379],\n  [0.725341975688934, 0.389131009578705],\n  [0.606630027294159, 0.40370500087738],\n  [0.654766023159027, 0.344011008739471],\n  [0.629905998706818, 0.346076011657715],\n  [0.680678009986877, 0.347265005111694],\n  [0.702096998691559, 0.353591024875641],\n  [0.75221198797226, 0.410804986953735],\n  [0.602918028831482, 0.842862963676453],\n  [0.719901978969574, 0.375599980354309],\n  [0.893692970275879, 0.399959981441498],\n  [0.790081977844238, 0.391354024410248],\n  [0.643998026847839, 0.534487962722778],\n  [0.528249025344849, 0.65040397644043],\n  [0.525849997997284, 0.680191040039062],\n  [0.560214996337891, 0.657229006290436],\n  [0.585384011268616, 0.66654098033905],\n  [0.549625992774963, 0.680860996246338],\n  [0.57122802734375, 0.682691991329193],\n  [0.624852001667023, 0.72809898853302],\n  [0.513050019741058, 0.547281980514526],\n  [0.51509702205658, 0.527251958847046],\n  [0.742246985435486, 0.314507007598877],\n  [0.598631024360657, 0.454979002475739],\n  [0.570338010787964, 0.548575043678284],\n  [0.578631997108459, 0.533622980117798],\n  [0.723087012767792, 0.532054007053375],\n  [0.516445994377136, 0.499638974666595],\n  [0.662801027297974, 0.282917976379395],\n  [0.70362401008606, 0.293271005153656],\n  [0.830704987049103, 0.193813979625702],\n  [0.552385985851288, 0.302568018436432],\n  [0.607609987258911, 0.353887975215912],\n  [0.645429015159607, 0.696707010269165],\n  [0.932694971561432, 0.730105042457581],\n  [0.557260990142822, 0.572826027870178],\n  [0.542901992797852, 0.584792017936707],\n  [0.6180260181427, 0.694710969924927],\n  [0.607590973377228, 0.694203019142151],\n  [0.722943007946014, 0.271963000297546],\n  [0.577413976192474, 0.563166975975037],\n  [0.614082992076874, 0.281386971473694],\n  [0.616907000541687, 0.255886018276215],\n  [0.668509006500244, 0.119913995265961],\n  [0.770092010498047, 0.232020974159241],\n  [0.635536015033722, 0.189248979091644],\n  [0.77039098739624, 0.299556016921997],\n  [0.826722025871277, 0.278755009174347],\n  [0.527121007442474, 0.666198015213013],\n  [0.553171992301941, 0.668527007102966],\n  [0.577238023281097, 0.673889994621277],\n  [0.554691970348358, 0.580065965652466],\n  [0.611896991729736, 0.693961024284363],\n  [0.59696102142334, 0.706539988517761],\n  [0.596370995044708, 0.693953037261963],\n  [0.539958000183105, 0.557139039039612],\n  [0.568841993808746, 0.692366003990173],\n  [0.547818005084991, 0.692366003990173],\n  [0.52461302280426, 0.692366003990173],\n  [0.534089982509613, 0.779141008853912],\n  [0.527670979499817, 0.736225962638855],\n  [0.526912987232208, 0.717857003211975],\n  [0.526877999305725, 0.704625964164734],\n  [0.526966989040375, 0.695277988910675],\n  [0.572058022022247, 0.695277988910675],\n  [0.573521018028259, 0.703539967536926],\n  [0.57683801651001, 0.711845993995667],\n  [0.581691026687622, 0.720062971115112],\n  [0.609944999217987, 0.639909982681274],\n  [0.986046016216278, 0.560034036636353],\n  [0.5867999792099, 0.69539999961853],\n  [0.590372025966644, 0.701822996139526],\n  [0.531915009021759, 0.601536989212036],\n  [0.577268004417419, 0.585934996604919],\n  [0.536915004253387, 0.593786001205444],\n  [0.627542972564697, 0.473352015018463],\n  [0.665585994720459, 0.495950996875763],\n  [0.588353991508484, 0.546862006187439],\n  [0.757824003696442, 0.14767599105835],\n  [0.709249973297119, 0.201507985591888],\n  [0.672684013843536, 0.256581008434296],\n  [0.600408971309662, 0.74900496006012],\n  [0.55826598405838, 0.261672019958496],\n  [0.570303976535797, 0.187870979309082],\n  [0.588165998458862, 0.109044015407562],\n  [0.711045026779175, 0.398952007293701],\n  [0.781069993972778, 0.435405015945435],\n  [0.587247014045715, 0.398931980133057],\n  [0.742869973182678, 0.355445981025696],\n  [0.572156012058258, 0.437651991844177],\n  [0.55186802148819, 0.536570012569427],\n  [0.821442008018494, 0.457556009292603],\n  [0.752701997756958, 0.457181990146637],\n  [0.71375697851181, 0.467626988887787],\n  [0.66711300611496, 0.460672974586487],\n  [0.631101012229919, 0.447153985500336],\n  [0.6008620262146, 0.432473003864288],\n  [0.523481011390686, 0.405627012252808],\n  [0.810747981071472, 0.523926019668579],\n  [0.771045982837677, 0.348959028720856],\n  [0.509127020835876, 0.562718033790588],\n  [0.595292985439301, 0.485023975372314],\n  [0.980530977249146, 0.401564002037048],\n  [0.573499977588654, 0.420000016689301],\n  [0.602994978427887, 0.548687994480133],\n  [0.733529984951019, 0.376977026462555],\n  [0.560611009597778, 0.519016981124878],\n  [0.967685997486115, 0.644356966018677],\n  [0.580985009670258, 0.387160003185272],\n  [0.537728011608124, 0.505385041236877],\n  [0.760966002941132, 0.779752969741821],\n  [0.801778972148895, 0.831938028335571],\n  [0.892440974712372, 0.54076099395752],\n  [0.816350996494293, 0.740260004997253],\n  [0.865594983100891, 0.333687007427216],\n  [0.614073991775513, 0.883246004581451],\n  [0.508952975273132, 0.579437971115112],\n  [0.617941975593567, 0.508316040039062],\n  [0.825608015060425, 0.397674977779388],\n  [0.681214988231659, 0.39623498916626],\n  [0.656635999679565, 0.400596976280212],\n  [0.603900015354156, 0.710216999053955],\n  [0.81208598613739, 0.588539004325867],\n  [0.56801301240921, 0.944564998149872],\n  [0.681007981300354, 0.898285031318665],\n  [0.733752012252808, 0.869701027870178],\n  [0.633830010890961, 0.398822009563446],\n  [0.606792986392975, 0.39553701877594],\n  [0.589659988880157, 0.391062021255493],\n  [0.805015981197357, 0.342108011245728],\n  [0.611334979534149, 0.362284004688263],\n  [0.634037971496582, 0.355970978736877],\n  [0.656635999679565, 0.355356991291046],\n  [0.681214988231659, 0.35834002494812],\n  [0.698584973812103, 0.363156020641327],\n  [0.941866993904114, 0.319076001644135],\n  [0.698584973812103, 0.387449026107788],\n  [0.584177017211914, 0.624107003211975],\n  [0.554318010807037, 0.566076993942261],\n  [0.534153997898102, 0.62064003944397],\n  [0.711217999458313, 0.819975018501282],\n  [0.664629995822906, 0.852871000766754],\n  [0.559099972248077, 0.902631998062134],\n  [0.871706008911133, 0.791940987110138],\n  [0.591234028339386, 0.373893976211548],\n  [0.544341027736664, 0.451583981513977],\n  [0.624562978744507, 0.924192011356354],\n  [0.88577002286911, 0.615028977394104],\n  [0.551338016986847, 0.695277988910675],\n  [0.551980018615723, 0.704632043838501],\n  [0.552887976169586, 0.715808033943176],\n  [0.555167973041534, 0.730794012546539],\n  [0.569944024085999, 0.767035007476807],\n  [0.593203008174896, 0.685675978660583],\n  [0.599261999130249, 0.681069016456604],\n  [0.607599973678589, 0.677703022956848],\n  [0.631937980651855, 0.663500010967255],\n  [0.752032995223999, 0.601315021514893],\n  [0.547226011753082, 0.420395016670227],\n  [0.563543975353241, 0.359827995300293],\n  [0.583841025829315, 0.368713974952698],\n  [0.586614012718201, 0.692366003990173],\n  [0.771915018558502, 0.683578014373779],\n  [0.531597018241882, 0.352482974529266],\n  [0.588370978832245, 0.804440975189209],\n  [0.52079701423645, 0.442565023899078],\n  [0.567984998226166, 0.493479013442993],\n  [0.543282985687256, 0.819254994392395],\n  [0.655317008495331, 0.745514988899231],\n  [0.621008992195129, 0.574018001556396],\n  [0.625559985637665, 0.78031200170517],\n  [0.680198013782501, 0.570719003677368],\n  [0.64276397228241, 0.604337990283966],\n  [0.704662978649139, 0.621529996395111],\n  [0.552012026309967, 0.862591981887817],\n  [0.589071989059448, 0.508637011051178],\n  [0.685944974422455, 0.775357007980347],\n  [0.645735025405884, 0.812640011310577],\n  [0.675342977046967, 0.703978002071381],\n  [0.810858011245728, 0.646304965019226],\n  [0.72012197971344, 0.714666962623596],\n  [0.866151988506317, 0.682704985141754],\n  [0.663187026977539, 0.644596993923187],\n  [0.570082008838654, 0.466325998306274],\n  [0.544561982154846, 0.548375964164734],\n  [0.562758982181549, 0.558784961700439],\n  [0.531987011432648, 0.530140042304993],\n  [0.585271000862122, 0.335177004337311],\n  [0.622952997684479, 0.32277899980545],\n  [0.655896008014679, 0.320163011550903],\n  [0.687132000923157, 0.322345972061157],\n  [0.716481983661652, 0.333200991153717],\n  [0.758756995201111, 0.382786989212036],\n  [0.897013008594513, 0.468769013881683],\n  [0.732392013072968, 0.424547016620636],\n  [0.70211398601532, 0.433162987232208],\n  [0.66652500629425, 0.433866024017334],\n  [0.633504986763, 0.426087975502014],\n  [0.603875994682312, 0.416586995124817],\n  [0.579657971858978, 0.409945011138916],\n  [0.992439985275269, 0.480777025222778],\n  [0.567192018032074, 0.569419980049133],\n  [0.54136598110199, 0.478899002075195],\n  [0.526564002037048, 0.546118021011353],\n  [0.523913025856018, 0.563830018043518],\n  [0.531529009342194, 0.555056989192963],\n  [0.566035985946655, 0.582329034805298],\n  [0.51631098985672, 0.563053965568542],\n  [0.5174720287323, 0.577877044677734],\n  [0.573594987392426, 0.389806985855103],\n  [0.560697972774506, 0.395331978797913],\n  [0.549755990505219, 0.399751007556915],\n  [0.710287988185883, 0.368252992630005],\n  [0.723330020904541, 0.363372981548309],\n];\n\nexport const TRI468: number[] = [\n  127, 34, 139, 11, 0, 37, 232, 231, 120, 72, 37, 39, 128, 121, 47, 232, 121, 128, 104, 69, 67, 175, 171, 148, 157, 154, 155, 118, 50, 101, 73, 39, 40, 9,\n  151, 108, 48, 115, 131, 194, 204, 211, 74, 40, 185, 80, 42, 183, 40, 92, 186, 230, 229, 118, 202, 212, 214, 83, 18, 17, 76, 61, 146, 160, 29, 30, 56,\n  157, 173, 106, 204, 194, 135, 214, 192, 203, 165, 98, 21, 71, 68, 51, 45, 4, 144, 24, 23, 77, 146, 91, 205, 50, 187, 201, 200, 18, 91, 106, 182, 90, 91,\n  181, 85, 84, 17, 206, 203, 36, 148, 171, 140, 92, 40, 39, 193, 189, 244, 159, 158, 28, 247, 246, 161, 236, 3, 196, 54, 68, 104, 193, 168, 8, 117,\n  228, 31, 189, 193, 55, 98, 97, 99, 126, 47, 100, 166, 79, 218, 155, 154, 26, 209, 49, 131, 135, 136, 150, 47, 126, 217, 223, 52, 53, 45, 51, 134, 211,\n  170, 140, 67, 69, 108, 43, 106, 91, 230, 119, 120, 226, 130, 247, 63, 53, 52, 238, 20, 242, 46, 70, 156, 78, 62, 96, 46, 53, 63, 143, 34, 227, 173,\n  155, 133, 123, 117, 111, 44, 125, 19, 236, 134, 51, 216, 206, 205, 154, 153, 22, 39, 37, 167, 200, 201, 208, 36, 142, 100, 57, 212, 202, 20, 60, 99, 28,\n  158, 157, 35, 226, 113, 160, 159, 27, 204, 202, 210, 113, 225, 46, 43, 202, 204, 62, 76, 77, 137, 123, 116, 41, 38, 72, 203, 129, 142, 64, 98, 240, 49,\n  102, 64, 41, 73, 74, 212, 216, 207, 42, 74, 184, 169, 170, 211, 170, 149, 176, 105, 66, 69, 122, 6, 168, 123, 147, 187, 96, 77, 90, 65, 55, 107, 89,\n  90, 180, 101, 100, 120, 63, 105, 104, 93, 137, 227, 15, 86, 85, 129, 102, 49, 14, 87, 86, 55, 8, 9, 100, 47, 121, 145, 23, 22, 88, 89, 179, 6, 122,\n  196, 88, 95, 96, 138, 172, 136, 215, 58, 172, 115, 48, 219, 42, 80, 81, 195, 3, 51, 43, 146, 61, 171, 175, 199, 81, 82, 38, 53, 46, 225, 144, 163, 110,\n  246, 33, 7, 52, 65, 66, 229, 228, 117, 34, 127, 234, 107, 108, 69, 109, 108, 151, 48, 64, 235, 62, 78, 191, 129, 209, 126, 111, 35, 143, 163, 161, 246,\n  117, 123, 50, 222, 65, 52, 19, 125, 141, 221, 55, 65, 3, 195, 197, 25, 7, 33, 220, 237, 44, 70, 71, 139, 122, 193, 245, 247, 130, 33, 71, 21, 162,\n  153, 158, 159, 170, 169, 150, 188, 174, 196, 216, 186, 92, 144, 160, 161, 2, 97, 167, 141, 125, 241, 164, 167, 37, 72, 38, 12, 145, 159, 160, 38, 82, 13,\n  63, 68, 71, 226, 35, 111, 158, 153, 154, 101, 50, 205, 206, 92, 165, 209, 198, 217, 165, 167, 97, 220, 115, 218, 133, 112, 243, 239, 238, 241, 214,\n  135, 169, 190, 173, 133, 171, 208, 32, 125, 44, 237, 86, 87, 178, 85, 86, 179, 84, 85, 180, 83, 84, 181, 201, 83, 182, 137, 93, 132, 76, 62, 183, 61,\n  76, 184, 57, 61, 185, 212, 57, 186, 214, 207, 187, 34, 143, 156, 79, 239, 237, 123, 137, 177, 44, 1, 4, 201, 194, 32, 64, 102, 129, 213, 215, 138, 59,\n  166, 219, 242, 99, 97, 2, 94, 141, 75, 59, 235, 24, 110, 228, 25, 130, 226, 23, 24, 229, 22, 23, 230, 26, 22, 231, 112, 26, 232, 189, 190, 243, 221, 56,\n  190, 28, 56, 221, 27, 28, 222, 29, 27, 223, 30, 29, 224, 247, 30, 225, 238, 79, 20, 166, 59, 75, 60, 75, 240, 147, 177, 215, 20, 79, 166, 187, 147, 213,\n  112, 233, 244, 233, 128, 245, 128, 114, 188, 114, 217, 174, 131, 115, 220, 217, 198, 236, 198, 131, 134, 177, 132, 58, 143, 35, 124, 110, 163, 7, 228,\n  110, 25, 356, 389, 368, 11, 302, 267, 452, 350, 349, 302, 303, 269, 357, 343, 277, 452, 453, 357, 333, 332, 297, 175, 152, 377, 384, 398, 382, 347,\n  348, 330, 303, 304, 270, 9, 336, 337, 278, 279, 360, 418, 262, 431, 304, 408, 409, 310, 415, 407, 270, 409, 410, 450, 348, 347, 422, 430, 434, 313,\n  314, 17, 306, 307, 375, 387, 388, 260, 286, 414, 398, 335, 406, 418, 364, 367, 416, 423, 358, 327, 251, 284, 298, 281, 5, 4, 373, 374, 253, 307, 320,\n  321, 425, 427, 411, 421, 313, 18, 321, 405, 406, 320, 404, 405, 315, 16, 17, 426, 425, 266, 377, 400, 369, 322, 391, 269, 417, 465, 464, 386, 257, 258,\n  466, 260, 388, 456, 399, 419, 284, 332, 333, 417, 285, 8, 346, 340, 261, 413, 441, 285, 327, 460, 328, 355, 371, 329, 392, 439, 438, 382, 341, 256,\n  429, 420, 360, 364, 394, 379, 277, 343, 437, 443, 444, 283, 275, 440, 363, 431, 262, 369, 297, 338, 337, 273, 375, 321, 450, 451, 349, 446, 342, 467,\n  293, 334, 282, 458, 461, 462, 276, 353, 383, 308, 324, 325, 276, 300, 293, 372, 345, 447, 382, 398, 362, 352, 345, 340, 274, 1, 19, 456, 248, 281, 436,\n  427, 425, 381, 256, 252, 269, 391, 393, 200, 199, 428, 266, 330, 329, 287, 273, 422, 250, 462, 328, 258, 286, 384, 265, 353, 342, 387, 259, 257, 424,\n  431, 430, 342, 353, 276, 273, 335, 424, 292, 325, 307, 366, 447, 345, 271, 303, 302, 423, 266, 371, 294, 455, 460, 279, 278, 294, 271, 272, 304, 432,\n  434, 427, 272, 407, 408, 394, 430, 431, 395, 369, 400, 334, 333, 299, 351, 417, 168, 352, 280, 411, 325, 319, 320, 295, 296, 336, 319, 403, 404, 330,\n  348, 349, 293, 298, 333, 323, 454, 447, 15, 16, 315, 358, 429, 279, 14, 15, 316, 285, 336, 9, 329, 349, 350, 374, 380, 252, 318, 402, 403, 6, 197, 419,\n  318, 319, 325, 367, 364, 365, 435, 367, 397, 344, 438, 439, 272, 271, 311, 195, 5, 281, 273, 287, 291, 396, 428, 199, 311, 271, 268, 283, 444, 445,\n  373, 254, 339, 263, 466, 249, 282, 334, 296, 449, 347, 346, 264, 447, 454, 336, 296, 299, 338, 10, 151, 278, 439, 455, 292, 407, 415, 358, 371, 355,\n  340, 345, 372, 390, 249, 466, 346, 347, 280, 442, 443, 282, 19, 94, 370, 441, 442, 295, 248, 419, 197, 263, 255, 359, 440, 275, 274, 300, 383, 368,\n  351, 412, 465, 263, 467, 466, 301, 368, 389, 380, 374, 386, 395, 378, 379, 412, 351, 419, 436, 426, 322, 373, 390, 388, 2, 164, 393, 370, 462, 461,\n  164, 0, 267, 302, 11, 12, 374, 373, 387, 268, 12, 13, 293, 300, 301, 446, 261, 340, 385, 384, 381, 330, 266, 425, 426, 423, 391, 429, 355, 437, 391,\n  327, 326, 440, 457, 438, 341, 382, 362, 459, 457, 461, 434, 430, 394, 414, 463, 362, 396, 369, 262, 354, 461, 457, 316, 403, 402, 315, 404, 403, 314,\n  405, 404, 313, 406, 405, 421, 418, 406, 366, 401, 361, 306, 408, 407, 291, 409, 408, 287, 410, 409, 432, 436, 410, 434, 416, 411, 264, 368, 383, 309,\n  438, 457, 352, 376, 401, 274, 275, 4, 421, 428, 262, 294, 327, 358, 433, 416, 367, 289, 455, 439, 462, 370, 326, 2, 326, 370, 305, 460, 455, 254,\n  449, 448, 255, 261, 446, 253, 450, 449, 252, 451, 450, 256, 452, 451, 341, 453, 452, 413, 464, 463, 441, 413, 414, 258, 442, 441, 257, 443, 442, 259,\n  444, 443, 260, 445, 444, 467, 342, 445, 459, 458, 250, 289, 392, 290, 290, 328, 460, 376, 433, 435, 250, 290, 392, 411, 416, 433, 341, 463, 464, 453,\n  464, 465, 357, 465, 412, 343, 412, 399, 360, 363, 440, 437, 399, 456, 420, 456, 363, 401, 435, 288, 372, 383, 353, 339, 255, 249, 448, 261, 255, 133,\n  243, 190, 133, 155, 112, 33, 246, 247, 33, 130, 25, 398, 384, 286, 362, 398, 414, 362, 463, 341, 263, 359, 467, 263, 249, 255, 466, 467, 260, 75, 60,\n  166, 238, 239, 79, 162, 127, 139, 72, 11, 37, 121, 232, 120, 73, 72, 39, 114, 128, 47, 233, 232, 128, 103, 104, 67, 152, 175, 148, 173, 157, 155,\n  119, 118, 101, 74, 73, 40, 107, 9, 108, 49, 48, 131, 32, 194, 211, 184, 74, 185, 191, 80, 183, 185, 40, 186, 119, 230, 118, 210, 202, 214, 84, 83, 17,\n  77, 76, 146, 161, 160, 30, 190, 56, 173, 182, 106, 194, 138, 135, 192, 129, 203, 98, 54, 21, 68, 5, 51, 4, 145, 144, 23, 90, 77, 91, 207, 205, 187, 83,\n  201, 18, 181, 91, 182, 180, 90, 181, 16, 85, 17, 205, 206, 36, 176, 148, 140, 165, 92, 39, 245, 193, 244, 27, 159, 28, 30, 247, 161, 174, 236, 196,\n  103, 54, 104, 55, 193, 8, 111, 117, 31, 221, 189, 55, 240, 98, 99, 142, 126, 100, 219, 166, 218, 112, 155, 26, 198, 209, 131, 169, 135, 150, 114, 47,\n  217, 224, 223, 53, 220, 45, 134, 32, 211, 140, 109, 67, 108, 146, 43, 91, 231, 230, 120, 113, 226, 247, 105, 63, 52, 241, 238, 242, 124, 46, 156, 95,\n  78, 96, 70, 46, 63, 116, 143, 227, 116, 123, 111, 1, 44, 19, 3, 236, 51, 207, 216, 205, 26, 154, 22, 165, 39, 167, 199, 200, 208, 101, 36, 100, 43,\n  57, 202, 242, 20, 99, 56, 28, 157, 124, 35, 113, 29, 160, 27, 211, 204, 210, 124, 113, 46, 106, 43, 204, 96, 62, 77, 227, 137, 116, 73, 41, 72, 36, 203,\n  142, 235, 64, 240, 48, 49, 64, 42, 41, 74, 214, 212, 207, 183, 42, 184, 210, 169, 211, 140, 170, 176, 104, 105, 69, 193, 122, 168, 50, 123, 187, 89, 96,\n  90, 66, 65, 107, 179, 89, 180, 119, 101, 120, 68, 63, 104, 234, 93, 227, 16, 15, 85, 209, 129, 49, 15, 14, 86, 107, 55, 9, 120, 100, 121, 153, 145, 22,\n  178, 88, 179, 197, 6, 196, 89, 88, 96, 135, 138, 136, 138, 215, 172, 218, 115, 219, 41, 42, 81, 5, 195, 51, 57, 43, 61, 208, 171, 199, 41, 81, 38,\n  224, 53, 225, 24, 144, 110, 105, 52, 66, 118, 229, 117, 227, 34, 234, 66, 107, 69, 10, 109, 151, 219, 48, 235, 183, 62, 191, 142, 129, 126, 116, 111,\n  143, 7, 163, 246, 118, 117, 50, 223, 222, 52, 94, 19, 141, 222, 221, 65, 196, 3, 197, 45, 220, 44, 156, 70, 139, 188, 122, 245, 139, 71, 162, 145,\n  153, 159, 149, 170, 150, 122, 188, 196, 206, 216, 92, 163, 144, 161, 164, 2, 167, 242, 141, 241, 0, 164, 37, 11, 72, 12, 144, 145, 160, 12, 38, 13, 70,\n  63, 71, 31, 226, 111, 157, 158, 154, 36, 101, 205, 203, 206, 165, 126, 209, 217, 98, 165, 97, 237, 220, 218, 237, 239, 241, 210, 214, 169, 140, 171, 32,\n  241, 125, 237, 179, 86, 178, 180, 85, 179, 181, 84, 180, 182, 83, 181, 194, 201, 182, 177, 137, 132, 184, 76, 183, 185, 61, 184, 186, 57, 185, 216, 212,\n  186, 192, 214, 187, 139, 34, 156, 218, 79, 237, 147, 123, 177, 45, 44, 4, 208, 201, 32, 98, 64, 129, 192, 213, 138, 235, 59, 219, 141, 242, 97, 97, 2,\n  141, 240, 75, 235, 229, 24, 228, 31, 25, 226, 230, 23, 229, 231, 22, 230, 232, 26, 231, 233, 112, 232, 244, 189, 243, 189, 221, 190, 222, 28, 221,\n  223, 27, 222, 224, 29, 223, 225, 30, 224, 113, 247, 225, 99, 60, 240, 213, 147, 215, 60, 20, 166, 192, 187, 213, 243, 112, 244, 244, 233, 245, 245,\n  128, 188, 188, 114, 174, 134, 131, 220, 174, 217, 236, 236, 198, 134, 215, 177, 58, 156, 143, 124, 25, 110, 7, 31, 228, 25, 264, 356, 368, 0, 11, 267,\n  451, 452, 349, 267, 302, 269, 350, 357, 277, 350, 452, 357, 299, 333, 297, 396, 175, 377, 381, 384, 382, 280, 347, 330, 269, 303, 270, 151, 9, 337,\n  344, 278, 360, 424, 418, 431, 270, 304, 409, 272, 310, 407, 322, 270, 410, 449, 450, 347, 432, 422, 434, 18, 313, 17, 291, 306, 375, 259, 387, 260,\n  424, 335, 418, 434, 364, 416, 391, 423, 327, 301, 251, 298, 275, 281, 4, 254, 373, 253, 375, 307, 321, 280, 425, 411, 200, 421, 18, 335, 321, 406,\n  321, 320, 405, 314, 315, 17, 423, 426, 266, 396, 377, 369, 270, 322, 269, 413, 417, 464, 385, 386, 258, 248, 456, 419, 298, 284, 333, 168, 417, 8,\n  448, 346, 261, 417, 413, 285, 326, 327, 328, 277, 355, 329, 309, 392, 438, 381, 382, 256, 279, 429, 360, 365, 364, 379, 355, 277, 437, 282, 443, 283,\n  281, 275, 363, 395, 431, 369, 299, 297, 337, 335, 273, 321, 348, 450, 349, 359, 446, 467, 283, 293, 282, 250, 458, 462, 300, 276, 383, 292, 308, 325,\n  283, 276, 293, 264, 372, 447, 346, 352, 340, 354, 274, 19, 363, 456, 281, 426, 436, 425, 380, 381, 252, 267, 269, 393, 421, 200, 428, 371, 266, 329,\n  432, 287, 422, 290, 250, 328, 385, 258, 384, 446, 265, 342, 386, 387, 257, 422, 424, 430, 445, 342, 276, 422, 273, 424, 306, 292, 307, 352, 366, 345,\n  268, 271, 302, 358, 423, 371, 327, 294, 460, 331, 279, 294, 303, 271, 304, 436, 432, 427, 304, 272, 408, 395, 394, 431, 378, 395, 400, 296, 334, 299,\n  6, 351, 168, 376, 352, 411, 307, 325, 320, 285, 295, 336, 320, 319, 404, 329, 330, 349, 334, 293, 333, 366, 323, 447, 316, 15, 315, 331, 358, 279,\n  317, 14, 316, 8, 285, 9, 277, 329, 350, 253, 374, 252, 319, 318, 403, 351, 6, 419, 324, 318, 325, 397, 367, 365, 288, 435, 397, 278, 344, 439, 310,\n  272, 311, 248, 195, 281, 375, 273, 291, 175, 396, 199, 312, 311, 268, 276, 283, 445, 390, 373, 339, 295, 282, 296, 448, 449, 346, 356, 264, 454, 337,\n  336, 299, 337, 338, 151, 294, 278, 455, 308, 292, 415, 429, 358, 355, 265, 340, 372, 388, 390, 466, 352, 346, 280, 295, 442, 282, 354, 19, 370, 285,\n  441, 295, 195, 248, 197, 457, 440, 274, 301, 300, 368, 417, 351, 465, 251, 301, 389, 385, 380, 386, 394, 395, 379, 399, 412, 419, 410, 436, 322, 387,\n  373, 388, 326, 2, 393, 354, 370, 461, 393, 164, 267, 268, 302, 12, 386, 374, 387, 312, 268, 13, 298, 293, 301, 265, 446, 340, 380, 385, 381, 280, 330,\n  425, 322, 426, 391, 420, 429, 437, 393, 391, 326, 344, 440, 438, 458, 459, 461, 364, 434, 394, 428, 396, 262, 274, 354, 457, 317, 316, 402, 316, 315,\n  403, 315, 314, 404, 314, 313, 405, 313, 421, 406, 323, 366, 361, 292, 306, 407, 306, 291, 408, 291, 287, 409, 287, 432, 410, 427, 434, 411, 372, 264,\n  383, 459, 309, 457, 366, 352, 401, 1, 274, 4, 418, 421, 262, 331, 294, 358, 435, 433, 367, 392, 289, 439, 328, 462, 326, 94, 2, 370, 289, 305, 455, 339,\n  254, 448, 359, 255, 446, 254, 253, 449, 253, 252, 450, 252, 256, 451, 256, 341, 452, 414, 413, 463, 286, 441, 414, 286, 258, 441, 258, 257, 442, 257,\n  259, 443, 259, 260, 444, 260, 467, 445, 309, 459, 250, 305, 289, 290, 305, 290, 460, 401, 376, 435, 309, 250, 392, 376, 411, 433, 453, 341, 464, 357,\n  453, 465, 343, 357, 412, 437, 343, 399, 344, 360, 440, 420, 437, 456, 360, 420, 363, 361, 401, 288, 265, 372, 353, 390, 339, 249, 339, 448, 255];\n\nexport const TRI68: number[] = [0, 1, 36, 0, 36, 17, 1, 2, 41, 1, 41, 36, 2, 3, 31, 2, 31, 41, 3, 4, 48, 3, 48, 31, 4, 5, 48, 5, 6, 48, 6, 7, 59, 6, 59, 48, 7, 8, 58, 7, 58, 59,\n  8, 9, 56, 8, 56, 57, 8, 57, 58, 9, 10, 55, 9, 55, 56, 10, 11, 54, 10, 54, 55, 11, 12, 54, 12, 13, 54, 13, 14, 35, 13, 35, 54, 14, 15, 46, 14, 46, 35, 15, 16,\n  45, 15, 45, 46, 16, 26, 45, 17, 36, 18, 18, 37, 19, 18, 36, 37, 19, 38, 20, 19, 37, 38, 20, 39, 21, 20, 38, 39, 21, 39, 27, 22, 42, 23, 22, 27, 42, 23, 43, 24,\n  23, 42, 43, 24, 44, 25, 24, 43, 44, 25, 45, 26, 25, 44, 45, 27, 39, 28, 27, 28, 42, 28, 39, 29, 28, 29, 42, 29, 31, 30, 29, 30, 35, 29, 40, 31, 29, 35, 47, 29,\n  39, 40, 29, 47, 42, 30, 31, 32, 30, 32, 33, 30, 33, 34, 30, 34, 35, 31, 50, 32, 31, 40, 41, 31, 48, 49, 31, 49, 50, 32, 51, 33, 32, 50, 51, 33, 51, 34, 34, 52,\n  35, 34, 51, 52, 35, 46, 47, 35, 52, 53, 35, 53, 54, 36, 41, 37, 37, 40, 38, 37, 41, 40, 38, 40, 39, 42, 47, 43, 43, 47, 44, 44, 46, 45, 44, 47, 46, 48, 60, 49,\n  48, 59, 60, 49, 61, 50, 49, 60, 61, 50, 62, 51, 50, 61, 62, 51, 62, 52, 52, 63, 53, 52, 62, 63, 53, 64, 54, 53, 63, 64, 54, 64, 55, 55, 65, 56, 55, 64, 65, 56,\n  66, 57, 56, 65, 66, 57, 66, 58, 58, 67, 59, 58, 66, 67, 59, 67, 60, 60, 67, 61, 61, 66, 62, 61, 67, 66, 62, 66, 63, 63, 65, 64, 63, 66, 65, 21, 27, 22];\n\nexport const TRI33: number[] = [\n  /*  eyes  */ 0, 8, 7, 7, 8, 1, 2, 10, 9, 9, 10, 3,\n  /*  brows */ 17, 0, 18, 18, 0, 7, 18, 7, 19, 19, 7, 1, 19, 1, 11, 19, 11, 20, 21, 3, 22, 21, 9, 3, 20, 9, 21, 20, 2, 9, 20, 11, 2,\n  /*  4head */ 23, 17, 18, 25, 21, 22, 24, 19, 20, 24, 18, 19, 24, 20, 21, 24, 23, 18, 24, 21, 25,\n  /*  nose  */ 11, 12, 4, 11, 4, 13, 1, 12, 11, 11, 13, 2, 12, 14, 4, 4, 14, 13,\n  /* up-lip */ 14, 5, 15, 14, 15, 6, 12, 5, 14, 14, 6, 13,\n  /* cheeks */ 8, 12, 1, 2, 13, 10, 8, 26, 12, 10, 13, 27, 26, 5, 12, 13, 6, 27, 0, 26, 8, 10, 27, 3,\n  /*  chin  */ 5, 32, 16, 16, 32, 6, 5, 30, 32, 6, 32, 31,\n  /*  cont  */ 26, 30, 5, 27, 6, 31, 0, 28, 26, 3, 27, 29, 17, 28, 0, 3, 29, 22, 23, 28, 17, 22, 29, 25, 28, 30, 26, 27, 31, 29,\n];\n\nexport const TRI7: number[] = [0, 4, 1, 2, 4, 3, 4, 5, 6];\n\nexport const VTX68: number[] = [\n  /* cont  */ 127, 234, 132, 58, 172, 150, 149, 148, 152, 377, 378, 379, 397, 288, 361, 454, 356,\n  /* brows */ 70, 63, 105, 66, 107, 336, 296, 334, 293, 300,\n  /* nose  */ 168, 6, 195, 4, 98, 97, 2, 326, 327,\n  /* eyes  */ 33, 160, 158, 133, 153, 144, 362, 385, 387, 263, 373, 380,\n  /* lip   */ 57, 40, 37, 0, 267, 270, 287, 321, 314, 17, 84, 91,\n  /* mouth */ 78, 81, 13, 311, 308, 402, 14, 178,\n];\n\nexport const VTX33: number[] = [33, 133, 362, 263, 1, 62, 308, 159, 145, 386, 374, 6, 102, 331, 2, 13, 14, 70, 105, 107, 336, 334, 300, 54, 10, 284, 50, 280, 234, 454, 58, 288, 152];\n\nexport const VTX7: number[] = [33, 133, 362, 263, 1, 78, 308];\n\nexport const UV68 = VTX68.map((x) => UV468[x]);\n\nexport const UV33 = VTX33.map((x) => UV468[x]);\n\nexport const UV7 = VTX7.map((x) => UV468[x]);\n\n// https://github.com/tensorflow/tfjs-models/blob/master/face-landmarks-detection/src/constants.ts\n// https://github.com/google/mediapipe/mediapipe/python/solutions/face_mesh_connections.py\n\ntype PairArray = [number, number][];\n\nfunction connectionsToIndices(connections: PairArray) {\n  const indices = connections.map((connection) => connection[0]);\n  indices.push(connections[connections.length - 1][1]);\n  return indices;\n}\n\nexport const pairsLips: PairArray = [\n  [61, 146], [146, 91], [91, 181], [181, 84], [84, 17], [17, 314], [314, 405], [405, 321], [321, 375], [375, 291], [61, 185], [185, 40], [40, 39], [39, 37], [37, 0], [0, 267], [267, 269], [269, 270], [270, 409], [409, 291],\n  [78, 95], [95, 88], [88, 178], [178, 87], [87, 14], [14, 317], [317, 402], [402, 318], [318, 324], [324, 308], [78, 191], [191, 80], [80, 81], [81, 82], [82, 13], [13, 312], [312, 311], [311, 310], [310, 415], [415, 308],\n];\n\nexport const pairsLeftEye: PairArray = [[263, 249], [249, 390], [390, 373], [373, 374], [374, 380], [380, 381], [381, 382], [382, 362], [263, 466], [466, 388], [388, 387], [387, 386], [386, 385], [385, 384], [384, 398], [398, 362]];\n\nexport const pairsLeftEyebrow: PairArray = [[276, 283], [283, 282], [282, 295], [295, 285], [300, 293], [293, 334], [334, 296], [296, 336]];\n\nexport const pairsLeftIris: PairArray = [[474, 475], [475, 476], [476, 477], [477, 474]];\n\nexport const pairsRightEye: PairArray = [[33, 7], [7, 163], [163, 144], [144, 145], [145, 153], [153, 154], [154, 155], [155, 133], [33, 246], [246, 161], [161, 160], [160, 159], [159, 158], [158, 157], [157, 173], [173, 133]];\n\nexport const pairsRightEyebrow: PairArray = [[46, 53], [53, 52], [52, 65], [65, 55], [70, 63], [63, 105], [105, 66], [66, 107]];\n\nexport const pairsRightIris: PairArray = [[469, 470], [470, 471], [471, 472], [472, 469]];\n\nexport const pairsFaceContour: PairArray = [\n  [10, 338], [338, 297], [297, 332], [332, 284], [284, 251], [251, 389],\n  [389, 356], [356, 454], [454, 323], [323, 361], [361, 288], [288, 397],\n  [397, 365], [365, 379], [379, 378], [378, 400], [400, 377], [377, 152],\n  [152, 148], [148, 176], [176, 149], [149, 150], [150, 136], [136, 172],\n  [172, 58], [58, 132], [132, 93], [93, 234], [234, 127], [127, 162],\n  [162, 21], [21, 54], [54, 103], [103, 67], [67, 109], [109, 10],\n];\n\nexport const contourKeypoints = {\n  lips: connectionsToIndices(pairsLips),\n  leftEye: connectionsToIndices(pairsLeftEye),\n  leftEyebrow: connectionsToIndices(pairsLeftEyebrow),\n  leftIris: connectionsToIndices(pairsLeftIris),\n  rightEye: connectionsToIndices(pairsRightEye),\n  rightEyebrow: connectionsToIndices(pairsRightEyebrow),\n  rightIris: connectionsToIndices(pairsRightIris),\n  faceOval: connectionsToIndices(pairsFaceContour),\n};\n\nexport const pairsFaceMesh: PairArray = [\n  [127, 34], [34, 139], [139, 127], [11, 0], [0, 37], [37, 11],\n  [232, 231], [231, 120], [120, 232], [72, 37], [37, 39], [39, 72],\n  [128, 121], [121, 47], [47, 128], [232, 121], [121, 128], [128, 232],\n  [104, 69], [69, 67], [67, 104], [175, 171], [171, 148], [148, 175],\n  [118, 50], [50, 101], [101, 118], [73, 39], [39, 40], [40, 73],\n  [9, 151], [151, 108], [108, 9], [48, 115], [115, 131], [131, 48],\n  [194, 204], [204, 211], [211, 194], [74, 40], [40, 185], [185, 74],\n  [80, 42], [42, 183], [183, 80], [40, 92], [92, 186], [186, 40],\n  [230, 229], [229, 118], [118, 230], [202, 212], [212, 214], [214, 202],\n  [83, 18], [18, 17], [17, 83], [76, 61], [61, 146], [146, 76],\n  [160, 29], [29, 30], [30, 160], [56, 157], [157, 173], [173, 56],\n  [106, 204], [204, 194], [194, 106], [135, 214], [214, 192], [192, 135],\n  [203, 165], [165, 98], [98, 203], [21, 71], [71, 68], [68, 21],\n  [51, 45], [45, 4], [4, 51], [144, 24], [24, 23], [23, 144],\n  [77, 146], [146, 91], [91, 77], [205, 50], [50, 187], [187, 205],\n  [201, 200], [200, 18], [18, 201], [91, 106], [106, 182], [182, 91],\n  [90, 91], [91, 181], [181, 90], [85, 84], [84, 17], [17, 85],\n  [206, 203], [203, 36], [36, 206], [148, 171], [171, 140], [140, 148],\n  [92, 40], [40, 39], [39, 92], [193, 189], [189, 244], [244, 193],\n  [159, 158], [158, 28], [28, 159], [247, 246], [246, 161], [161, 247],\n  [236, 3], [3, 196], [196, 236], [54, 68], [68, 104], [104, 54],\n  [193, 168], [168, 8], [8, 193], [117, 228], [228, 31], [31, 117],\n  [189, 193], [193, 55], [55, 189], [98, 97], [97, 99], [99, 98],\n  [126, 47], [47, 100], [100, 126], [166, 79], [79, 218], [218, 166],\n  [155, 154], [154, 26], [26, 155], [209, 49], [49, 131], [131, 209],\n  [135, 136], [136, 150], [150, 135], [47, 126], [126, 217], [217, 47],\n  [223, 52], [52, 53], [53, 223], [45, 51], [51, 134], [134, 45],\n  [211, 170], [170, 140], [140, 211], [67, 69], [69, 108], [108, 67],\n  [43, 106], [106, 91], [91, 43], [230, 119], [119, 120], [120, 230],\n  [226, 130], [130, 247], [247, 226], [63, 53], [53, 52], [52, 63],\n  [238, 20], [20, 242], [242, 238], [46, 70], [70, 156], [156, 46],\n  [78, 62], [62, 96], [96, 78], [46, 53], [53, 63], [63, 46],\n  [143, 34], [34, 227], [227, 143], [123, 117], [117, 111], [111, 123],\n  [44, 125], [125, 19], [19, 44], [236, 134], [134, 51], [51, 236],\n  [216, 206], [206, 205], [205, 216], [154, 153], [153, 22], [22, 154],\n  [39, 37], [37, 167], [167, 39], [200, 201], [201, 208], [208, 200],\n  [36, 142], [142, 100], [100, 36], [57, 212], [212, 202], [202, 57],\n  [20, 60], [60, 99], [99, 20], [28, 158], [158, 157], [157, 28],\n  [35, 226], [226, 113], [113, 35], [160, 159], [159, 27], [27, 160],\n  [204, 202], [202, 210], [210, 204], [113, 225], [225, 46], [46, 113],\n  [43, 202], [202, 204], [204, 43], [62, 76], [76, 77], [77, 62],\n  [137, 123], [123, 116], [116, 137], [41, 38], [38, 72], [72, 41],\n  [203, 129], [129, 142], [142, 203], [64, 98], [98, 240], [240, 64],\n  [49, 102], [102, 64], [64, 49], [41, 73], [73, 74], [74, 41],\n  [212, 216], [216, 207], [207, 212], [42, 74], [74, 184], [184, 42],\n  [169, 170], [170, 211], [211, 169], [170, 149], [149, 176], [176, 170],\n  [105, 66], [66, 69], [69, 105], [122, 6], [6, 168], [168, 122],\n  [123, 147], [147, 187], [187, 123], [96, 77], [77, 90], [90, 96],\n  [65, 55], [55, 107], [107, 65], [89, 90], [90, 180], [180, 89],\n  [101, 100], [100, 120], [120, 101], [63, 105], [105, 104], [104, 63],\n  [93, 137], [137, 227], [227, 93], [15, 86], [86, 85], [85, 15],\n  [129, 102], [102, 49], [49, 129], [14, 87], [87, 86], [86, 14],\n  [55, 8], [8, 9], [9, 55], [100, 47], [47, 121], [121, 100],\n  [145, 23], [23, 22], [22, 145], [88, 89], [89, 179], [179, 88],\n  [6, 122], [122, 196], [196, 6], [88, 95], [95, 96], [96, 88],\n  [138, 172], [172, 136], [136, 138], [215, 58], [58, 172], [172, 215],\n  [115, 48], [48, 219], [219, 115], [42, 80], [80, 81], [81, 42],\n  [195, 3], [3, 51], [51, 195], [43, 146], [146, 61], [61, 43],\n  [171, 175], [175, 199], [199, 171], [81, 82], [82, 38], [38, 81],\n  [53, 46], [46, 225], [225, 53], [144, 163], [163, 110], [110, 144],\n  [52, 65], [65, 66], [66, 52], [229, 228], [228, 117], [117, 229],\n  [34, 127], [127, 234], [234, 34], [107, 108], [108, 69], [69, 107],\n  [109, 108], [108, 151], [151, 109], [48, 64], [64, 235], [235, 48],\n  [62, 78], [78, 191], [191, 62], [129, 209], [209, 126], [126, 129],\n  [111, 35], [35, 143], [143, 111], [117, 123], [123, 50], [50, 117],\n  [222, 65], [65, 52], [52, 222], [19, 125], [125, 141], [141, 19],\n  [221, 55], [55, 65], [65, 221], [3, 195], [195, 197], [197, 3],\n  [25, 7], [7, 33], [33, 25], [220, 237], [237, 44], [44, 220],\n  [70, 71], [71, 139], [139, 70], [122, 193], [193, 245], [245, 122],\n  [247, 130], [130, 33], [33, 247], [71, 21], [21, 162], [162, 71],\n  [170, 169], [169, 150], [150, 170], [188, 174], [174, 196], [196, 188],\n  [216, 186], [186, 92], [92, 216], [2, 97], [97, 167], [167, 2],\n  [141, 125], [125, 241], [241, 141], [164, 167], [167, 37], [37, 164],\n  [72, 38], [38, 12], [12, 72], [38, 82], [82, 13], [13, 38],\n  [63, 68], [68, 71], [71, 63], [226, 35], [35, 111], [111, 226],\n  [101, 50], [50, 205], [205, 101], [206, 92], [92, 165], [165, 206],\n  [209, 198], [198, 217], [217, 209], [165, 167], [167, 97], [97, 165],\n  [220, 115], [115, 218], [218, 220], [133, 112], [112, 243], [243, 133],\n  [239, 238], [238, 241], [241, 239], [214, 135], [135, 169], [169, 214],\n  [190, 173], [173, 133], [133, 190], [171, 208], [208, 32], [32, 171],\n  [125, 44], [44, 237], [237, 125], [86, 87], [87, 178], [178, 86],\n  [85, 86], [86, 179], [179, 85], [84, 85], [85, 180], [180, 84],\n  [83, 84], [84, 181], [181, 83], [201, 83], [83, 182], [182, 201],\n  [137, 93], [93, 132], [132, 137], [76, 62], [62, 183], [183, 76],\n  [61, 76], [76, 184], [184, 61], [57, 61], [61, 185], [185, 57],\n  [212, 57], [57, 186], [186, 212], [214, 207], [207, 187], [187, 214],\n  [34, 143], [143, 156], [156, 34], [79, 239], [239, 237], [237, 79],\n  [123, 137], [137, 177], [177, 123], [44, 1], [1, 4], [4, 44],\n  [201, 194], [194, 32], [32, 201], [64, 102], [102, 129], [129, 64],\n  [213, 215], [215, 138], [138, 213], [59, 166], [166, 219], [219, 59],\n  [242, 99], [99, 97], [97, 242], [2, 94], [94, 141], [141, 2],\n  [75, 59], [59, 235], [235, 75], [24, 110], [110, 228], [228, 24],\n  [25, 130], [130, 226], [226, 25], [23, 24], [24, 229], [229, 23],\n  [22, 23], [23, 230], [230, 22], [26, 22], [22, 231], [231, 26],\n  [112, 26], [26, 232], [232, 112], [189, 190], [190, 243], [243, 189],\n  [221, 56], [56, 190], [190, 221], [28, 56], [56, 221], [221, 28],\n  [27, 28], [28, 222], [222, 27], [29, 27], [27, 223], [223, 29],\n  [30, 29], [29, 224], [224, 30], [247, 30], [30, 225], [225, 247],\n  [238, 79], [79, 20], [20, 238], [166, 59], [59, 75], [75, 166],\n  [60, 75], [75, 240], [240, 60], [147, 177], [177, 215], [215, 147],\n  [20, 79], [79, 166], [166, 20], [187, 147], [147, 213], [213, 187],\n  [112, 233], [233, 244], [244, 112], [233, 128], [128, 245], [245, 233],\n  [128, 114], [114, 188], [188, 128], [114, 217], [217, 174], [174, 114],\n  [131, 115], [115, 220], [220, 131], [217, 198], [198, 236], [236, 217],\n  [198, 131], [131, 134], [134, 198], [177, 132], [132, 58], [58, 177],\n  [143, 35], [35, 124], [124, 143], [110, 163], [163, 7], [7, 110],\n  [228, 110], [110, 25], [25, 228], [356, 389], [389, 368], [368, 356],\n  [11, 302], [302, 267], [267, 11], [452, 350], [350, 349], [349, 452],\n  [302, 303], [303, 269], [269, 302], [357, 343], [343, 277], [277, 357],\n  [452, 453], [453, 357], [357, 452], [333, 332], [332, 297], [297, 333],\n  [175, 152], [152, 377], [377, 175], [347, 348], [348, 330], [330, 347],\n  [303, 304], [304, 270], [270, 303], [9, 336], [336, 337], [337, 9],\n  [278, 279], [279, 360], [360, 278], [418, 262], [262, 431], [431, 418],\n  [304, 408], [408, 409], [409, 304], [310, 415], [415, 407], [407, 310],\n  [270, 409], [409, 410], [410, 270], [450, 348], [348, 347], [347, 450],\n  [422, 430], [430, 434], [434, 422], [313, 314], [314, 17], [17, 313],\n  [306, 307], [307, 375], [375, 306], [387, 388], [388, 260], [260, 387],\n  [286, 414], [414, 398], [398, 286], [335, 406], [406, 418], [418, 335],\n  [364, 367], [367, 416], [416, 364], [423, 358], [358, 327], [327, 423],\n  [251, 284], [284, 298], [298, 251], [281, 5], [5, 4], [4, 281],\n  [373, 374], [374, 253], [253, 373], [307, 320], [320, 321], [321, 307],\n  [425, 427], [427, 411], [411, 425], [421, 313], [313, 18], [18, 421],\n  [321, 405], [405, 406], [406, 321], [320, 404], [404, 405], [405, 320],\n  [315, 16], [16, 17], [17, 315], [426, 425], [425, 266], [266, 426],\n  [377, 400], [400, 369], [369, 377], [322, 391], [391, 269], [269, 322],\n  [417, 465], [465, 464], [464, 417], [386, 257], [257, 258], [258, 386],\n  [466, 260], [260, 388], [388, 466], [456, 399], [399, 419], [419, 456],\n  [284, 332], [332, 333], [333, 284], [417, 285], [285, 8], [8, 417],\n  [346, 340], [340, 261], [261, 346], [413, 441], [441, 285], [285, 413],\n  [327, 460], [460, 328], [328, 327], [355, 371], [371, 329], [329, 355],\n  [392, 439], [439, 438], [438, 392], [382, 341], [341, 256], [256, 382],\n  [429, 420], [420, 360], [360, 429], [364, 394], [394, 379], [379, 364],\n  [277, 343], [343, 437], [437, 277], [443, 444], [444, 283], [283, 443],\n  [275, 440], [440, 363], [363, 275], [431, 262], [262, 369], [369, 431],\n  [297, 338], [338, 337], [337, 297], [273, 375], [375, 321], [321, 273],\n  [450, 451], [451, 349], [349, 450], [446, 342], [342, 467], [467, 446],\n  [293, 334], [334, 282], [282, 293], [458, 461], [461, 462], [462, 458],\n  [276, 353], [353, 383], [383, 276], [308, 324], [324, 325], [325, 308],\n  [276, 300], [300, 293], [293, 276], [372, 345], [345, 447], [447, 372],\n  [352, 345], [345, 340], [340, 352], [274, 1], [1, 19], [19, 274],\n  [456, 248], [248, 281], [281, 456], [436, 427], [427, 425], [425, 436],\n  [381, 256], [256, 252], [252, 381], [269, 391], [391, 393], [393, 269],\n  [200, 199], [199, 428], [428, 200], [266, 330], [330, 329], [329, 266],\n  [287, 273], [273, 422], [422, 287], [250, 462], [462, 328], [328, 250],\n  [258, 286], [286, 384], [384, 258], [265, 353], [353, 342], [342, 265],\n  [387, 259], [259, 257], [257, 387], [424, 431], [431, 430], [430, 424],\n  [342, 353], [353, 276], [276, 342], [273, 335], [335, 424], [424, 273],\n  [292, 325], [325, 307], [307, 292], [366, 447], [447, 345], [345, 366],\n  [271, 303], [303, 302], [302, 271], [423, 266], [266, 371], [371, 423],\n  [294, 455], [455, 460], [460, 294], [279, 278], [278, 294], [294, 279],\n  [271, 272], [272, 304], [304, 271], [432, 434], [434, 427], [427, 432],\n  [272, 407], [407, 408], [408, 272], [394, 430], [430, 431], [431, 394],\n  [395, 369], [369, 400], [400, 395], [334, 333], [333, 299], [299, 334],\n  [351, 417], [417, 168], [168, 351], [352, 280], [280, 411], [411, 352],\n  [325, 319], [319, 320], [320, 325], [295, 296], [296, 336], [336, 295],\n  [319, 403], [403, 404], [404, 319], [330, 348], [348, 349], [349, 330],\n  [293, 298], [298, 333], [333, 293], [323, 454], [454, 447], [447, 323],\n  [15, 16], [16, 315], [315, 15], [358, 429], [429, 279], [279, 358],\n  [14, 15], [15, 316], [316, 14], [285, 336], [336, 9], [9, 285],\n  [329, 349], [349, 350], [350, 329], [374, 380], [380, 252], [252, 374],\n  [318, 402], [402, 403], [403, 318], [6, 197], [197, 419], [419, 6],\n  [318, 319], [319, 325], [325, 318], [367, 364], [364, 365], [365, 367],\n  [435, 367], [367, 397], [397, 435], [344, 438], [438, 439], [439, 344],\n  [272, 271], [271, 311], [311, 272], [195, 5], [5, 281], [281, 195],\n  [273, 287], [287, 291], [291, 273], [396, 428], [428, 199], [199, 396],\n  [311, 271], [271, 268], [268, 311], [283, 444], [444, 445], [445, 283],\n  [373, 254], [254, 339], [339, 373], [282, 334], [334, 296], [296, 282],\n  [449, 347], [347, 346], [346, 449], [264, 447], [447, 454], [454, 264],\n  [336, 296], [296, 299], [299, 336], [338, 10], [10, 151], [151, 338],\n  [278, 439], [439, 455], [455, 278], [292, 407], [407, 415], [415, 292],\n  [358, 371], [371, 355], [355, 358], [340, 345], [345, 372], [372, 340],\n  [346, 347], [347, 280], [280, 346], [442, 443], [443, 282], [282, 442],\n  [19, 94], [94, 370], [370, 19], [441, 442], [442, 295], [295, 441],\n  [248, 419], [419, 197], [197, 248], [263, 255], [255, 359], [359, 263],\n  [440, 275], [275, 274], [274, 440], [300, 383], [383, 368], [368, 300],\n  [351, 412], [412, 465], [465, 351], [263, 467], [467, 466], [466, 263],\n  [301, 368], [368, 389], [389, 301], [395, 378], [378, 379], [379, 395],\n  [412, 351], [351, 419], [419, 412], [436, 426], [426, 322], [322, 436],\n  [2, 164], [164, 393], [393, 2], [370, 462], [462, 461], [461, 370],\n  [164, 0], [0, 267], [267, 164], [302, 11], [11, 12], [12, 302],\n  [268, 12], [12, 13], [13, 268], [293, 300], [300, 301], [301, 293],\n  [446, 261], [261, 340], [340, 446], [330, 266], [266, 425], [425, 330],\n  [426, 423], [423, 391], [391, 426], [429, 355], [355, 437], [437, 429],\n  [391, 327], [327, 326], [326, 391], [440, 457], [457, 438], [438, 440],\n  [341, 382], [382, 362], [362, 341], [459, 457], [457, 461], [461, 459],\n  [434, 430], [430, 394], [394, 434], [414, 463], [463, 362], [362, 414],\n  [396, 369], [369, 262], [262, 396], [354, 461], [461, 457], [457, 354],\n  [316, 403], [403, 402], [402, 316], [315, 404], [404, 403], [403, 315],\n  [314, 405], [405, 404], [404, 314], [313, 406], [406, 405], [405, 313],\n  [421, 418], [418, 406], [406, 421], [366, 401], [401, 361], [361, 366],\n  [306, 408], [408, 407], [407, 306], [291, 409], [409, 408], [408, 291],\n  [287, 410], [410, 409], [409, 287], [432, 436], [436, 410], [410, 432],\n  [434, 416], [416, 411], [411, 434], [264, 368], [368, 383], [383, 264],\n  [309, 438], [438, 457], [457, 309], [352, 376], [376, 401], [401, 352],\n  [274, 275], [275, 4], [4, 274], [421, 428], [428, 262], [262, 421],\n  [294, 327], [327, 358], [358, 294], [433, 416], [416, 367], [367, 433],\n  [289, 455], [455, 439], [439, 289], [462, 370], [370, 326], [326, 462],\n  [2, 326], [326, 370], [370, 2], [305, 460], [460, 455], [455, 305],\n  [254, 449], [449, 448], [448, 254], [255, 261], [261, 446], [446, 255],\n  [253, 450], [450, 449], [449, 253], [252, 451], [451, 450], [450, 252],\n  [256, 452], [452, 451], [451, 256], [341, 453], [453, 452], [452, 341],\n  [413, 464], [464, 463], [463, 413], [441, 413], [413, 414], [414, 441],\n  [258, 442], [442, 441], [441, 258], [257, 443], [443, 442], [442, 257],\n  [259, 444], [444, 443], [443, 259], [260, 445], [445, 444], [444, 260],\n  [467, 342], [342, 445], [445, 467], [459, 458], [458, 250], [250, 459],\n  [289, 392], [392, 290], [290, 289], [290, 328], [328, 460], [460, 290],\n  [376, 433], [433, 435], [435, 376], [250, 290], [290, 392], [392, 250],\n  [411, 416], [416, 433], [433, 411], [341, 463], [463, 464], [464, 341],\n  [453, 464], [464, 465], [465, 453], [357, 465], [465, 412], [412, 357],\n  [343, 412], [412, 399], [399, 343], [360, 363], [363, 440], [440, 360],\n  [437, 399], [399, 456], [456, 437], [420, 456], [456, 363], [363, 420],\n  [401, 435], [435, 288], [288, 401], [372, 383], [383, 353], [353, 372],\n  [339, 255], [255, 249], [249, 339], [448, 261], [261, 255], [255, 448],\n  [133, 243], [243, 190], [190, 133], [133, 155], [155, 112], [112, 133],\n  [33, 246], [246, 247], [247, 33], [33, 130], [130, 25], [25, 33],\n  [398, 384], [384, 286], [286, 398], [362, 398], [398, 414], [414, 362],\n  [362, 463], [463, 341], [341, 362], [263, 359], [359, 467], [467, 263],\n  [263, 249], [249, 255], [255, 263], [466, 467], [467, 260], [260, 466],\n  [75, 60], [60, 166], [166, 75], [238, 239], [239, 79], [79, 238],\n  [162, 127], [127, 139], [139, 162], [72, 11], [11, 37], [37, 72],\n  [121, 232], [232, 120], [120, 121], [73, 72], [72, 39], [39, 73],\n  [114, 128], [128, 47], [47, 114], [233, 232], [232, 128], [128, 233],\n  [103, 104], [104, 67], [67, 103], [152, 175], [175, 148], [148, 152],\n  [119, 118], [118, 101], [101, 119], [74, 73], [73, 40], [40, 74],\n  [107, 9], [9, 108], [108, 107], [49, 48], [48, 131], [131, 49],\n  [32, 194], [194, 211], [211, 32], [184, 74], [74, 185], [185, 184],\n  [191, 80], [80, 183], [183, 191], [185, 40], [40, 186], [186, 185],\n  [119, 230], [230, 118], [118, 119], [210, 202], [202, 214], [214, 210],\n  [84, 83], [83, 17], [17, 84], [77, 76], [76, 146], [146, 77],\n  [161, 160], [160, 30], [30, 161], [190, 56], [56, 173], [173, 190],\n  [182, 106], [106, 194], [194, 182], [138, 135], [135, 192], [192, 138],\n  [129, 203], [203, 98], [98, 129], [54, 21], [21, 68], [68, 54],\n  [5, 51], [51, 4], [4, 5], [145, 144], [144, 23], [23, 145],\n  [90, 77], [77, 91], [91, 90], [207, 205], [205, 187], [187, 207],\n  [83, 201], [201, 18], [18, 83], [181, 91], [91, 182], [182, 181],\n  [180, 90], [90, 181], [181, 180], [16, 85], [85, 17], [17, 16],\n  [205, 206], [206, 36], [36, 205], [176, 148], [148, 140], [140, 176],\n  [165, 92], [92, 39], [39, 165], [245, 193], [193, 244], [244, 245],\n  [27, 159], [159, 28], [28, 27], [30, 247], [247, 161], [161, 30],\n  [174, 236], [236, 196], [196, 174], [103, 54], [54, 104], [104, 103],\n  [55, 193], [193, 8], [8, 55], [111, 117], [117, 31], [31, 111],\n  [221, 189], [189, 55], [55, 221], [240, 98], [98, 99], [99, 240],\n  [142, 126], [126, 100], [100, 142], [219, 166], [166, 218], [218, 219],\n  [112, 155], [155, 26], [26, 112], [198, 209], [209, 131], [131, 198],\n  [169, 135], [135, 150], [150, 169], [114, 47], [47, 217], [217, 114],\n  [224, 223], [223, 53], [53, 224], [220, 45], [45, 134], [134, 220],\n  [32, 211], [211, 140], [140, 32], [109, 67], [67, 108], [108, 109],\n  [146, 43], [43, 91], [91, 146], [231, 230], [230, 120], [120, 231],\n  [113, 226], [226, 247], [247, 113], [105, 63], [63, 52], [52, 105],\n  [241, 238], [238, 242], [242, 241], [124, 46], [46, 156], [156, 124],\n  [95, 78], [78, 96], [96, 95], [70, 46], [46, 63], [63, 70],\n  [116, 143], [143, 227], [227, 116], [116, 123], [123, 111], [111, 116],\n  [1, 44], [44, 19], [19, 1], [3, 236], [236, 51], [51, 3],\n  [207, 216], [216, 205], [205, 207], [26, 154], [154, 22], [22, 26],\n  [165, 39], [39, 167], [167, 165], [199, 200], [200, 208], [208, 199],\n  [101, 36], [36, 100], [100, 101], [43, 57], [57, 202], [202, 43],\n  [242, 20], [20, 99], [99, 242], [56, 28], [28, 157], [157, 56],\n  [124, 35], [35, 113], [113, 124], [29, 160], [160, 27], [27, 29],\n  [211, 204], [204, 210], [210, 211], [124, 113], [113, 46], [46, 124],\n  [106, 43], [43, 204], [204, 106], [96, 62], [62, 77], [77, 96],\n  [227, 137], [137, 116], [116, 227], [73, 41], [41, 72], [72, 73],\n  [36, 203], [203, 142], [142, 36], [235, 64], [64, 240], [240, 235],\n  [48, 49], [49, 64], [64, 48], [42, 41], [41, 74], [74, 42],\n  [214, 212], [212, 207], [207, 214], [183, 42], [42, 184], [184, 183],\n  [210, 169], [169, 211], [211, 210], [140, 170], [170, 176], [176, 140],\n  [104, 105], [105, 69], [69, 104], [193, 122], [122, 168], [168, 193],\n  [50, 123], [123, 187], [187, 50], [89, 96], [96, 90], [90, 89],\n  [66, 65], [65, 107], [107, 66], [179, 89], [89, 180], [180, 179],\n  [119, 101], [101, 120], [120, 119], [68, 63], [63, 104], [104, 68],\n  [234, 93], [93, 227], [227, 234], [16, 15], [15, 85], [85, 16],\n  [209, 129], [129, 49], [49, 209], [15, 14], [14, 86], [86, 15],\n  [107, 55], [55, 9], [9, 107], [120, 100], [100, 121], [121, 120],\n  [153, 145], [145, 22], [22, 153], [178, 88], [88, 179], [179, 178],\n  [197, 6], [6, 196], [196, 197], [89, 88], [88, 96], [96, 89],\n  [135, 138], [138, 136], [136, 135], [138, 215], [215, 172], [172, 138],\n  [218, 115], [115, 219], [219, 218], [41, 42], [42, 81], [81, 41],\n  [5, 195], [195, 51], [51, 5], [57, 43], [43, 61], [61, 57],\n  [208, 171], [171, 199], [199, 208], [41, 81], [81, 38], [38, 41],\n  [224, 53], [53, 225], [225, 224], [24, 144], [144, 110], [110, 24],\n  [105, 52], [52, 66], [66, 105], [118, 229], [229, 117], [117, 118],\n  [227, 34], [34, 234], [234, 227], [66, 107], [107, 69], [69, 66],\n  [10, 109], [109, 151], [151, 10], [219, 48], [48, 235], [235, 219],\n  [183, 62], [62, 191], [191, 183], [142, 129], [129, 126], [126, 142],\n  [116, 111], [111, 143], [143, 116], [118, 117], [117, 50], [50, 118],\n  [223, 222], [222, 52], [52, 223], [94, 19], [19, 141], [141, 94],\n  [222, 221], [221, 65], [65, 222], [196, 3], [3, 197], [197, 196],\n  [45, 220], [220, 44], [44, 45], [156, 70], [70, 139], [139, 156],\n  [188, 122], [122, 245], [245, 188], [139, 71], [71, 162], [162, 139],\n  [149, 170], [170, 150], [150, 149], [122, 188], [188, 196], [196, 122],\n  [206, 216], [216, 92], [92, 206], [164, 2], [2, 167], [167, 164],\n  [242, 141], [141, 241], [241, 242], [0, 164], [164, 37], [37, 0],\n  [11, 72], [72, 12], [12, 11], [12, 38], [38, 13], [13, 12],\n  [70, 63], [63, 71], [71, 70], [31, 226], [226, 111], [111, 31],\n  [36, 101], [101, 205], [205, 36], [203, 206], [206, 165], [165, 203],\n  [126, 209], [209, 217], [217, 126], [98, 165], [165, 97], [97, 98],\n  [237, 220], [220, 218], [218, 237], [237, 239], [239, 241], [241, 237],\n  [210, 214], [214, 169], [169, 210], [140, 171], [171, 32], [32, 140],\n  [241, 125], [125, 237], [237, 241], [179, 86], [86, 178], [178, 179],\n  [180, 85], [85, 179], [179, 180], [181, 84], [84, 180], [180, 181],\n  [182, 83], [83, 181], [181, 182], [194, 201], [201, 182], [182, 194],\n  [177, 137], [137, 132], [132, 177], [184, 76], [76, 183], [183, 184],\n  [185, 61], [61, 184], [184, 185], [186, 57], [57, 185], [185, 186],\n  [216, 212], [212, 186], [186, 216], [192, 214], [214, 187], [187, 192],\n  [139, 34], [34, 156], [156, 139], [218, 79], [79, 237], [237, 218],\n  [147, 123], [123, 177], [177, 147], [45, 44], [44, 4], [4, 45],\n  [208, 201], [201, 32], [32, 208], [98, 64], [64, 129], [129, 98],\n  [192, 213], [213, 138], [138, 192], [235, 59], [59, 219], [219, 235],\n  [141, 242], [242, 97], [97, 141], [97, 2], [2, 141], [141, 97],\n  [240, 75], [75, 235], [235, 240], [229, 24], [24, 228], [228, 229],\n  [31, 25], [25, 226], [226, 31], [230, 23], [23, 229], [229, 230],\n  [231, 22], [22, 230], [230, 231], [232, 26], [26, 231], [231, 232],\n  [233, 112], [112, 232], [232, 233], [244, 189], [189, 243], [243, 244],\n  [189, 221], [221, 190], [190, 189], [222, 28], [28, 221], [221, 222],\n  [223, 27], [27, 222], [222, 223], [224, 29], [29, 223], [223, 224],\n  [225, 30], [30, 224], [224, 225], [113, 247], [247, 225], [225, 113],\n  [99, 60], [60, 240], [240, 99], [213, 147], [147, 215], [215, 213],\n  [60, 20], [20, 166], [166, 60], [192, 187], [187, 213], [213, 192],\n  [243, 112], [112, 244], [244, 243], [244, 233], [233, 245], [245, 244],\n  [245, 128], [128, 188], [188, 245], [188, 114], [114, 174], [174, 188],\n  [134, 131], [131, 220], [220, 134], [174, 217], [217, 236], [236, 174],\n  [236, 198], [198, 134], [134, 236], [215, 177], [177, 58], [58, 215],\n  [156, 143], [143, 124], [124, 156], [25, 110], [110, 7], [7, 25],\n  [31, 228], [228, 25], [25, 31], [264, 356], [356, 368], [368, 264],\n  [0, 11], [11, 267], [267, 0], [451, 452], [452, 349], [349, 451],\n  [267, 302], [302, 269], [269, 267], [350, 357], [357, 277], [277, 350],\n  [350, 452], [452, 357], [357, 350], [299, 333], [333, 297], [297, 299],\n  [396, 175], [175, 377], [377, 396], [280, 347], [347, 330], [330, 280],\n  [269, 303], [303, 270], [270, 269], [151, 9], [9, 337], [337, 151],\n  [344, 278], [278, 360], [360, 344], [424, 418], [418, 431], [431, 424],\n  [270, 304], [304, 409], [409, 270], [272, 310], [310, 407], [407, 272],\n  [322, 270], [270, 410], [410, 322], [449, 450], [450, 347], [347, 449],\n  [432, 422], [422, 434], [434, 432], [18, 313], [313, 17], [17, 18],\n  [291, 306], [306, 375], [375, 291], [259, 387], [387, 260], [260, 259],\n  [424, 335], [335, 418], [418, 424], [434, 364], [364, 416], [416, 434],\n  [391, 423], [423, 327], [327, 391], [301, 251], [251, 298], [298, 301],\n  [275, 281], [281, 4], [4, 275], [254, 373], [373, 253], [253, 254],\n  [375, 307], [307, 321], [321, 375], [280, 425], [425, 411], [411, 280],\n  [200, 421], [421, 18], [18, 200], [335, 321], [321, 406], [406, 335],\n  [321, 320], [320, 405], [405, 321], [314, 315], [315, 17], [17, 314],\n  [423, 426], [426, 266], [266, 423], [396, 377], [377, 369], [369, 396],\n  [270, 322], [322, 269], [269, 270], [413, 417], [417, 464], [464, 413],\n  [385, 386], [386, 258], [258, 385], [248, 456], [456, 419], [419, 248],\n  [298, 284], [284, 333], [333, 298], [168, 417], [417, 8], [8, 168],\n  [448, 346], [346, 261], [261, 448], [417, 413], [413, 285], [285, 417],\n  [326, 327], [327, 328], [328, 326], [277, 355], [355, 329], [329, 277],\n  [309, 392], [392, 438], [438, 309], [381, 382], [382, 256], [256, 381],\n  [279, 429], [429, 360], [360, 279], [365, 364], [364, 379], [379, 365],\n  [355, 277], [277, 437], [437, 355], [282, 443], [443, 283], [283, 282],\n  [281, 275], [275, 363], [363, 281], [395, 431], [431, 369], [369, 395],\n  [299, 297], [297, 337], [337, 299], [335, 273], [273, 321], [321, 335],\n  [348, 450], [450, 349], [349, 348], [359, 446], [446, 467], [467, 359],\n  [283, 293], [293, 282], [282, 283], [250, 458], [458, 462], [462, 250],\n  [300, 276], [276, 383], [383, 300], [292, 308], [308, 325], [325, 292],\n  [283, 276], [276, 293], [293, 283], [264, 372], [372, 447], [447, 264],\n  [346, 352], [352, 340], [340, 346], [354, 274], [274, 19], [19, 354],\n  [363, 456], [456, 281], [281, 363], [426, 436], [436, 425], [425, 426],\n  [380, 381], [381, 252], [252, 380], [267, 269], [269, 393], [393, 267],\n  [421, 200], [200, 428], [428, 421], [371, 266], [266, 329], [329, 371],\n  [432, 287], [287, 422], [422, 432], [290, 250], [250, 328], [328, 290],\n  [385, 258], [258, 384], [384, 385], [446, 265], [265, 342], [342, 446],\n  [386, 387], [387, 257], [257, 386], [422, 424], [424, 430], [430, 422],\n  [445, 342], [342, 276], [276, 445], [422, 273], [273, 424], [424, 422],\n  [306, 292], [292, 307], [307, 306], [352, 366], [366, 345], [345, 352],\n  [268, 271], [271, 302], [302, 268], [358, 423], [423, 371], [371, 358],\n  [327, 294], [294, 460], [460, 327], [331, 279], [279, 294], [294, 331],\n  [303, 271], [271, 304], [304, 303], [436, 432], [432, 427], [427, 436],\n  [304, 272], [272, 408], [408, 304], [395, 394], [394, 431], [431, 395],\n  [378, 395], [395, 400], [400, 378], [296, 334], [334, 299], [299, 296],\n  [6, 351], [351, 168], [168, 6], [376, 352], [352, 411], [411, 376],\n  [307, 325], [325, 320], [320, 307], [285, 295], [295, 336], [336, 285],\n  [320, 319], [319, 404], [404, 320], [329, 330], [330, 349], [349, 329],\n  [334, 293], [293, 333], [333, 334], [366, 323], [323, 447], [447, 366],\n  [316, 15], [15, 315], [315, 316], [331, 358], [358, 279], [279, 331],\n  [317, 14], [14, 316], [316, 317], [8, 285], [285, 9], [9, 8],\n  [277, 329], [329, 350], [350, 277], [253, 374], [374, 252], [252, 253],\n  [319, 318], [318, 403], [403, 319], [351, 6], [6, 419], [419, 351],\n  [324, 318], [318, 325], [325, 324], [397, 367], [367, 365], [365, 397],\n  [288, 435], [435, 397], [397, 288], [278, 344], [344, 439], [439, 278],\n  [310, 272], [272, 311], [311, 310], [248, 195], [195, 281], [281, 248],\n  [375, 273], [273, 291], [291, 375], [175, 396], [396, 199], [199, 175],\n  [312, 311], [311, 268], [268, 312], [276, 283], [283, 445], [445, 276],\n  [390, 373], [373, 339], [339, 390], [295, 282], [282, 296], [296, 295],\n  [448, 449], [449, 346], [346, 448], [356, 264], [264, 454], [454, 356],\n  [337, 336], [336, 299], [299, 337], [337, 338], [338, 151], [151, 337],\n  [294, 278], [278, 455], [455, 294], [308, 292], [292, 415], [415, 308],\n  [429, 358], [358, 355], [355, 429], [265, 340], [340, 372], [372, 265],\n  [352, 346], [346, 280], [280, 352], [295, 442], [442, 282], [282, 295],\n  [354, 19], [19, 370], [370, 354], [285, 441], [441, 295], [295, 285],\n  [195, 248], [248, 197], [197, 195], [457, 440], [440, 274], [274, 457],\n  [301, 300], [300, 368], [368, 301], [417, 351], [351, 465], [465, 417],\n  [251, 301], [301, 389], [389, 251], [394, 395], [395, 379], [379, 394],\n  [399, 412], [412, 419], [419, 399], [410, 436], [436, 322], [322, 410],\n  [326, 2], [2, 393], [393, 326], [354, 370], [370, 461], [461, 354],\n  [393, 164], [164, 267], [267, 393], [268, 302], [302, 12], [12, 268],\n  [312, 268], [268, 13], [13, 312], [298, 293], [293, 301], [301, 298],\n  [265, 446], [446, 340], [340, 265], [280, 330], [330, 425], [425, 280],\n  [322, 426], [426, 391], [391, 322], [420, 429], [429, 437], [437, 420],\n  [393, 391], [391, 326], [326, 393], [344, 440], [440, 438], [438, 344],\n  [458, 459], [459, 461], [461, 458], [364, 434], [434, 394], [394, 364],\n  [428, 396], [396, 262], [262, 428], [274, 354], [354, 457], [457, 274],\n  [317, 316], [316, 402], [402, 317], [316, 315], [315, 403], [403, 316],\n  [315, 314], [314, 404], [404, 315], [314, 313], [313, 405], [405, 314],\n  [313, 421], [421, 406], [406, 313], [323, 366], [366, 361], [361, 323],\n  [292, 306], [306, 407], [407, 292], [306, 291], [291, 408], [408, 306],\n  [291, 287], [287, 409], [409, 291], [287, 432], [432, 410], [410, 287],\n  [427, 434], [434, 411], [411, 427], [372, 264], [264, 383], [383, 372],\n  [459, 309], [309, 457], [457, 459], [366, 352], [352, 401], [401, 366],\n  [1, 274], [274, 4], [4, 1], [418, 421], [421, 262], [262, 418],\n  [331, 294], [294, 358], [358, 331], [435, 433], [433, 367], [367, 435],\n  [392, 289], [289, 439], [439, 392], [328, 462], [462, 326], [326, 328],\n  [94, 2], [2, 370], [370, 94], [289, 305], [305, 455], [455, 289],\n  [339, 254], [254, 448], [448, 339], [359, 255], [255, 446], [446, 359],\n  [254, 253], [253, 449], [449, 254], [253, 252], [252, 450], [450, 253],\n  [252, 256], [256, 451], [451, 252], [256, 341], [341, 452], [452, 256],\n  [414, 413], [413, 463], [463, 414], [286, 441], [441, 414], [414, 286],\n  [286, 258], [258, 441], [441, 286], [258, 257], [257, 442], [442, 258],\n  [257, 259], [259, 443], [443, 257], [259, 260], [260, 444], [444, 259],\n  [260, 467], [467, 445], [445, 260], [309, 459], [459, 250], [250, 309],\n  [305, 289], [289, 290], [290, 305], [305, 290], [290, 460], [460, 305],\n  [401, 376], [376, 435], [435, 401], [309, 250], [250, 392], [392, 309],\n  [376, 411], [411, 433], [433, 376], [453, 341], [341, 464], [464, 453],\n  [357, 453], [453, 465], [465, 357], [343, 357], [357, 412], [412, 343],\n  [437, 343], [343, 399], [399, 437], [344, 360], [360, 440], [440, 344],\n  [420, 437], [437, 456], [456, 420], [360, 420], [420, 363], [363, 360],\n  [361, 401], [401, 288], [288, 361], [265, 372], [372, 353], [353, 265],\n  [390, 339], [339, 249], [249, 390], [339, 448], [448, 255], [255, 339],\n];\n", "/**\n * BlazeFace, FaceMesh & Iris model implementation\n * See `facemesh.ts` for entry point\n */\n\nimport * as tf from '../../dist/tfjs.esm.js';\nimport * as coords from './facemeshcoords';\nimport { constants } from '../tfjs/constants';\nimport type { Box, Point } from '../result';\nimport { env } from '../util/env';\n\nexport const createBox = (startEndTensor) => ({ startPoint: tf.slice(startEndTensor, [0, 0], [-1, 2]), endPoint: tf.slice(startEndTensor, [0, 2], [-1, 2]) });\n\nexport const disposeBox = (t) => tf.dispose([t.startPoint, t.endPoint]);\n\nexport const getBoxSize = (box): [number, number] => [Math.abs(box.endPoint[0] - box.startPoint[0]), Math.abs(box.endPoint[1] - box.startPoint[1])];\n\nexport const getBoxCenter = (box): [number, number, number] => [box.startPoint[0] + (box.endPoint[0] - box.startPoint[0]) / 2, box.startPoint[1] + (box.endPoint[1] - box.startPoint[1]) / 2, 1];\n\nexport const clampBox = (box, input): Box => (box ? [\n  Math.trunc(Math.max(0, box.startPoint[0])),\n  Math.trunc(Math.max(0, box.startPoint[1])),\n  Math.trunc(Math.min((input.shape[2] || 0), box.endPoint[0]) - Math.max(0, box.startPoint[0])),\n  Math.trunc(Math.min((input.shape[1] || 0), box.endPoint[1]) - Math.max(0, box.startPoint[1])),\n] : [0, 0, 0, 0]);\n\nexport const getRawBox = (box, input): Box => (box ? [\n  box.startPoint[0] / (input.shape[2] || 0),\n  box.startPoint[1] / (input.shape[1] || 0),\n  (box.endPoint[0] - box.startPoint[0]) / (input.shape[2] || 0),\n  (box.endPoint[1] - box.startPoint[1]) / (input.shape[1] || 0),\n] : [0, 0, 0, 0]);\n\nexport const scaleBoxCoordinates = (box, factor) => {\n  const startPoint: Point = [box.startPoint[0] * factor[0], box.startPoint[1] * factor[1]];\n  const endPoint: Point = [box.endPoint[0] * factor[0], box.endPoint[1] * factor[1]];\n  return { startPoint, endPoint, landmarks: box.landmarks, confidence: box.confidence };\n};\n\nexport const cutAndResize = (box, image, cropSize) => {\n  const h = image.shape[1];\n  const w = image.shape[2];\n  const cutBox = [box.startPoint[1] / h, box.startPoint[0] / w, box.endPoint[1] / h, box.endPoint[0] / w];\n  const crop = tf.image.cropAndResize(image, [cutBox], [0], cropSize);\n  const norm = tf.div(crop, constants.tf255);\n  tf.dispose(crop);\n  return norm;\n};\n\nexport const enlargeBox = (box, factor) => {\n  const center = getBoxCenter(box);\n  const size = getBoxSize(box);\n  const halfSize: [number, number] = [factor * size[0] / 2, factor * size[1] / 2];\n  return { startPoint: [center[0] - halfSize[0], center[1] - halfSize[1]] as Point, endPoint: [center[0] + halfSize[0], center[1] + halfSize[1]] as Point, landmarks: box.landmarks, confidence: box.confidence };\n};\n\nexport const squarifyBox = (box) => {\n  const centers = getBoxCenter(box);\n  const size = getBoxSize(box);\n  const halfSize = Math.max(...size) / 2;\n  return { startPoint: [Math.round(centers[0] - halfSize), Math.round(centers[1] - halfSize)] as Point, endPoint: [Math.round(centers[0] + halfSize), Math.round(centers[1] + halfSize)] as Point, landmarks: box.landmarks, confidence: box.confidence };\n};\n\nexport const calculateLandmarksBoundingBox = (landmarks) => {\n  const x = landmarks.map((d) => d[0]);\n  const y = landmarks.map((d) => d[1]);\n  return { startPoint: [Math.min(...x), Math.min(...y)] as Point, endPoint: [Math.max(...x), Math.max(...y)] as Point, landmarks };\n};\n\nexport const fixedRotationMatrix = [[1, 0, 0], [0, 1, 0], [0, 0, 1]];\n\nexport const normalizeRadians = (angle: number) => angle - 2 * Math.PI * Math.floor((angle + Math.PI) / (2 * Math.PI));\n\nexport const computeRotation = (point1, point2) => normalizeRadians(Math.PI / 2 - Math.atan2(-(point2[1] - point1[1]), point2[0] - point1[0]));\n\nexport const radToDegrees = (rad) => rad * 180 / Math.PI;\n\nexport const buildTranslationMatrix = (x, y) => [[1, 0, x], [0, 1, y], [0, 0, 1]];\n\nexport const dot = (v1: number[], v2: number[]) => {\n  let product = 0;\n  for (let i = 0; i < v1.length; i++) product += v1[i] * v2[i];\n  return product;\n};\n\nexport const getColumnFrom2DArr = (arr, columnIndex) => {\n  const column: number[] = [];\n  for (let i = 0; i < arr.length; i++) column.push(arr[i][columnIndex]);\n  return column;\n};\n\nexport const multiplyTransformMatrices = (mat1, mat2) => {\n  const product: number[][] = [];\n  const size = mat1.length;\n  for (let row = 0; row < size; row++) {\n    product.push([]);\n    for (let col = 0; col < size; col++) product[row].push(dot(mat1[row], getColumnFrom2DArr(mat2, col)));\n  }\n  return product;\n};\n\nexport const buildRotationMatrix = (rotation, center) => {\n  const cosA = Math.cos(rotation);\n  const sinA = Math.sin(rotation);\n  const rotationMatrix = [[cosA, -sinA, 0], [sinA, cosA, 0], [0, 0, 1]];\n  const translationMatrix = buildTranslationMatrix(center[0], center[1]);\n  const translationTimesRotation = multiplyTransformMatrices(translationMatrix, rotationMatrix);\n  const negativeTranslationMatrix = buildTranslationMatrix(-center[0], -center[1]);\n  return multiplyTransformMatrices(translationTimesRotation, negativeTranslationMatrix);\n};\n\nexport const invertTransformMatrix = (matrix) => {\n  const rotationComponent = [[matrix[0][0], matrix[1][0]], [matrix[0][1], matrix[1][1]]];\n  const translationComponent = [matrix[0][2], matrix[1][2]];\n  const invertedTranslation = [-dot(rotationComponent[0], translationComponent), -dot(rotationComponent[1], translationComponent)];\n  return [rotationComponent[0].concat(invertedTranslation[0]), rotationComponent[1].concat(invertedTranslation[1]), [0, 0, 1]];\n};\n\nexport const rotatePoint = (homogeneousCoordinate, rotationMatrix) => [dot(homogeneousCoordinate, rotationMatrix[0]), dot(homogeneousCoordinate, rotationMatrix[1])];\n\nexport const xyDistanceBetweenPoints = (a, b) => Math.sqrt(((a[0] - b[0]) ** 2) + ((a[1] - b[1]) ** 2));\n\nexport function generateAnchors(inputSize: number) {\n  const spec = inputSize === 192\n    ? { strides: [4], anchors: [1] } // facemesh-detector\n    : { strides: [inputSize / 16, inputSize / 8], anchors: [2, 6] }; // blazeface\n  const anchors: [number, number][] = [];\n  for (let i = 0; i < spec.strides.length; i++) {\n    const stride = spec.strides[i];\n    const gridRows = Math.floor((inputSize + stride - 1) / stride);\n    const gridCols = Math.floor((inputSize + stride - 1) / stride);\n    const anchorsNum = spec.anchors[i];\n    for (let gridY = 0; gridY < gridRows; gridY++) {\n      const anchorY = stride * (gridY + 0.5);\n      for (let gridX = 0; gridX < gridCols; gridX++) {\n        const anchorX = stride * (gridX + 0.5);\n        for (let n = 0; n < anchorsNum; n++) anchors.push([anchorX, anchorY]);\n      }\n    }\n  }\n  return anchors;\n}\n\nexport function transformRawCoords(coordsRaw, box, angle, rotationMatrix, inputSize) {\n  const boxSize = getBoxSize(box);\n  const coordsScaled = coordsRaw.map((coord) => ([ // scaled around zero-point\n    (boxSize[0] / inputSize) * (coord[0] - (inputSize / 2)),\n    (boxSize[1] / inputSize) * (coord[1] - (inputSize / 2)),\n    (coord[2] || 0),\n  ]));\n  const largeAngle = angle && (angle !== 0) && (Math.abs(angle) > 0.2);\n  const coordsRotationMatrix = largeAngle ? buildRotationMatrix(angle, [0, 0]) : fixedRotationMatrix;\n  const coordsRotated = largeAngle ? coordsScaled.map((coord) => ([...rotatePoint(coord, coordsRotationMatrix), coord[2]])) : coordsScaled;\n  const inverseRotationMatrix = largeAngle ? invertTransformMatrix(rotationMatrix) : fixedRotationMatrix;\n  const boxCenter = getBoxCenter(box);\n  const offsets = [dot(boxCenter, inverseRotationMatrix[0]), dot(boxCenter, inverseRotationMatrix[1])];\n  return coordsRotated.map((coord) => ([\n    Math.trunc(coord[0] + offsets[0]),\n    Math.trunc(coord[1] + offsets[1]),\n    Math.trunc(coord[2] || 0),\n  ]));\n}\n\nexport function correctFaceRotation(rotate, box, input, inputSize) {\n  const symmetryLine = (box.landmarks.length >= coords.meshLandmarks.count)\n    ? coords.meshLandmarks.symmetryLine\n    : coords.blazeFaceLandmarks.symmetryLine;\n  let angle = 0; // default\n  let rotationMatrix = fixedRotationMatrix; // default\n  let face; // default\n\n  if (rotate && env.kernels.includes('rotatewithoffset')) {\n    angle = computeRotation(box.landmarks[symmetryLine[0]], box.landmarks[symmetryLine[1]]);\n    const largeAngle = angle && (angle !== 0) && (Math.abs(angle) > 0.2);\n    if (largeAngle) { // perform rotation only if angle is sufficiently high\n      const center: Point = getBoxCenter(box);\n      const centerRaw: Point = [center[0] / input.shape[2], center[1] / input.shape[1]];\n      const rotated = tf.image.rotateWithOffset(input, angle, 0, centerRaw);\n      rotationMatrix = buildRotationMatrix(-angle, center);\n      face = cutAndResize(box, rotated, [inputSize, inputSize]);\n      tf.dispose(rotated);\n    } else {\n      face = cutAndResize(box, input, [inputSize, inputSize]);\n    }\n  } else {\n    face = cutAndResize(box, input, [inputSize, inputSize]);\n  }\n  return [angle, rotationMatrix, face];\n}\n\nexport const findFaceCenter = (mesh) => {\n  const x = mesh.map((m) => m[0]);\n  const y = mesh.map((m) => m[1]);\n  // weighted center\n  /*\n  const sum = (arr: number[]) => arr.reduce((prev, curr) => prev + curr, 0);\n  return [sum(x) / mesh.length, sum(y) / mesh.length];\n  */\n  // absolute center\n  return [Math.min(...x) + (Math.max(...x) - Math.min(...x)) / 2, Math.min(...y) + (Math.max(...y) - Math.min(...y)) / 2];\n};\n\nexport const calculateFaceBox = (mesh, previousBox) => {\n  const center = findFaceCenter(mesh);\n  const boxSize = getBoxSize(previousBox);\n  const calculatedBox = {\n    startPoint: [center[0] - boxSize[0] / 2, center[1] - boxSize[1] / 2] as Point,\n    endPoint: [center[0] + boxSize[0] / 2, center[1] + boxSize[1] / 2] as Point,\n  };\n  return calculatedBox;\n};\n", "/**\n * BlazeFace, FaceMesh & Iris model implementation\n * See `facemesh.ts` for entry point\n */\n\nimport { log } from '../util/util';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport * as util from './facemeshutil';\nimport { loadModel } from '../tfjs/load';\nimport { constants } from '../tfjs/constants';\nimport type { Config } from '../config';\nimport type { Tensor, GraphModel } from '../tfjs/types';\nimport { env } from '../util/env';\nimport type { Point } from '../result';\n\nconst keypointsCount = 6;\nconst faceBoxScaleFactor = 1.4;\nlet model: GraphModel | null;\nlet anchors: Tensor | null = null;\nlet inputSize = 0;\nlet inputSizeT: Tensor | null = null;\n\ninterface DetectBox { startPoint: Point, endPoint: Point, landmarks: Point[], confidence: number }\n\nexport const size = () => inputSize;\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (env.initial) model = null;\n  if (!model) model = await loadModel(config.face.detector?.modelPath);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  inputSize = (model['executor'] && model.inputs[0].shape) ? model.inputs[0].shape[2] : 256;\n  inputSizeT = tf.scalar(inputSize, 'int32') as Tensor;\n  anchors = tf.tensor2d(util.generateAnchors(inputSize)) as Tensor;\n  return model;\n}\n\nfunction decodeBoxes(boxOutputs: Tensor) {\n  const t: Record<string, Tensor> = {};\n  t.boxStarts = tf.slice(boxOutputs, [0, 1], [-1, 2]);\n  t.centers = tf.add(t.boxStarts, anchors);\n  t.boxSizes = tf.slice(boxOutputs, [0, 3], [-1, 2]);\n  t.boxSizesNormalized = tf.div(t.boxSizes, inputSizeT);\n  t.centersNormalized = tf.div(t.centers, inputSizeT);\n  t.halfBoxSize = tf.div(t.boxSizesNormalized, constants.tf2);\n  t.starts = tf.sub(t.centersNormalized, t.halfBoxSize);\n  t.ends = tf.add(t.centersNormalized, t.halfBoxSize);\n  t.startNormalized = tf.mul(t.starts, inputSizeT);\n  t.endNormalized = tf.mul(t.ends, inputSizeT);\n  const boxes = tf.concat2d([t.startNormalized, t.endNormalized], 1);\n  Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n  return boxes;\n}\n\nexport async function getBoxes(inputImage: Tensor, config: Config) {\n  // sanity check on input\n  if ((!inputImage) || (inputImage['isDisposedInternal']) || (inputImage.shape.length !== 4) || (inputImage.shape[1] < 1) || (inputImage.shape[2] < 1)) return [];\n  const t: Record<string, Tensor> = {};\n  t.resized = tf.image.resizeBilinear(inputImage, [inputSize, inputSize]);\n  t.div = tf.div(t.resized, constants.tf127);\n  t.normalized = tf.sub(t.div, constants.tf05);\n  const res = model?.execute(t.normalized) as Tensor[];\n  if (Array.isArray(res) && res.length > 2) { // pinto converted model?\n    const sorted = res.sort((a, b) => a.size - b.size);\n    t.concat384 = tf.concat([sorted[0], sorted[2]], 2); // dim: 384, 1 + 16\n    t.concat512 = tf.concat([sorted[1], sorted[3]], 2); // dim: 512, 1 + 16\n    t.concat = tf.concat([t.concat512, t.concat384], 1);\n    t.batch = tf.squeeze(t.concat, 0);\n  } else if (Array.isArray(res)) { // new facemesh-detection tfhub model\n    t.batch = tf.squeeze(res[0]);\n  } else { // original blazeface tfhub model\n    t.batch = tf.squeeze(res);\n  }\n  tf.dispose(res);\n  t.boxes = decodeBoxes(t.batch);\n  t.logits = tf.slice(t.batch, [0, 0], [-1, 1]);\n  t.sigmoid = tf.sigmoid(t.logits);\n  t.scores = tf.squeeze(t.sigmoid);\n  t.nms = await tf.image.nonMaxSuppressionAsync(t.boxes, t.scores, (config.face.detector?.maxDetected || 0), (config.face.detector?.iouThreshold || 0), (config.face.detector?.minConfidence || 0));\n  const nms = await t.nms.array() as number[];\n  const boxes: DetectBox[] = [];\n  const scores = await t.scores.data();\n  for (let i = 0; i < nms.length; i++) {\n    const confidence = scores[nms[i]];\n    if (confidence > (config.face.detector?.minConfidence || 0)) {\n      const b: Record<string, Tensor> = {};\n      b.bbox = tf.slice(t.boxes, [nms[i], 0], [1, -1]);\n      b.slice = tf.slice(t.batch, [nms[i], keypointsCount - 1], [1, -1]);\n      b.squeeze = tf.squeeze(b.slice);\n      b.landmarks = tf.reshape(b.squeeze, [keypointsCount, -1]);\n      const points = await b.bbox.data();\n      const rawBox = {\n        startPoint: [points[0], points[1]] as Point,\n        endPoint: [points[2], points[3]] as Point,\n        landmarks: (await b.landmarks.array()) as Point[],\n        confidence,\n      };\n      const scaledBox = util.scaleBoxCoordinates(rawBox, [(inputImage.shape[2] || 0) / inputSize, (inputImage.shape[1] || 0) / inputSize]);\n      const enlargedBox = util.enlargeBox(scaledBox, config.face['scale'] || faceBoxScaleFactor);\n      const squaredBox = util.squarifyBox(enlargedBox);\n      boxes.push(squaredBox);\n      Object.keys(b).forEach((tensor) => tf.dispose(b[tensor]));\n    }\n  }\n  Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n  return boxes;\n}\n", "/* eslint-disable no-multi-spaces */\n\nexport const kpt: string[] = [\n  'nose',            //  0\n  'leftEyeInside',   //  1\n  'leftEye',         //  2\n  'leftEyeOutside',  //  3\n  'rightEyeInside',  //  4\n  'rightEye',        //  5\n  'rightEyeOutside', //  6\n  'leftEar',         //  7\n  'rightEar',        //  8\n  'leftMouth',       //  9\n  'rightMouth',      // 10\n  'leftShoulder',    // 11\n  'rightShoulder',   // 12\n  'leftElbow',       // 13\n  'rightElbow',      // 14\n  'leftWrist',       // 15\n  'rightWrist',      // 16\n  'leftPinky',       // 17\n  'rightPinky',      // 18\n  'leftIndex',       // 19\n  'rightIndex',      // 20\n  'leftThumb',       // 21\n  'rightThumb',      // 22\n  'leftHip',         // 23\n  'rightHip',        // 24\n  'leftKnee',        // 25\n  'rightKnee',       // 26\n  'leftAnkle',       // 27\n  'rightAnkle',      // 28\n  'leftHeel',        // 29\n  'rightHeel',       // 30\n  'leftFoot',        // 31\n  'rightFoot',       // 32\n  'bodyCenter',      // 33\n  'bodyTop',         // 34\n  'leftPalm',        // 35 // z-coord not ok\n  'leftHand',        // 36 // similar to wrist but z-coord not ok\n  'rightPalm',       // 37 // z-coord not ok\n  'rightHand',       // 38 // similar to wrist but z-coord not ok\n];\n\nexport const connected: Record<string, string[]> = {\n  shoulders: ['leftShoulder', 'rightShoulder'],\n  hips: ['rightHip', 'leftHip'],\n  mouth: ['leftMouth', 'rightMouth'],\n  leftLegUpper: ['leftHip', 'leftKnee'],\n  leftLegLower: ['leftKnee', 'leftAnkle'],\n  leftFoot: ['leftAnkle', 'leftHeel', 'leftFoot'],\n  leftTorso: ['leftShoulder', 'leftHip'],\n  leftArmUpper: ['leftShoulder', 'leftElbow'],\n  leftArmLower: ['leftElbow', 'leftWrist'],\n  leftHand: ['leftWrist', 'leftPalm'],\n  leftHandPinky: ['leftPalm', 'leftPinky'],\n  leftHandIndex: ['leftPalm', 'leftIndex'],\n  leftHandThumb: ['leftPalm', 'leftThumb'],\n  leftEyeOutline: ['leftEyeInside', 'leftEyeOutside'],\n  rightLegUpper: ['rightHip', 'rightKnee'],\n  rightLegLower: ['rightKnee', 'rightAnkle'],\n  rightFoot: ['rightAnkle', 'rightHeel', 'rightFoot'],\n  rightTorso: ['rightShoulder', 'rightHip'],\n  rightArmUpper: ['rightShoulder', 'rightElbow'],\n  rightArmLower: ['rightElbow', 'rightWrist'],\n  rightHand: ['rightWrist', 'rightPalm'],\n  rightHandPinky: ['rightPalm', 'rightPinky'],\n  rightHandIndex: ['rightPalm', 'rightIndex'],\n  rightHandThumb: ['rightPalm', 'rightThumb'],\n  rightEyeOutline: ['rightEyeInside', 'rightEyeOutside'],\n};\n", "import * as tf from '../../dist/tfjs.esm.js';\nimport type { Tensor } from '../tfjs/types';\nimport type { Box } from '../result';\nimport type { Config } from '../config';\n\ninterface DetectedBox { box: Box, boxRaw: Box, score: number }\n\nconst inputSize = 224;\nlet anchorTensor: { x, y };\nconst numLayers = 5;\nconst strides = [8, 16, 32, 32, 32];\n\nexport function createAnchors() {\n  const anchors: { x: number, y: number }[] = [];\n  let layerId = 0;\n  while (layerId < numLayers) {\n    let anchorCount = 0;\n    let lastSameStrideLayer = layerId;\n    while (lastSameStrideLayer < strides.length && strides[lastSameStrideLayer] === strides[layerId]) {\n      anchorCount += 2;\n      lastSameStrideLayer++;\n    }\n    const stride = strides[layerId];\n    const featureMapHeight = Math.ceil(inputSize / stride);\n    const featureMapWidth = Math.ceil(inputSize / stride);\n    for (let y = 0; y < featureMapHeight; ++y) {\n      for (let x = 0; x < featureMapWidth; ++x) {\n        for (let anchorId = 0; anchorId < anchorCount; ++anchorId) {\n          anchors.push({ x: (x + 0.5) / featureMapWidth, y: (y + 0.5) / featureMapHeight });\n        }\n      }\n    }\n    layerId = lastSameStrideLayer;\n  }\n  anchorTensor = { x: tf.tensor1d(anchors.map((a) => a.x)), y: tf.tensor1d(anchors.map((a) => a.y)) };\n}\n\nconst cropFactor = [5.0, 5.0];\nfunction decodeBoxes(boxesTensor, anchor): Tensor {\n  return tf.tidy(() => {\n    const split = tf.split(boxesTensor, 12, 1); // first 4 are box data [x,y,w,h] and 4 are keypoints data [x,y] for total of 12\n    let xCenter = tf.squeeze(split[0]);\n    let yCenter = tf.squeeze(split[1]);\n    let width = tf.squeeze(split[2]);\n    let height = tf.squeeze(split[3]);\n    xCenter = tf.add(tf.div(xCenter, inputSize), anchor.x);\n    yCenter = tf.add(tf.div(yCenter, inputSize), anchor.y);\n    width = tf.mul(tf.div(width, inputSize), cropFactor[0]);\n    height = tf.mul(tf.div(height, inputSize), cropFactor[1]);\n    const xMin = tf.sub(xCenter, tf.div(width, 2));\n    const yMin = tf.sub(yCenter, tf.div(height, 2));\n    const boxes = tf.stack([xMin, yMin, width, height], 1);\n    return boxes;\n  });\n}\n\nexport async function decode(boxesTensor: Tensor, logitsTensor: Tensor, config: Config, outputSize: [number, number]): Promise<DetectedBox[]> {\n  const t: Record<string, Tensor> = {};\n  t.boxes = decodeBoxes(boxesTensor, anchorTensor);\n  t.scores = tf.sigmoid(logitsTensor);\n  t.argmax = tf.argMax(t.scores);\n  const i = (await t.argmax.data())[0];\n  const scores = await t.scores.data();\n  const detected: { box: Box, boxRaw: Box, score: number }[] = [];\n  const minScore = config.body?.['detector']?.minConfidence || 0;\n  if (scores[i] >= minScore) {\n    const boxes = await t.boxes.array();\n    const boxRaw: Box = boxes[i];\n    const box: Box = [boxRaw[0] * outputSize[0], boxRaw[1] * outputSize[1], boxRaw[2] * outputSize[0], boxRaw[3] * outputSize[1]];\n    // console.log(box);\n    detected.push({ box, boxRaw, score: scores[i] });\n  }\n  /*\n  t.nms = await tf.image.nonMaxSuppressionAsync(t.boxes, t.scores, 1, config.body.detector?.minConfidence || 0.1, config.body.detector?.iouThreshold || 0.1);\n  const boxes = t.boxes.arraySync();\n  const scores = t.scores.dataSync();\n  const nms = t.nms.dataSync();\n  const detected: Array<DetectedBox> = [];\n  for (const i of Array.from(nms)) {\n    const boxRaw: Box = boxes[i];\n    const box: Box = [boxRaw[0] * outputSize[0], boxRaw[0] * outputSize[1], boxRaw[3] * outputSize[0], boxRaw[2] * outputSize[1]];\n    detected.push({ box, boxRaw, score: scores[i] });\n  }\n  */\n  Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n  return detected;\n}\n", "import type { Point, Box } from '../result';\n\nexport function calc(keypoints: Point[], outputSize: [number, number] = [1, 1]) {\n  const coords = [keypoints.map((pt) => pt[0]), keypoints.map((pt) => pt[1])]; // all x/y coords\n  const min = [Math.min(...coords[0]), Math.min(...coords[1])];\n  const max = [Math.max(...coords[0]), Math.max(...coords[1])];\n  const box: Box = [min[0], min[1], max[0] - min[0], max[1] - min[1]];\n  const boxRaw: Box = [box[0] / outputSize[0], box[1] / outputSize[1], box[2] / outputSize[0], box[3] / outputSize[1]];\n  return { box, boxRaw };\n}\n\nexport function square(keypoints: Point[], outputSize: [number, number] = [1, 1]) {\n  const coords = [keypoints.map((pt) => pt[0]), keypoints.map((pt) => pt[1])]; // all x/y coords\n  const min = [Math.min(...coords[0]), Math.min(...coords[1])];\n  const max = [Math.max(...coords[0]), Math.max(...coords[1])];\n  const center = [(min[0] + max[0]) / 2, (min[1] + max[1]) / 2]; // find center x and y coord of all fingers\n  const dist = Math.max(center[0] - min[0], center[1] - min[1], -center[0] + max[0], -center[1] + max[1]); // largest distance from center in any direction\n  const box: Box = [Math.trunc(center[0] - dist), Math.trunc(center[1] - dist), Math.trunc(2 * dist), Math.trunc(2 * dist)];\n  const boxRaw: Box = [box[0] / outputSize[0], box[1] / outputSize[1], box[2] / outputSize[0], box[3] / outputSize[1]];\n  return { box, boxRaw };\n}\n\nexport function scale(box: Box, scaleFact: number) {\n  const dist = [box[2] * scaleFact, box[3] * scaleFact];\n  const newBox: Box = [\n    box[0] - (dist[0] - box[2]) / 2,\n    box[1] - (dist[1] - box[3]) / 2,\n    dist[0],\n    dist[1],\n  ];\n  return newBox;\n}\n\nexport function crop(box: Box) { // [y1, x1, y2, x2] clamped to 0..1\n  const yxBox: Box = [Math.max(0, box[1]), Math.max(0, box[0]), Math.min(1, box[3] + box[1]), Math.min(1, box[2] + box[0])];\n  return yxBox;\n}\n", "/**\n * BlazePose model implementation\n */\n\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport { constants } from '../tfjs/constants';\nimport { log, now } from '../util/util';\nimport type { BodyKeypoint, BodyResult, BodyLandmark, Box, Point, BodyAnnotation } from '../result';\nimport type { GraphModel, Tensor } from '../tfjs/types';\nimport type { Config } from '../config';\nimport * as coords from './blazeposecoords';\nimport * as detect from './blazeposedetector';\nimport * as box from '../util/box';\n\nconst env = { initial: true };\n// const models: [GraphModel | null, GraphModel | null] = [null, null];\nconst models: { detector: GraphModel | null, landmarks: GraphModel | null } = { detector: null, landmarks: null };\nconst inputSize: { detector: [number, number], landmarks: [number, number] } = { detector: [224, 224], landmarks: [256, 256] };\nlet skipped = Number.MAX_SAFE_INTEGER;\nconst outputNodes: { detector: string[], landmarks: string[] } = {\n  landmarks: ['ld_3d', 'activation_segmentation', 'activation_heatmap', 'world_3d', 'output_poseflag'],\n  detector: [],\n};\n\nlet cache: BodyResult | null = null;\nlet cropBox: Box | undefined;\nlet padding: [number, number][] = [[0, 0], [0, 0], [0, 0], [0, 0]];\nlet lastTime = 0;\n\nconst sigmoid = (x) => (1 - (1 / (1 + Math.exp(x))));\n\nexport async function loadDetect(config: Config): Promise<GraphModel> {\n  if (env.initial) models.detector = null;\n  if (!models.detector && config.body['detector'] && config.body['detector'].modelPath || '') {\n    models.detector = await loadModel(config.body['detector'].modelPath);\n    const inputs = models.detector?.['executor'] ? Object.values(models.detector.modelSignature['inputs']) : undefined;\n    inputSize.detector[0] = Array.isArray(inputs) ? parseInt(inputs[0].tensorShape.dim[1].size) : 0;\n    inputSize.detector[1] = Array.isArray(inputs) ? parseInt(inputs[0].tensorShape.dim[2].size) : 0;\n  } else if (config.debug && models.detector) log('cached model:', models.detector['modelUrl']);\n  detect.createAnchors();\n  return models.detector as GraphModel;\n}\n\nexport async function loadPose(config: Config): Promise<GraphModel> {\n  if (env.initial) models.landmarks = null;\n  if (!models.landmarks) {\n    models.landmarks = await loadModel(config.body.modelPath);\n    const inputs = models.landmarks?.['executor'] ? Object.values(models.landmarks.modelSignature['inputs']) : undefined;\n    inputSize.landmarks[0] = Array.isArray(inputs) ? parseInt(inputs[0].tensorShape.dim[1].size) : 0;\n    inputSize.landmarks[1] = Array.isArray(inputs) ? parseInt(inputs[0].tensorShape.dim[2].size) : 0;\n  } else if (config.debug) log('cached model:', models.landmarks['modelUrl']);\n  return models.landmarks;\n}\n\nexport async function load(config: Config): Promise<[GraphModel | null, GraphModel | null]> {\n  if (!models.detector) await loadDetect(config);\n  if (!models.landmarks) await loadPose(config);\n  return [models.detector, models.landmarks];\n}\n\nfunction prepareImage(input: Tensor, size: number): Tensor {\n  const t: Record<string, Tensor> = {};\n  if (!input?.shape?.[1] || !input?.shape?.[2]) return input;\n  let final: Tensor;\n  if (cropBox) {\n    t.cropped = tf.image.cropAndResize(input, [cropBox], [0], [input.shape[1], input.shape[2]]); // if we have cached box use it to crop input\n  }\n  if (input.shape[1] !== input.shape[2]) { // only pad if width different than height\n    const height: [number, number] = [\n      input.shape[2] > input.shape[1] ? Math.trunc((input.shape[2] - input.shape[1]) / 2) : 0,\n      input.shape[2] > input.shape[1] ? Math.trunc((input.shape[2] - input.shape[1]) / 2) : 0,\n    ];\n    const width: [number, number] = [\n      input.shape[1] > input.shape[2] ? Math.trunc((input.shape[1] - input.shape[2]) / 2) : 0,\n      input.shape[1] > input.shape[2] ? Math.trunc((input.shape[1] - input.shape[2]) / 2) : 0,\n    ];\n    padding = [\n      [0, 0], // dont touch batch\n      height, // height before&after\n      width, // width before&after\n      [0, 0], // dont touch rbg\n    ];\n    t.pad = tf.pad(t.cropped || input, padding); // use cropped box if it exists\n    t.resize = tf.image.resizeBilinear(t.pad, [size, size]);\n    final = tf.div(t.resize, constants.tf255);\n  } else if (input.shape[1] !== size) { // if input needs resizing\n    t.resize = tf.image.resizeBilinear(t.cropped || input, [size, size]);\n    final = tf.div(t.resize, constants.tf255);\n  } else { // if input is already in a correct resolution just normalize it\n    final = tf.div(t.cropped || input, constants.tf255);\n  }\n  Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n  return final;\n}\n\nfunction rescaleKeypoints(keypoints: BodyKeypoint[], outputSize: [number, number]): BodyKeypoint[] {\n  for (const kpt of keypoints) { // first rescale due to padding\n    kpt.position = [\n      Math.trunc(kpt.position[0] * (outputSize[0] + padding[2][0] + padding[2][1]) / outputSize[0] - padding[2][0]),\n      Math.trunc(kpt.position[1] * (outputSize[1] + padding[1][0] + padding[1][1]) / outputSize[1] - padding[1][0]),\n      kpt.position[2] as number,\n    ];\n    kpt.positionRaw = [kpt.position[0] / outputSize[0], kpt.position[1] / outputSize[1], 2 * (kpt.position[2] as number) / (outputSize[0] + outputSize[1])];\n  }\n  if (cropBox) { // second rescale due to cropping\n    for (const kpt of keypoints) {\n      kpt.positionRaw = [\n        kpt.positionRaw[0] + cropBox[1], // correct offset due to crop\n        kpt.positionRaw[1] + cropBox[0], // correct offset due to crop\n        kpt.positionRaw[2] as number,\n      ];\n      kpt.position = [\n        Math.trunc(kpt.positionRaw[0] * outputSize[0]),\n        Math.trunc(kpt.positionRaw[1] * outputSize[1]),\n        kpt.positionRaw[2] as number,\n      ];\n    }\n  }\n  return keypoints;\n}\n\nfunction fixKeypoints(keypoints: BodyKeypoint[]) {\n  // palm z-coord is incorrect around near-zero so we approximate it\n  const leftPalm = keypoints.find((k) => k.part === 'leftPalm') as BodyKeypoint;\n  const leftWrist = keypoints.find((k) => k.part === 'leftWrist') as BodyKeypoint;\n  const leftIndex = keypoints.find((k) => k.part === 'leftIndex') as BodyKeypoint;\n  leftPalm.position[2] = ((leftWrist.position[2] || 0) + (leftIndex.position[2] || 0)) / 2;\n  const rightPalm = keypoints.find((k) => k.part === 'rightPalm') as BodyKeypoint;\n  const rightWrist = keypoints.find((k) => k.part === 'rightWrist') as BodyKeypoint;\n  const rightIndex = keypoints.find((k) => k.part === 'rightIndex') as BodyKeypoint;\n  rightPalm.position[2] = ((rightWrist.position[2] || 0) + (rightIndex.position[2] || 0)) / 2;\n}\n\nasync function detectLandmarks(input: Tensor, config: Config, outputSize: [number, number]): Promise<BodyResult | null> {\n  /**\n   * t.ld: 39 keypoints [x,y,z,score,presence] normalized to input size\n   * t.segmentation:\n   * t.heatmap:\n   * t.world: 39 keypoints [x,y,z] normalized to -1..1\n   * t.poseflag: body score\n  */\n  if (!models.landmarks?.['executor']) return null;\n  const t: Record<string, Tensor> = {};\n  [t.ld/* 1,195(39*5) */, t.segmentation/* 1,256,256,1 */, t.heatmap/* 1,64,64,39 */, t.world/* 1,117(39*3) */, t.poseflag/* 1,1 */] = models.landmarks?.execute(input, outputNodes.landmarks) as Tensor[]; // run model\n  const poseScore = (await t.poseflag.data())[0];\n  const points = await t.ld.data();\n  const distances = await t.world.data();\n  Object.keys(t).forEach((tensor) => tf.dispose(t[tensor])); // dont need tensors after this\n  const keypointsRelative: BodyKeypoint[] = [];\n  const depth = 5; // each points has x,y,z,visibility,presence\n  for (let i = 0; i < points.length / depth; i++) {\n    const score = sigmoid(points[depth * i + 3]);\n    const presence = sigmoid(points[depth * i + 4]);\n    const adjScore = Math.trunc(100 * score * presence * poseScore) / 100;\n    const positionRaw: Point = [points[depth * i + 0] / inputSize.landmarks[0], points[depth * i + 1] / inputSize.landmarks[1], points[depth * i + 2] + 0];\n    const position: Point = [Math.trunc(outputSize[0] * positionRaw[0]), Math.trunc(outputSize[1] * positionRaw[1]), positionRaw[2] as number];\n    const distance: Point = [distances[depth * i + 0], distances[depth * i + 1], distances[depth * i + 2] + 0];\n    keypointsRelative.push({ part: coords.kpt[i] as BodyLandmark, positionRaw, position, distance, score: adjScore });\n  }\n  if (poseScore < (config.body.minConfidence || 0)) return null;\n  fixKeypoints(keypointsRelative);\n  const keypoints: BodyKeypoint[] = rescaleKeypoints(keypointsRelative, outputSize); // keypoints were relative to input image which is padded\n  const kpts = keypoints.map((k) => k.position);\n  const boxes = box.calc(kpts, [outputSize[0], outputSize[1]]); // now find boxes based on rescaled keypoints\n  const annotations: Record<BodyAnnotation, Point[][]> = {} as Record<BodyAnnotation, Point[][]>;\n  for (const [name, indexes] of Object.entries(coords.connected)) {\n    const pt: Point[][] = [];\n    for (let i = 0; i < indexes.length - 1; i++) {\n      const pt0 = keypoints.find((kpt) => kpt.part === indexes[i]);\n      const pt1 = keypoints.find((kpt) => kpt.part === indexes[i + 1]);\n      if (pt0 && pt1) pt.push([pt0.position, pt1.position]);\n    }\n    annotations[name] = pt;\n  }\n  const body = { id: 0, score: Math.trunc(100 * poseScore) / 100, box: boxes.box, boxRaw: boxes.boxRaw, keypoints, annotations };\n  return body;\n}\n\n/*\ninterface DetectedBox { box: Box, boxRaw: Box, score: number }\n\nfunction rescaleBoxes(boxes: Array<DetectedBox>, outputSize: [number, number]): Array<DetectedBox> {\n  for (const b of boxes) {\n    b.box = [\n      Math.trunc(b.box[0] * (outputSize[0] + padding[2][0] + padding[2][1]) / outputSize[0]),\n      Math.trunc(b.box[1] * (outputSize[1] + padding[1][0] + padding[1][1]) / outputSize[1]),\n      Math.trunc(b.box[2] * (outputSize[0] + padding[2][0] + padding[2][1]) / outputSize[0]),\n      Math.trunc(b.box[3] * (outputSize[1] + padding[1][0] + padding[1][1]) / outputSize[1]),\n    ];\n    b.boxRaw = [b.box[0] / outputSize[0], b.box[1] / outputSize[1], b.box[2] / outputSize[0], b.box[3] / outputSize[1]];\n  }\n  return boxes;\n}\n\nasync function detectBoxes(input: Tensor, config: Config, outputSize: [number, number]) {\n  const t: Record<string, Tensor> = {};\n  t.res = models.detector?.execute(input, ['Identity']) as Tensor; //\n  t.logitsRaw = tf.slice(t.res, [0, 0, 0], [1, -1, 1]);\n  t.boxesRaw = tf.slice(t.res, [0, 0, 1], [1, -1, -1]);\n  t.logits = tf.squeeze(t.logitsRaw);\n  t.boxes = tf.squeeze(t.boxesRaw);\n  const boxes = await detect.decode(t.boxes, t.logits, config, outputSize);\n  rescaleBoxes(boxes, outputSize);\n  Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n  return boxes;\n}\n*/\n\nexport async function predict(input: Tensor, config: Config): Promise<BodyResult[]> {\n  const outputSize: [number, number] = [input.shape[2] || 0, input.shape[1] || 0];\n  const skipTime = (config.body.skipTime || 0) > (now() - lastTime);\n  const skipFrame = skipped < (config.body.skipFrames || 0);\n  if (config.skipAllowed && skipTime && skipFrame && cache !== null) {\n    skipped++;\n  } else {\n    const t: Record<string, Tensor> = {};\n    /*\n    if (config.body['detector'] && config.body['detector']['enabled']) {\n      t.detector = await prepareImage(input, 224);\n      const boxes = await detectBoxes(t.detector, config, outputSize);\n    }\n    */\n    t.landmarks = prepareImage(input, 256); // padded and resized\n    cache = await detectLandmarks(t.landmarks, config, outputSize);\n    /*\n    cropBox = [0, 0, 1, 1]; // reset crop coordinates\n    if (cache?.boxRaw && config.skipAllowed) {\n      const cx = (2.0 * cache.boxRaw[0] + cache.boxRaw[2]) / 2;\n      const cy = (2.0 * cache.boxRaw[1] + cache.boxRaw[3]) / 2;\n      let size = cache.boxRaw[2] > cache.boxRaw[3] ? cache.boxRaw[2] : cache.boxRaw[3];\n      size = (size * 1.0) / 2; // enlarge and half it\n      if (cx > 0.1 && cx < 0.9 && cy > 0.1 && cy < 0.9 && size > 0.1) { // only update if box is sane\n        const y = 0; // cy - size;\n        const x = cx - size;\n        cropBox = [y, x, y + 1, x + 1]; // [y0,x0,y1,x1] used for cropping but width/height are not yet implemented so we only reposition image to center of body\n      }\n    }\n    */\n    Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n    lastTime = now();\n    skipped = 0;\n  }\n  return cache ? [cache] : [];\n}\n", "/**\n * CoCo Labels used by object detection implementations\n */\nexport const labels = [\n  { class: 1, label: 'person' },\n  { class: 2, label: 'bicycle' },\n  { class: 3, label: 'car' },\n  { class: 4, label: 'motorcycle' },\n  { class: 5, label: 'airplane' },\n  { class: 6, label: 'bus' },\n  { class: 7, label: 'train' },\n  { class: 8, label: 'truck' },\n  { class: 9, label: 'boat' },\n  { class: 10, label: 'traffic light' },\n  { class: 11, label: 'fire hydrant' },\n  { class: 12, label: 'stop sign' },\n  { class: 13, label: 'parking meter' },\n  { class: 14, label: 'bench' },\n  { class: 15, label: 'bird' },\n  { class: 16, label: 'cat' },\n  { class: 17, label: 'dog' },\n  { class: 18, label: 'horse' },\n  { class: 19, label: 'sheep' },\n  { class: 20, label: 'cow' },\n  { class: 21, label: 'elephant' },\n  { class: 22, label: 'bear' },\n  { class: 23, label: 'zebra' },\n  { class: 24, label: 'giraffe' },\n  { class: 25, label: 'backpack' },\n  { class: 26, label: 'umbrella' },\n  { class: 27, label: 'handbag' },\n  { class: 28, label: 'tie' },\n  { class: 29, label: 'suitcase' },\n  { class: 30, label: 'frisbee' },\n  { class: 31, label: 'skis' },\n  { class: 32, label: 'snowboard' },\n  { class: 33, label: 'sports ball' },\n  { class: 34, label: 'kite' },\n  { class: 35, label: 'baseball bat' },\n  { class: 36, label: 'baseball glove' },\n  { class: 37, label: 'skateboard' },\n  { class: 38, label: 'surfboard' },\n  { class: 39, label: 'tennis racket' },\n  { class: 40, label: 'bottle' },\n  { class: 41, label: 'wine glass' },\n  { class: 42, label: 'cup' },\n  { class: 43, label: 'fork' },\n  { class: 44, label: 'knife' },\n  { class: 45, label: 'spoon' },\n  { class: 46, label: 'bowl' },\n  { class: 47, label: 'banana' },\n  { class: 48, label: 'apple' },\n  { class: 49, label: 'sandwich' },\n  { class: 50, label: 'orange' },\n  { class: 51, label: 'broccoli' },\n  { class: 52, label: 'carrot' },\n  { class: 53, label: 'hot dog' },\n  { class: 54, label: 'pizza' },\n  { class: 55, label: 'donut' },\n  { class: 56, label: 'cake' },\n  { class: 57, label: 'chair' },\n  { class: 58, label: 'couch' },\n  { class: 59, label: 'potted plant' },\n  { class: 60, label: 'bed' },\n  { class: 61, label: 'dining table' },\n  { class: 62, label: 'toilet' },\n  { class: 63, label: 'tv' },\n  { class: 64, label: 'laptop' },\n  { class: 65, label: 'mouse' },\n  { class: 66, label: 'remote' },\n  { class: 67, label: 'keyboard' },\n  { class: 68, label: 'cell phone' },\n  { class: 69, label: 'microwave' },\n  { class: 70, label: 'oven' },\n  { class: 71, label: 'toaster' },\n  { class: 72, label: 'sink' },\n  { class: 73, label: 'refrigerator' },\n  { class: 74, label: 'book' },\n  { class: 75, label: 'clock' },\n  { class: 76, label: 'vase' },\n  { class: 77, label: 'scissors' },\n  { class: 78, label: 'teddy bear' },\n  { class: 79, label: 'hair drier' },\n  { class: 80, label: 'toothbrush' },\n];\n", "/**\n * CenterNet object detection model implementation\n *\n * Based on: [**NanoDet**](https://github.com/RangiLyu/nanodet)\n */\n\nimport { log, now } from '../util/util';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport { labels } from './labels';\nimport type { ObjectResult, ObjectType, Box } from '../result';\nimport type { GraphModel, Tensor } from '../tfjs/types';\nimport type { Config } from '../config';\nimport { env } from '../util/env';\n\nlet model: GraphModel | null;\nlet inputSize = 0;\nlet last: ObjectResult[] = [];\nlet lastTime = 0;\nlet skipped = Number.MAX_SAFE_INTEGER;\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (env.initial) model = null;\n  if (!model) {\n    // fakeOps(['floormod'], config);\n    model = await loadModel(config.object.modelPath);\n    const inputs = model?.['executor'] ? Object.values(model.modelSignature['inputs']) : undefined;\n    inputSize = Array.isArray(inputs) ? parseInt(inputs[0].tensorShape.dim[2].size) : 0;\n  } else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n\nasync function process(res: Tensor | null, outputShape: [number, number], config: Config) {\n  if (!res) return [];\n  const t: Record<string, Tensor> = {};\n  const results: ObjectResult[] = [];\n  const detections = await res.array() as number[][][];\n  t.squeeze = tf.squeeze(res);\n  const arr = tf.split(t.squeeze, 6, 1) as Tensor[]; // x1, y1, x2, y2, score, class\n  t.stack = tf.stack([arr[1], arr[0], arr[3], arr[2]], 1); // reorder dims as tf.nms expects y, x\n  t.boxes = tf.squeeze(t.stack);\n  t.scores = tf.squeeze(arr[4]);\n  t.classes = tf.squeeze(arr[5]);\n  tf.dispose([res, ...arr]);\n  t.nms = await tf.image.nonMaxSuppressionAsync(t.boxes, t.scores, config.object.maxDetected, config.object.iouThreshold, (config.object.minConfidence || 0));\n  const nms = await t.nms.data();\n  let i = 0;\n  for (const id of Array.from(nms)) {\n    const score = Math.trunc(100 * detections[0][id][4]) / 100;\n    const classVal = detections[0][id][5];\n    if (Number.isNaN(classVal)) continue;\n    const label = labels[classVal].label as ObjectType;\n    const [x, y] = [\n      detections[0][id][0] / inputSize,\n      detections[0][id][1] / inputSize,\n    ];\n    const boxRaw: Box = [\n      x,\n      y,\n      detections[0][id][2] / inputSize - x,\n      detections[0][id][3] / inputSize - y,\n    ];\n    const box: Box = [\n      Math.trunc(boxRaw[0] * outputShape[0]),\n      Math.trunc(boxRaw[1] * outputShape[1]),\n      Math.trunc(boxRaw[2] * outputShape[0]),\n      Math.trunc(boxRaw[3] * outputShape[1]),\n    ];\n    results.push({ id: i++, score, class: classVal, label, box, boxRaw });\n  }\n  Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n  return results;\n}\n\nexport async function predict(input: Tensor, config: Config): Promise<ObjectResult[]> {\n  if (!model?.['executor']) return [];\n  const skipTime = (config.object.skipTime || 0) > (now() - lastTime);\n  const skipFrame = skipped < (config.object.skipFrames || 0);\n  if (config.skipAllowed && skipTime && skipFrame && (last.length > 0)) {\n    skipped++;\n    return last;\n  }\n  skipped = 0;\n  return new Promise(async (resolve) => {\n    const outputSize = [input.shape[2] || 0, input.shape[1] || 0] as [number, number];\n    const resize = tf.image.resizeBilinear(input, [inputSize, inputSize]);\n    const objectT = config.object.enabled ? model?.execute(resize, ['tower_0/detections']) as Tensor : null;\n    lastTime = now();\n    tf.dispose(resize);\n\n    const obj = await process(objectT, outputSize, config);\n    last = obj;\n\n    resolve(obj);\n  });\n}\n", "export const kpt: string[] = [\n  'head',\n  'neck',\n  'rightShoulder',\n  'rightElbow',\n  'rightWrist',\n  'chest',\n  'leftShoulder',\n  'leftElbow',\n  'leftWrist',\n  'bodyCenter',\n  'rightHip',\n  'rightKnee',\n  'rightAnkle',\n  'leftHip',\n  'leftKnee',\n  'leftAnkle',\n];\n\nexport const connected: Record<string, string[]> = {\n  leftLeg: ['leftHip', 'leftKnee', 'leftAnkle'],\n  rightLeg: ['rightHip', 'rightKnee', 'rightAnkle'],\n  torso: ['leftShoulder', 'rightShoulder', 'rightHip', 'leftHip', 'leftShoulder'],\n  leftArm: ['leftShoulder', 'leftElbow', 'leftWrist'],\n  rightArm: ['rightShoulder', 'rightElbow', 'rightWrist'],\n  head: [],\n};\n", "/**\n * EfficientPose model implementation\n *\n * Based on: [**EfficientPose**](https://github.com/daniegr/EfficientPose)\n */\n\nimport { log, now } from '../util/util';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport * as coords from './efficientposecoords';\nimport { constants } from '../tfjs/constants';\nimport type { BodyResult, Point, BodyLandmark, BodyAnnotation } from '../result';\nimport type { GraphModel, Tensor } from '../tfjs/types';\nimport type { Config } from '../config';\nimport { env } from '../util/env';\n\nlet model: GraphModel | null;\nlet lastTime = 0;\nconst cache: BodyResult = { id: 0, keypoints: [], box: [0, 0, 0, 0], boxRaw: [0, 0, 0, 0], score: 0, annotations: {} as Record<BodyAnnotation, Point[][]> };\n\n// const keypoints: Array<BodyKeypoint> = [];\n// let box: Box = [0, 0, 0, 0];\n// let boxRaw: Box = [0, 0, 0, 0];\n// let score = 0;\nlet skipped = Number.MAX_SAFE_INTEGER;\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (env.initial) model = null;\n  if (!model) model = await loadModel(config.body.modelPath);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n\n// performs argmax and max functions on a 2d tensor\nasync function max2d(inputs, minScore): Promise<[number, number, number]> {\n  const [width, height] = inputs.shape;\n  const reshaped = tf.reshape(inputs, [height * width]); // combine all data\n  const max = tf.max(reshaped, 0);\n  const newScore: number = (await max.data())[0]; // get highest score\n  if (newScore > minScore) { // skip coordinate calculation is score is too low\n    const coordinates = tf.argMax(reshaped, 0);\n    const mod = tf.mod(coordinates, width);\n    const x = (await mod.data())[0];\n    const div = tf.div(coordinates, width);\n    const y: number = (await div.data())[0];\n    tf.dispose([reshaped, max, coordinates, mod, div]);\n    return [x, y, newScore];\n  }\n  tf.dispose([reshaped, max]);\n  return [0, 0, newScore];\n}\n\nexport async function predict(image: Tensor, config: Config): Promise<BodyResult[]> {\n  if (!model?.['executor']) return [];\n  const skipTime = (config.body.skipTime || 0) > (now() - lastTime);\n  const skipFrame = skipped < (config.body.skipFrames || 0);\n  if (config.skipAllowed && skipTime && skipFrame && Object.keys(cache.keypoints).length > 0) {\n    skipped++;\n    return [cache];\n  }\n  skipped = 0;\n  return new Promise(async (resolve) => {\n    const tensor = tf.tidy(() => {\n      if (!model?.inputs[0].shape) return null;\n      const resize = tf.image.resizeBilinear(image, [model.inputs[0].shape[2], model.inputs[0].shape[1]], false);\n      const enhance = tf.mul(resize, constants.tf2);\n      const norm = tf.sub(enhance, constants.tf1);\n      return norm;\n    });\n    let resT;\n    if (config.body.enabled) resT = model?.execute(tensor);\n    lastTime = now();\n    tf.dispose(tensor);\n\n    if (resT) {\n      cache.keypoints.length = 0;\n      const squeeze = tf.squeeze(resT);\n      tf.dispose(resT);\n      // body parts are basically just a stack of 2d tensors\n      const stack = tf.unstack(squeeze, 2);\n      tf.dispose(squeeze);\n\n      // process each unstacked tensor as a separate body part\n      for (let id = 0; id < stack.length; id++) {\n        // actual processing to get coordinates and score\n        const [x, y, partScore] = await max2d(stack[id], config.body.minConfidence);\n        if (partScore > (config.body.minConfidence || 0)) {\n          cache.keypoints.push({\n            score: Math.round(100 * partScore) / 100,\n            part: coords.kpt[id] as BodyLandmark,\n            positionRaw: [ // normalized to 0..1\n              // @ts-ignore model is not undefined here\n              x / model.inputs[0].shape[2], y / model.inputs[0].shape[1],\n            ],\n            position: [ // normalized to input image size\n              // @ts-ignore model is not undefined here\n              Math.round(image.shape[2] * x / model.inputs[0].shape[2]), Math.round(image.shape[1] * y / model.inputs[0].shape[1]),\n            ],\n          });\n        }\n      }\n      stack.forEach((s) => tf.dispose(s));\n    }\n    cache.score = cache.keypoints.reduce((prev, curr) => (curr.score > prev ? curr.score : prev), 0);\n    const x = cache.keypoints.map((a) => a.position[0]);\n    const y = cache.keypoints.map((a) => a.position[1]);\n    cache.box = [\n      Math.min(...x),\n      Math.min(...y),\n      Math.max(...x) - Math.min(...x),\n      Math.max(...y) - Math.min(...y),\n    ];\n    const xRaw = cache.keypoints.map((a) => a.positionRaw[0]);\n    const yRaw = cache.keypoints.map((a) => a.positionRaw[1]);\n    cache.boxRaw = [\n      Math.min(...xRaw),\n      Math.min(...yRaw),\n      Math.max(...xRaw) - Math.min(...xRaw),\n      Math.max(...yRaw) - Math.min(...yRaw),\n    ];\n    for (const [name, indexes] of Object.entries(coords.connected)) {\n      const pt: Point[][] = [];\n      for (let i = 0; i < indexes.length - 1; i++) {\n        const pt0 = cache.keypoints.find((kpt) => kpt.part === indexes[i]);\n        const pt1 = cache.keypoints.find((kpt) => kpt.part === indexes[i + 1]);\n        if (pt0 && pt1 && pt0.score > (config.body.minConfidence || 0) && pt1.score > (config.body.minConfidence || 0)) pt.push([pt0.position, pt1.position]);\n      }\n      cache.annotations[name] = pt;\n    }\n    resolve([cache]);\n  });\n}\n", "/**\n * Emotion model implementation\n *\n * [**Oarriaga**](https://github.com/oarriaga/face_classification)\n */\n\nimport type { Emotion } from '../result';\nimport { log, now } from '../util/util';\nimport type { Config } from '../config';\nimport type { GraphModel, Tensor } from '../tfjs/types';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport { env } from '../util/env';\nimport { constants } from '../tfjs/constants';\n\nconst annotations = ['angry', 'disgust', 'fear', 'happy', 'sad', 'surprise', 'neutral'];\nlet model: GraphModel | null;\nconst last: { score: number, emotion: Emotion }[][] = [];\nlet lastCount = 0;\nlet lastTime = 0;\nlet skipped = Number.MAX_SAFE_INTEGER;\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (env.initial) model = null;\n  if (!model) model = await loadModel(config.face.emotion?.modelPath);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n\nexport async function predict(image: Tensor, config: Config, idx: number, count: number): Promise<{ score: number, emotion: Emotion }[]> {\n  if (!model) return [];\n  const skipFrame = skipped < (config.face.emotion?.skipFrames || 0);\n  const skipTime = (config.face.emotion?.skipTime || 0) > (now() - lastTime);\n  if (config.skipAllowed && skipTime && skipFrame && (lastCount === count) && last[idx] && (last[idx].length > 0)) {\n    skipped++;\n    return last[idx];\n  }\n  skipped = 0;\n  return new Promise(async (resolve) => {\n    const obj: { score: number, emotion: Emotion }[] = [];\n    if (config.face.emotion?.enabled) {\n      const t: Record<string, Tensor> = {};\n      const inputSize = model?.inputs[0].shape ? model.inputs[0].shape[2] : 0;\n      t.resize = tf.image.resizeBilinear(image, [inputSize, inputSize], false);\n      // const box = [[0.15, 0.15, 0.85, 0.85]]; // empyrical values for top, left, bottom, right\n      // const resize = tf.image.cropAndResize(image, box, [0], [inputSize, inputSize]);\n      // [t.red, t.green, t.blue] = tf.split(t.resize, 3, 3);\n      // weighted rgb to grayscale: https://www.mathworks.com/help/matlab/ref/rgb2gray.html\n      // t.redNorm = tf.mul(t.red, rgb[0]);\n      // t.greenNorm = tf.mul(t.green, rgb[1]);\n      // t.blueNorm = tf.mul(t.blue, rgb[2]);\n      // t.grayscale = tf.addN([t.redNorm, t.greenNorm, t.blueNorm]);\n      t.channels = tf.mul(t.resize, constants.rgb);\n      t.grayscale = tf.sum(t.channels, 3, true);\n      t.grayscaleSub = tf.sub(t.grayscale, constants.tf05);\n      t.grayscaleMul = tf.mul(t.grayscaleSub, constants.tf2);\n      t.emotion = model?.execute(t.grayscaleMul) as Tensor; // result is already in range 0..1, no need for additional activation\n      lastTime = now();\n      const data = await t.emotion.data();\n      for (let i = 0; i < data.length; i++) {\n        if (data[i] > (config.face.emotion.minConfidence || 0)) obj.push({ score: Math.min(0.99, Math.trunc(100 * data[i]) / 100), emotion: annotations[i] as Emotion });\n      }\n      obj.sort((a, b) => b.score - a.score);\n      Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n    }\n    last[idx] = obj;\n    lastCount = count;\n    resolve(obj);\n  });\n}\n", "/**\n * MobileFaceNet model implementation\n *\n * Based on: [**BecauseofAI MobileFace**](https://github.com/becauseofAI/MobileFace)\n *\n * Obsolete and replaced by `faceres` that performs age/gender/descriptor analysis\n */\n\nimport { log, now } from '../util/util';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport type { Tensor, GraphModel } from '../tfjs/types';\nimport type { Config } from '../config';\nimport { env } from '../util/env';\n\nlet model: GraphModel | null;\nconst last: number[][] = [];\nlet lastCount = 0;\nlet lastTime = 0;\nlet skipped = Number.MAX_SAFE_INTEGER;\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (env.initial) model = null;\n  if (!model) model = await loadModel(config.face['mobilefacenet']?.modelPath);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n\n/*\n// convert to black&white to avoid colorization impact\nconst rgb = [0.2989, 0.5870, 0.1140]; // factors for red/green/blue colors when converting to grayscale: https://www.mathworks.com/help/matlab/ref/rgb2gray.html\nconst [red, green, blue] = tf.split(crop, 3, 3);\nconst redNorm = tf.mul(red, rgb[0]);\nconst greenNorm = tf.mul(green, rgb[1]);\nconst blueNorm = tf.mul(blue, rgb[2]);\nconst grayscale = tf.addN([redNorm, greenNorm, blueNorm]);\nconst merge = tf.stack([grayscale, grayscale, grayscale], 3).squeeze(4);\n\n// optional increase image contrast\n// or do it per-channel so mean is done on each channel\n// or do it based on histogram\nconst mean = merge.mean();\nconst factor = 5;\nconst contrast = merge.sub(mean).mul(factor).add(mean);\n*/\n\nexport async function predict(input: Tensor, config: Config, idx, count): Promise<number[]> {\n  if (!model?.['executor']) return [];\n  const skipFrame = skipped < (config.face['mobilefacenet']?.skipFrames || 0);\n  const skipTime = (config.face['mobilefacenet']?.skipTime || 0) > (now() - lastTime);\n  if (config.skipAllowed && skipTime && skipFrame && (lastCount === count) && last[idx]) {\n    skipped++;\n    return last[idx];\n  }\n  return new Promise(async (resolve) => {\n    let data: number[] = [];\n    if (config.face['mobilefacenet']?.enabled && model?.inputs[0].shape) {\n      const t: Record<string, Tensor> = {};\n      t.crop = tf.image.resizeBilinear(input, [model.inputs[0].shape[2], model.inputs[0].shape[1]], false); // just resize to fit the embedding model\n      // do a tight crop of image and resize it to fit the model\n      // const box = [[0.05, 0.15, 0.85, 0.85]]; // empyrical values for top, left, bottom, right\n      // t.crop = tf.image.cropAndResize(input, box, [0], [model.inputs[0].shape[2], model.inputs[0].shape[1]]);\n      t.data = model.execute(t.crop) as Tensor;\n      /*\n      // optional normalize outputs with l2 normalization\n      const scaled = tf.tidy(() => {\n        const l2 = res.norm('euclidean');\n        const scale = res.div(l2);\n        return scale;\n      });\n\n      // optional reduce feature vector complexity\n      const reshape = tf.reshape(res, [128, 2]); // split 256 vectors into 128 x 2\n      const reduce = reshape.logSumExp(1); // reduce 2nd dimension by calculating logSumExp on it\n      */\n      const output = await t.data.data();\n      data = Array.from(output); // convert typed array to simple array\n      Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n    }\n    last[idx] = data;\n    lastCount = count;\n    lastTime = now();\n    resolve(data);\n  });\n}\n", "/**\n * InsightFace model implementation\n *\n * Based on: [**DeepInsight InsightFace**](https://github.com/deepinsight/insightface)\n *\n * Alternative face embedding detection\n */\n\nimport { log, now } from '../util/util';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport type { Tensor, GraphModel } from '../tfjs/types';\nimport type { Config } from '../config';\nimport { env } from '../util/env';\n\nlet model: GraphModel | null;\nconst last: number[][] = [];\nlet lastCount = 0;\nlet lastTime = 0;\nlet skipped = Number.MAX_SAFE_INTEGER;\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (env.initial) model = null;\n  if (!model) model = await loadModel(config.face['insightface'].modelPath);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n\nexport async function predict(input: Tensor, config: Config, idx, count): Promise<number[]> {\n  if (!model?.['executor']) return [];\n  const skipFrame = skipped < (config.face['insightface']?.skipFrames || 0);\n  const skipTime = (config.face['insightface']?.skipTime || 0) > (now() - lastTime);\n  if (config.skipAllowed && skipTime && skipFrame && (lastCount === count) && last[idx]) {\n    skipped++;\n    return last[idx];\n  }\n  return new Promise(async (resolve) => {\n    let data: number[] = [];\n    if (config.face['insightface']?.enabled && model?.inputs[0].shape) {\n      const t: Record<string, Tensor> = {};\n      t.crop = tf.image.resizeBilinear(input, [model.inputs[0].shape[2], model.inputs[0].shape[1]], false); // just resize to fit the embedding model\n      // do a tight crop of image and resize it to fit the model\n      // const box = [[0.05, 0.15, 0.85, 0.85]]; // empyrical values for top, left, bottom, right\n      // t.crop = tf.image.cropAndResize(input, box, [0], [model.inputs[0].shape[2], model.inputs[0].shape[1]]);\n      t.data = model.execute(t.crop) as Tensor;\n      const output = await t.data.data();\n      data = Array.from(output); // convert typed array to simple array\n      Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n    }\n    last[idx] = data;\n    lastCount = count;\n    lastTime = now();\n    resolve(data);\n  });\n}\n", "import * as coords from './facemeshcoords';\nimport * as util from './facemeshutil';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport type { Tensor, GraphModel } from '../tfjs/types';\nimport { env } from '../util/env';\nimport { log } from '../util/util';\nimport { loadModel } from '../tfjs/load';\nimport type { Config } from '../config';\nimport type { Point } from '../result';\n\nlet model: GraphModel | null;\nlet inputSize = 0;\n\nconst irisEnlarge = 2.3;\n\nconst leftOutline = coords.meshAnnotations.leftEyeLower0;\nconst rightOutline = coords.meshAnnotations.rightEyeLower0;\n\nconst eyeLandmarks = {\n  leftBounds: [leftOutline[0], leftOutline[leftOutline.length - 1]],\n  rightBounds: [rightOutline[0], rightOutline[rightOutline.length - 1]],\n};\n\nconst irisLandmarks = {\n  upperCenter: 3,\n  lowerCenter: 4,\n  index: 71,\n  numCoordinates: 76,\n};\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (env.initial) model = null;\n  if (!model) model = await loadModel(config.face.iris?.modelPath);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  inputSize = (model?.['executor'] && model.inputs?.[0].shape) ? model.inputs[0].shape[2] : 0;\n  if (inputSize === -1) inputSize = 64;\n  return model;\n}\n\n// Replace the raw coordinates returned by facemesh with refined iris model coordinates and update the z coordinate to be an average of the original and the new.\nexport function replaceIrisCoords(rawCoords, newCoords, prefix, keys) {\n  for (let i = 0; i < coords.irisIndices.length; i++) {\n    const { key, indices } = coords.irisIndices[i];\n    const originalIndices = coords.meshAnnotations[`${prefix}${key}`];\n    if (!keys || keys.includes(key)) {\n      for (let j = 0; j < indices.length; j++) {\n        const index = indices[j];\n        rawCoords[originalIndices[j]] = [\n          newCoords[index][0],\n          newCoords[index][1],\n          (newCoords[index][2] + rawCoords[originalIndices[j]][2]) / 2,\n        ];\n      }\n    }\n  }\n}\n\nexport const getLeftToRightEyeDepthDifference = (rawCoords) => {\n  const leftEyeZ = rawCoords[eyeLandmarks.leftBounds[0]][2];\n  const rightEyeZ = rawCoords[eyeLandmarks.rightBounds[0]][2];\n  return leftEyeZ - rightEyeZ;\n};\n\n// Returns a box describing a cropped region around the eye fit for passing to the iris model.\nexport const getEyeBox = (rawCoords, face, eyeInnerCornerIndex, eyeOuterCornerIndex, meshSize, flip = false) => {\n  const box = util.squarifyBox(util.enlargeBox(util.calculateLandmarksBoundingBox([rawCoords[eyeInnerCornerIndex], rawCoords[eyeOuterCornerIndex]]), irisEnlarge));\n  const boxSize = util.getBoxSize(box);\n  let crop = tf.image.cropAndResize(face, [[\n    box.startPoint[1] / meshSize,\n    box.startPoint[0] / meshSize, box.endPoint[1] / meshSize,\n    box.endPoint[0] / meshSize,\n  ]], [0], [inputSize, inputSize]);\n  if (flip && env.kernels.includes('flipleftright')) {\n    const flipped = tf.image.flipLeftRight(crop); // flipLeftRight is not defined for tfjs-node\n    tf.dispose(crop);\n    crop = flipped;\n  }\n  return { box, boxSize, crop };\n};\n\n// Given a cropped image of an eye, returns the coordinates of the contours surrounding the eye and the iris.\nexport const getEyeCoords = (eyeData, eyeBox, eyeBoxSize, flip = false) => {\n  const eyeRawCoords: Point[] = [];\n  for (let i = 0; i < irisLandmarks.numCoordinates; i++) {\n    const x = eyeData[i * 3];\n    const y = eyeData[i * 3 + 1];\n    const z = eyeData[i * 3 + 2];\n    eyeRawCoords.push([\n      (flip ? (1 - (x / inputSize)) : (x / inputSize)) * eyeBoxSize[0] + eyeBox.startPoint[0],\n      (y / inputSize) * eyeBoxSize[1] + eyeBox.startPoint[1], z,\n    ]);\n  }\n  return { rawCoords: eyeRawCoords, iris: eyeRawCoords.slice(irisLandmarks.index) };\n};\n\n// The z-coordinates returned for the iris are unreliable, so we take the z values from the surrounding keypoints.\nexport const getAdjustedIrisCoords = (rawCoords, irisCoords, direction) => {\n  const upperCenterZ = rawCoords[coords.meshAnnotations[`${direction}EyeUpper0`][irisLandmarks.upperCenter]][2];\n  const lowerCenterZ = rawCoords[coords.meshAnnotations[`${direction}EyeLower0`][irisLandmarks.lowerCenter]][2];\n  const averageZ = (upperCenterZ + lowerCenterZ) / 2;\n  // Iris indices: 0: center | 1: right | 2: above | 3: left | 4: below\n  return irisCoords.map((coord, i) => {\n    let z = averageZ;\n    if (i === 2) {\n      z = upperCenterZ;\n    } else if (i === 4) {\n      z = lowerCenterZ;\n    }\n    return [coord[0], coord[1], z];\n  });\n};\n\nexport async function augmentIris(rawCoords, face, meshSize) {\n  if (!model?.['executor']) return rawCoords;\n  const { box: leftEyeBox, boxSize: leftEyeBoxSize, crop: leftEyeCrop } = getEyeBox(rawCoords, face, eyeLandmarks.leftBounds[0], eyeLandmarks.leftBounds[1], meshSize, true);\n  const { box: rightEyeBox, boxSize: rightEyeBoxSize, crop: rightEyeCrop } = getEyeBox(rawCoords, face, eyeLandmarks.rightBounds[0], eyeLandmarks.rightBounds[1], meshSize, true);\n  const combined = tf.concat([leftEyeCrop, rightEyeCrop]);\n  tf.dispose(leftEyeCrop);\n  tf.dispose(rightEyeCrop);\n  const eyePredictions = model.execute(combined) as Tensor;\n  tf.dispose(combined);\n  const eyePredictionsData = await eyePredictions.data();\n  tf.dispose(eyePredictions);\n  const leftEyeData = eyePredictionsData.slice(0, irisLandmarks.numCoordinates * 3);\n  const { rawCoords: leftEyeRawCoords, iris: leftIrisRawCoords } = getEyeCoords(leftEyeData, leftEyeBox, leftEyeBoxSize, true);\n  const rightEyeData = eyePredictionsData.slice(irisLandmarks.numCoordinates * 3);\n  const { rawCoords: rightEyeRawCoords, iris: rightIrisRawCoords } = getEyeCoords(rightEyeData, rightEyeBox, rightEyeBoxSize, false);\n  const leftToRightEyeDepthDifference = getLeftToRightEyeDepthDifference(rawCoords);\n  if (Math.abs(leftToRightEyeDepthDifference) < 30) { // User is looking straight ahead.\n    replaceIrisCoords(rawCoords, leftEyeRawCoords, 'left', null);\n    replaceIrisCoords(rawCoords, rightEyeRawCoords, 'right', null);\n    // If the user is looking to the left or to the right, the iris coordinates tend to diverge too much from the mesh coordinates for them to be merged so we only update a single contour line above and below the eye.\n  } else if (leftToRightEyeDepthDifference < 1) { // User is looking towards the right.\n    replaceIrisCoords(rawCoords, leftEyeRawCoords, 'left', ['EyeUpper0', 'EyeLower0']);\n  } else { // User is looking towards the left.\n    replaceIrisCoords(rawCoords, rightEyeRawCoords, 'right', ['EyeUpper0', 'EyeLower0']);\n  }\n  const adjustedLeftIrisCoords = getAdjustedIrisCoords(rawCoords, leftIrisRawCoords, 'left');\n  const adjustedRightIrisCoords = getAdjustedIrisCoords(rawCoords, rightIrisRawCoords, 'right');\n  const newCoords = rawCoords.concat(adjustedLeftIrisCoords).concat(adjustedRightIrisCoords);\n  return newCoords;\n}\n", "// @tensorflow/tfjs-models/face-landmark-detection/src/constants.ts\n// https://github.com/google/mediapipe/mediapipe/python/solutions/face_mesh_connections.py\n\ntype PairArray = [number, number][];\n\nconst LIPS_CONNECTIONS: PairArray = [\n  [61, 146], [146, 91], [91, 181], [181, 84], [84, 17], [17, 314], [314, 405], [405, 321], [321, 375], [375, 291], [61, 185], [185, 40], [40, 39], [39, 37], [37, 0], [0, 267], [267, 269], [269, 270], [270, 409], [409, 291],\n  [78, 95], [95, 88], [88, 178], [178, 87], [87, 14], [14, 317], [317, 402], [402, 318], [318, 324], [324, 308], [78, 191], [191, 80], [80, 81], [81, 82], [82, 13], [13, 312], [312, 311], [311, 310], [310, 415], [415, 308],\n];\n\nconst LEFT_EYE_CONNECTIONS: PairArray = [[263, 249], [249, 390], [390, 373], [373, 374], [374, 380], [380, 381], [381, 382], [382, 362], [263, 466], [466, 388], [388, 387], [387, 386], [386, 385], [385, 384], [384, 398], [398, 362]];\n\nconst LEFT_EYEBROW_CONNECTIONS: PairArray = [[276, 283], [283, 282], [282, 295], [295, 285], [300, 293], [293, 334], [334, 296], [296, 336]];\n\nconst LEFT_IRIS_CONNECTIONS: PairArray = [[474, 475], [475, 476], [476, 477], [477, 474]];\n\nconst RIGHT_EYE_CONNECTIONS: PairArray = [[33, 7], [7, 163], [163, 144], [144, 145], [145, 153], [153, 154], [154, 155], [155, 133], [33, 246], [246, 161], [161, 160], [160, 159], [159, 158], [158, 157], [157, 173], [173, 133]];\n\nconst RIGHT_EYEBROW_CONNECTIONS: PairArray = [[46, 53], [53, 52], [52, 65], [65, 55], [70, 63], [63, 105], [105, 66], [66, 107]];\n\nconst RIGHT_IRIS_CONNECTIONS: PairArray = [[469, 470], [470, 471], [471, 472], [472, 469]];\n\nconst FACE_OVAL_CONNECTIONS: PairArray = [\n  [10, 338], [338, 297], [297, 332], [332, 284], [284, 251], [251, 389], [389, 356], [356, 454], [454, 323], [323, 361], [361, 288], [288, 397], [397, 365], [365, 379], [379, 378], [378, 400], [400, 377], [377, 152],\n  [152, 148], [148, 176], [176, 149], [149, 150], [150, 136], [136, 172], [172, 58], [58, 132], [132, 93], [93, 234], [234, 127], [127, 162], [162, 21], [21, 54], [54, 103], [103, 67], [67, 109], [109, 10],\n];\n\nexport const MEDIAPIPE_FACE_MESH_CONNECTED_KEYPOINTS_PAIRS: PairArray = [\n  [127, 34], [34, 139], [139, 127], [11, 0], [0, 37], [37, 11], [232, 231], [231, 120], [120, 232], [72, 37], [37, 39], [39, 72], [128, 121], [121, 47], [47, 128], [232, 121], [121, 128], [128, 232],\n  [104, 69], [69, 67], [67, 104], [175, 171], [171, 148], [148, 175], [118, 50], [50, 101], [101, 118], [73, 39], [39, 40], [40, 73], [9, 151], [151, 108], [108, 9], [48, 115], [115, 131], [131, 48],\n  [194, 204], [204, 211], [211, 194], [74, 40], [40, 185], [185, 74], [80, 42], [42, 183], [183, 80], [40, 92], [92, 186], [186, 40], [230, 229], [229, 118], [118, 230], [202, 212], [212, 214], [214, 202],\n  [83, 18], [18, 17], [17, 83], [76, 61], [61, 146], [146, 76], [160, 29], [29, 30], [30, 160], [56, 157], [157, 173], [173, 56], [106, 204], [204, 194], [194, 106], [135, 214], [214, 192], [192, 135],\n  [203, 165], [165, 98], [98, 203], [21, 71], [71, 68], [68, 21], [51, 45], [45, 4], [4, 51], [144, 24], [24, 23], [23, 144], [77, 146], [146, 91], [91, 77], [205, 50], [50, 187], [187, 205],\n  [201, 200], [200, 18], [18, 201], [91, 106], [106, 182], [182, 91], [90, 91], [91, 181], [181, 90], [85, 84], [84, 17], [17, 85], [206, 203], [203, 36], [36, 206], [148, 171], [171, 140], [140, 148],\n  [92, 40], [40, 39], [39, 92], [193, 189], [189, 244], [244, 193], [159, 158], [158, 28], [28, 159], [247, 246], [246, 161], [161, 247], [236, 3], [3, 196], [196, 236], [54, 68], [68, 104], [104, 54],\n  [193, 168], [168, 8], [8, 193], [117, 228], [228, 31], [31, 117], [189, 193], [193, 55], [55, 189], [98, 97], [97, 99], [99, 98], [126, 47], [47, 100], [100, 126], [166, 79], [79, 218], [218, 166],\n  [155, 154], [154, 26], [26, 155], [209, 49], [49, 131], [131, 209], [135, 136], [136, 150], [150, 135], [47, 126], [126, 217], [217, 47], [223, 52], [52, 53], [53, 223], [45, 51], [51, 134], [134, 45],\n  [211, 170], [170, 140], [140, 211], [67, 69], [69, 108], [108, 67], [43, 106], [106, 91], [91, 43], [230, 119], [119, 120], [120, 230], [226, 130], [130, 247], [247, 226], [63, 53], [53, 52], [52, 63],\n  [238, 20], [20, 242], [242, 238], [46, 70], [70, 156], [156, 46], [78, 62], [62, 96], [96, 78], [46, 53], [53, 63], [63, 46], [143, 34], [34, 227], [227, 143], [123, 117], [117, 111], [111, 123],\n  [44, 125], [125, 19], [19, 44], [236, 134], [134, 51], [51, 236], [216, 206], [206, 205], [205, 216], [154, 153], [153, 22], [22, 154], [39, 37], [37, 167], [167, 39], [200, 201], [201, 208], [208, 200],\n  [36, 142], [142, 100], [100, 36], [57, 212], [212, 202], [202, 57], [20, 60], [60, 99], [99, 20], [28, 158], [158, 157], [157, 28], [35, 226], [226, 113], [113, 35], [160, 159], [159, 27], [27, 160],\n  [204, 202], [202, 210], [210, 204], [113, 225], [225, 46], [46, 113], [43, 202], [202, 204], [204, 43], [62, 76], [76, 77], [77, 62], [137, 123], [123, 116], [116, 137], [41, 38], [38, 72], [72, 41],\n  [203, 129], [129, 142], [142, 203], [64, 98], [98, 240], [240, 64], [49, 102], [102, 64], [64, 49], [41, 73], [73, 74], [74, 41], [212, 216], [216, 207], [207, 212], [42, 74], [74, 184], [184, 42],\n  [169, 170], [170, 211], [211, 169], [170, 149], [149, 176], [176, 170], [105, 66], [66, 69], [69, 105], [122, 6], [6, 168], [168, 122], [123, 147], [147, 187], [187, 123], [96, 77], [77, 90], [90, 96],\n  [65, 55], [55, 107], [107, 65], [89, 90], [90, 180], [180, 89], [101, 100], [100, 120], [120, 101], [63, 105], [105, 104], [104, 63], [93, 137], [137, 227], [227, 93], [15, 86], [86, 85], [85, 15],\n  [129, 102], [102, 49], [49, 129], [14, 87], [87, 86], [86, 14], [55, 8], [8, 9], [9, 55], [100, 47], [47, 121], [121, 100], [145, 23], [23, 22], [22, 145], [88, 89], [89, 179], [179, 88],\n  [6, 122], [122, 196], [196, 6], [88, 95], [95, 96], [96, 88], [138, 172], [172, 136], [136, 138], [215, 58], [58, 172], [172, 215], [115, 48], [48, 219], [219, 115], [42, 80], [80, 81], [81, 42],\n  [195, 3], [3, 51], [51, 195], [43, 146], [146, 61], [61, 43], [171, 175], [175, 199], [199, 171], [81, 82], [82, 38], [38, 81], [53, 46], [46, 225], [225, 53], [144, 163], [163, 110], [110, 144],\n  [52, 65], [65, 66], [66, 52], [229, 228], [228, 117], [117, 229], [34, 127], [127, 234], [234, 34], [107, 108], [108, 69], [69, 107], [109, 108], [108, 151], [151, 109], [48, 64], [64, 235], [235, 48],\n  [62, 78], [78, 191], [191, 62], [129, 209], [209, 126], [126, 129], [111, 35], [35, 143], [143, 111], [117, 123], [123, 50], [50, 117], [222, 65], [65, 52], [52, 222], [19, 125], [125, 141], [141, 19],\n  [221, 55], [55, 65], [65, 221], [3, 195], [195, 197], [197, 3], [25, 7], [7, 33], [33, 25], [220, 237], [237, 44], [44, 220], [70, 71], [71, 139], [139, 70], [122, 193], [193, 245], [245, 122],\n  [247, 130], [130, 33], [33, 247], [71, 21], [21, 162], [162, 71], [170, 169], [169, 150], [150, 170], [188, 174], [174, 196], [196, 188], [216, 186], [186, 92], [92, 216], [2, 97], [97, 167], [167, 2],\n  [141, 125], [125, 241], [241, 141], [164, 167], [167, 37], [37, 164], [72, 38], [38, 12], [12, 72], [38, 82], [82, 13], [13, 38], [63, 68], [68, 71], [71, 63], [226, 35], [35, 111], [111, 226],\n  [101, 50], [50, 205], [205, 101], [206, 92], [92, 165], [165, 206], [209, 198], [198, 217], [217, 209], [165, 167], [167, 97], [97, 165], [220, 115], [115, 218], [218, 220], [133, 112], [112, 243], [243, 133],\n  [239, 238], [238, 241], [241, 239], [214, 135], [135, 169], [169, 214], [190, 173], [173, 133], [133, 190], [171, 208], [208, 32], [32, 171], [125, 44], [44, 237], [237, 125], [86, 87], [87, 178], [178, 86],\n  [85, 86], [86, 179], [179, 85], [84, 85], [85, 180], [180, 84], [83, 84], [84, 181], [181, 83], [201, 83], [83, 182], [182, 201], [137, 93], [93, 132], [132, 137], [76, 62], [62, 183], [183, 76],\n  [61, 76], [76, 184], [184, 61], [57, 61], [61, 185], [185, 57], [212, 57], [57, 186], [186, 212], [214, 207], [207, 187], [187, 214], [34, 143], [143, 156], [156, 34], [79, 239], [239, 237], [237, 79],\n  [123, 137], [137, 177], [177, 123], [44, 1], [1, 4], [4, 44], [201, 194], [194, 32], [32, 201], [64, 102], [102, 129], [129, 64], [213, 215], [215, 138], [138, 213], [59, 166], [166, 219], [219, 59],\n  [242, 99], [99, 97], [97, 242], [2, 94], [94, 141], [141, 2], [75, 59], [59, 235], [235, 75], [24, 110], [110, 228], [228, 24], [25, 130], [130, 226], [226, 25], [23, 24], [24, 229], [229, 23],\n  [22, 23], [23, 230], [230, 22], [26, 22], [22, 231], [231, 26], [112, 26], [26, 232], [232, 112], [189, 190], [190, 243], [243, 189], [221, 56], [56, 190], [190, 221], [28, 56], [56, 221], [221, 28],\n  [27, 28], [28, 222], [222, 27], [29, 27], [27, 223], [223, 29], [30, 29], [29, 224], [224, 30], [247, 30], [30, 225], [225, 247], [238, 79], [79, 20], [20, 238], [166, 59], [59, 75], [75, 166],\n  [60, 75], [75, 240], [240, 60], [147, 177], [177, 215], [215, 147], [20, 79], [79, 166], [166, 20], [187, 147], [147, 213], [213, 187], [112, 233], [233, 244], [244, 112], [233, 128], [128, 245], [245, 233],\n  [128, 114], [114, 188], [188, 128], [114, 217], [217, 174], [174, 114], [131, 115], [115, 220], [220, 131], [217, 198], [198, 236], [236, 217], [198, 131], [131, 134], [134, 198], [177, 132], [132, 58], [58, 177],\n  [143, 35], [35, 124], [124, 143], [110, 163], [163, 7], [7, 110], [228, 110], [110, 25], [25, 228], [356, 389], [389, 368], [368, 356], [11, 302], [302, 267], [267, 11], [452, 350], [350, 349], [349, 452],\n  [302, 303], [303, 269], [269, 302], [357, 343], [343, 277], [277, 357], [452, 453], [453, 357], [357, 452], [333, 332], [332, 297], [297, 333], [175, 152], [152, 377], [377, 175], [347, 348], [348, 330], [330, 347],\n  [303, 304], [304, 270], [270, 303], [9, 336], [336, 337], [337, 9], [278, 279], [279, 360], [360, 278], [418, 262], [262, 431], [431, 418], [304, 408], [408, 409], [409, 304], [310, 415], [415, 407], [407, 310],\n  [270, 409], [409, 410], [410, 270], [450, 348], [348, 347], [347, 450], [422, 430], [430, 434], [434, 422], [313, 314], [314, 17], [17, 313], [306, 307], [307, 375], [375, 306], [387, 388], [388, 260], [260, 387],\n  [286, 414], [414, 398], [398, 286], [335, 406], [406, 418], [418, 335], [364, 367], [367, 416], [416, 364], [423, 358], [358, 327], [327, 423], [251, 284], [284, 298], [298, 251], [281, 5], [5, 4], [4, 281],\n  [373, 374], [374, 253], [253, 373], [307, 320], [320, 321], [321, 307], [425, 427], [427, 411], [411, 425], [421, 313], [313, 18], [18, 421], [321, 405], [405, 406], [406, 321], [320, 404], [404, 405], [405, 320],\n  [315, 16], [16, 17], [17, 315], [426, 425], [425, 266], [266, 426], [377, 400], [400, 369], [369, 377], [322, 391], [391, 269], [269, 322], [417, 465], [465, 464], [464, 417], [386, 257], [257, 258], [258, 386],\n  [466, 260], [260, 388], [388, 466], [456, 399], [399, 419], [419, 456], [284, 332], [332, 333], [333, 284], [417, 285], [285, 8], [8, 417], [346, 340], [340, 261], [261, 346], [413, 441], [441, 285], [285, 413],\n  [327, 460], [460, 328], [328, 327], [355, 371], [371, 329], [329, 355], [392, 439], [439, 438], [438, 392], [382, 341], [341, 256], [256, 382], [429, 420], [420, 360], [360, 429], [364, 394], [394, 379], [379, 364],\n  [277, 343], [343, 437], [437, 277], [443, 444], [444, 283], [283, 443], [275, 440], [440, 363], [363, 275], [431, 262], [262, 369], [369, 431], [297, 338], [338, 337], [337, 297], [273, 375], [375, 321], [321, 273],\n  [450, 451], [451, 349], [349, 450], [446, 342], [342, 467], [467, 446], [293, 334], [334, 282], [282, 293], [458, 461], [461, 462], [462, 458], [276, 353], [353, 383], [383, 276], [308, 324], [324, 325], [325, 308],\n  [276, 300], [300, 293], [293, 276], [372, 345], [345, 447], [447, 372], [352, 345], [345, 340], [340, 352], [274, 1], [1, 19], [19, 274], [456, 248], [248, 281], [281, 456], [436, 427], [427, 425], [425, 436],\n  [381, 256], [256, 252], [252, 381], [269, 391], [391, 393], [393, 269], [200, 199], [199, 428], [428, 200], [266, 330], [330, 329], [329, 266], [287, 273], [273, 422], [422, 287], [250, 462], [462, 328], [328, 250],\n  [258, 286], [286, 384], [384, 258], [265, 353], [353, 342], [342, 265], [387, 259], [259, 257], [257, 387], [424, 431], [431, 430], [430, 424], [342, 353], [353, 276], [276, 342], [273, 335], [335, 424], [424, 273],\n  [292, 325], [325, 307], [307, 292], [366, 447], [447, 345], [345, 366], [271, 303], [303, 302], [302, 271], [423, 266], [266, 371], [371, 423], [294, 455], [455, 460], [460, 294], [279, 278], [278, 294], [294, 279],\n  [271, 272], [272, 304], [304, 271], [432, 434], [434, 427], [427, 432], [272, 407], [407, 408], [408, 272], [394, 430], [430, 431], [431, 394], [395, 369], [369, 400], [400, 395], [334, 333], [333, 299], [299, 334],\n  [351, 417], [417, 168], [168, 351], [352, 280], [280, 411], [411, 352], [325, 319], [319, 320], [320, 325], [295, 296], [296, 336], [336, 295], [319, 403], [403, 404], [404, 319], [330, 348], [348, 349], [349, 330],\n  [293, 298], [298, 333], [333, 293], [323, 454], [454, 447], [447, 323], [15, 16], [16, 315], [315, 15], [358, 429], [429, 279], [279, 358], [14, 15], [15, 316], [316, 14], [285, 336], [336, 9], [9, 285],\n  [329, 349], [349, 350], [350, 329], [374, 380], [380, 252], [252, 374], [318, 402], [402, 403], [403, 318], [6, 197], [197, 419], [419, 6], [318, 319], [319, 325], [325, 318], [367, 364], [364, 365], [365, 367],\n  [435, 367], [367, 397], [397, 435], [344, 438], [438, 439], [439, 344], [272, 271], [271, 311], [311, 272], [195, 5], [5, 281], [281, 195], [273, 287], [287, 291], [291, 273], [396, 428], [428, 199], [199, 396],\n  [311, 271], [271, 268], [268, 311], [283, 444], [444, 445], [445, 283], [373, 254], [254, 339], [339, 373], [282, 334], [334, 296], [296, 282], [449, 347], [347, 346], [346, 449], [264, 447], [447, 454], [454, 264],\n  [336, 296], [296, 299], [299, 336], [338, 10], [10, 151], [151, 338], [278, 439], [439, 455], [455, 278], [292, 407], [407, 415], [415, 292], [358, 371], [371, 355], [355, 358], [340, 345], [345, 372], [372, 340],\n  [346, 347], [347, 280], [280, 346], [442, 443], [443, 282], [282, 442], [19, 94], [94, 370], [370, 19], [441, 442], [442, 295], [295, 441], [248, 419], [419, 197], [197, 248], [263, 255], [255, 359], [359, 263],\n  [440, 275], [275, 274], [274, 440], [300, 383], [383, 368], [368, 300], [351, 412], [412, 465], [465, 351], [263, 467], [467, 466], [466, 263], [301, 368], [368, 389], [389, 301], [395, 378], [378, 379], [379, 395],\n  [412, 351], [351, 419], [419, 412], [436, 426], [426, 322], [322, 436], [2, 164], [164, 393], [393, 2], [370, 462], [462, 461], [461, 370], [164, 0], [0, 267], [267, 164], [302, 11], [11, 12], [12, 302],\n  [268, 12], [12, 13], [13, 268], [293, 300], [300, 301], [301, 293], [446, 261], [261, 340], [340, 446], [330, 266], [266, 425], [425, 330], [426, 423], [423, 391], [391, 426], [429, 355], [355, 437], [437, 429],\n  [391, 327], [327, 326], [326, 391], [440, 457], [457, 438], [438, 440], [341, 382], [382, 362], [362, 341], [459, 457], [457, 461], [461, 459], [434, 430], [430, 394], [394, 434], [414, 463], [463, 362], [362, 414],\n  [396, 369], [369, 262], [262, 396], [354, 461], [461, 457], [457, 354], [316, 403], [403, 402], [402, 316], [315, 404], [404, 403], [403, 315], [314, 405], [405, 404], [404, 314], [313, 406], [406, 405], [405, 313],\n  [421, 418], [418, 406], [406, 421], [366, 401], [401, 361], [361, 366], [306, 408], [408, 407], [407, 306], [291, 409], [409, 408], [408, 291], [287, 410], [410, 409], [409, 287], [432, 436], [436, 410], [410, 432],\n  [434, 416], [416, 411], [411, 434], [264, 368], [368, 383], [383, 264], [309, 438], [438, 457], [457, 309], [352, 376], [376, 401], [401, 352], [274, 275], [275, 4], [4, 274], [421, 428], [428, 262], [262, 421],\n  [294, 327], [327, 358], [358, 294], [433, 416], [416, 367], [367, 433], [289, 455], [455, 439], [439, 289], [462, 370], [370, 326], [326, 462], [2, 326], [326, 370], [370, 2], [305, 460], [460, 455], [455, 305],\n  [254, 449], [449, 448], [448, 254], [255, 261], [261, 446], [446, 255], [253, 450], [450, 449], [449, 253], [252, 451], [451, 450], [450, 252], [256, 452], [452, 451], [451, 256], [341, 453], [453, 452], [452, 341],\n  [413, 464], [464, 463], [463, 413], [441, 413], [413, 414], [414, 441], [258, 442], [442, 441], [441, 258], [257, 443], [443, 442], [442, 257], [259, 444], [444, 443], [443, 259], [260, 445], [445, 444], [444, 260],\n  [467, 342], [342, 445], [445, 467], [459, 458], [458, 250], [250, 459], [289, 392], [392, 290], [290, 289], [290, 328], [328, 460], [460, 290], [376, 433], [433, 435], [435, 376], [250, 290], [290, 392], [392, 250],\n  [411, 416], [416, 433], [433, 411], [341, 463], [463, 464], [464, 341], [453, 464], [464, 465], [465, 453], [357, 465], [465, 412], [412, 357], [343, 412], [412, 399], [399, 343], [360, 363], [363, 440], [440, 360],\n  [437, 399], [399, 456], [456, 437], [420, 456], [456, 363], [363, 420], [401, 435], [435, 288], [288, 401], [372, 383], [383, 353], [353, 372], [339, 255], [255, 249], [249, 339], [448, 261], [261, 255], [255, 448],\n  [133, 243], [243, 190], [190, 133], [133, 155], [155, 112], [112, 133], [33, 246], [246, 247], [247, 33], [33, 130], [130, 25], [25, 33], [398, 384], [384, 286], [286, 398], [362, 398], [398, 414], [414, 362],\n  [362, 463], [463, 341], [341, 362], [263, 359], [359, 467], [467, 263], [263, 249], [249, 255], [255, 263], [466, 467], [467, 260], [260, 466], [75, 60], [60, 166], [166, 75], [238, 239], [239, 79], [79, 238],\n  [162, 127], [127, 139], [139, 162], [72, 11], [11, 37], [37, 72], [121, 232], [232, 120], [120, 121], [73, 72], [72, 39], [39, 73], [114, 128], [128, 47], [47, 114], [233, 232], [232, 128], [128, 233],\n  [103, 104], [104, 67], [67, 103], [152, 175], [175, 148], [148, 152], [119, 118], [118, 101], [101, 119], [74, 73], [73, 40], [40, 74], [107, 9], [9, 108], [108, 107], [49, 48], [48, 131], [131, 49],\n  [32, 194], [194, 211], [211, 32], [184, 74], [74, 185], [185, 184], [191, 80], [80, 183], [183, 191], [185, 40], [40, 186], [186, 185], [119, 230], [230, 118], [118, 119], [210, 202], [202, 214], [214, 210],\n  [84, 83], [83, 17], [17, 84], [77, 76], [76, 146], [146, 77], [161, 160], [160, 30], [30, 161], [190, 56], [56, 173], [173, 190], [182, 106], [106, 194], [194, 182], [138, 135], [135, 192], [192, 138],\n  [129, 203], [203, 98], [98, 129], [54, 21], [21, 68], [68, 54], [5, 51], [51, 4], [4, 5], [145, 144], [144, 23], [23, 145], [90, 77], [77, 91], [91, 90], [207, 205], [205, 187], [187, 207],\n  [83, 201], [201, 18], [18, 83], [181, 91], [91, 182], [182, 181], [180, 90], [90, 181], [181, 180], [16, 85], [85, 17], [17, 16], [205, 206], [206, 36], [36, 205], [176, 148], [148, 140], [140, 176],\n  [165, 92], [92, 39], [39, 165], [245, 193], [193, 244], [244, 245], [27, 159], [159, 28], [28, 27], [30, 247], [247, 161], [161, 30], [174, 236], [236, 196], [196, 174], [103, 54], [54, 104], [104, 103],\n  [55, 193], [193, 8], [8, 55], [111, 117], [117, 31], [31, 111], [221, 189], [189, 55], [55, 221], [240, 98], [98, 99], [99, 240], [142, 126], [126, 100], [100, 142], [219, 166], [166, 218], [218, 219],\n  [112, 155], [155, 26], [26, 112], [198, 209], [209, 131], [131, 198], [169, 135], [135, 150], [150, 169], [114, 47], [47, 217], [217, 114], [224, 223], [223, 53], [53, 224], [220, 45], [45, 134], [134, 220],\n  [32, 211], [211, 140], [140, 32], [109, 67], [67, 108], [108, 109], [146, 43], [43, 91], [91, 146], [231, 230], [230, 120], [120, 231], [113, 226], [226, 247], [247, 113], [105, 63], [63, 52], [52, 105],\n  [241, 238], [238, 242], [242, 241], [124, 46], [46, 156], [156, 124], [95, 78], [78, 96], [96, 95], [70, 46], [46, 63], [63, 70], [116, 143], [143, 227], [227, 116], [116, 123], [123, 111], [111, 116],\n  [1, 44], [44, 19], [19, 1], [3, 236], [236, 51], [51, 3], [207, 216], [216, 205], [205, 207], [26, 154], [154, 22], [22, 26], [165, 39], [39, 167], [167, 165], [199, 200], [200, 208], [208, 199],\n  [101, 36], [36, 100], [100, 101], [43, 57], [57, 202], [202, 43], [242, 20], [20, 99], [99, 242], [56, 28], [28, 157], [157, 56], [124, 35], [35, 113], [113, 124], [29, 160], [160, 27], [27, 29],\n  [211, 204], [204, 210], [210, 211], [124, 113], [113, 46], [46, 124], [106, 43], [43, 204], [204, 106], [96, 62], [62, 77], [77, 96], [227, 137], [137, 116], [116, 227], [73, 41], [41, 72], [72, 73],\n  [36, 203], [203, 142], [142, 36], [235, 64], [64, 240], [240, 235], [48, 49], [49, 64], [64, 48], [42, 41], [41, 74], [74, 42], [214, 212], [212, 207], [207, 214], [183, 42], [42, 184], [184, 183],\n  [210, 169], [169, 211], [211, 210], [140, 170], [170, 176], [176, 140], [104, 105], [105, 69], [69, 104], [193, 122], [122, 168], [168, 193], [50, 123], [123, 187], [187, 50], [89, 96], [96, 90], [90, 89],\n  [66, 65], [65, 107], [107, 66], [179, 89], [89, 180], [180, 179], [119, 101], [101, 120], [120, 119], [68, 63], [63, 104], [104, 68], [234, 93], [93, 227], [227, 234], [16, 15], [15, 85], [85, 16],\n  [209, 129], [129, 49], [49, 209], [15, 14], [14, 86], [86, 15], [107, 55], [55, 9], [9, 107], [120, 100], [100, 121], [121, 120], [153, 145], [145, 22], [22, 153], [178, 88], [88, 179], [179, 178],\n  [197, 6], [6, 196], [196, 197], [89, 88], [88, 96], [96, 89], [135, 138], [138, 136], [136, 135], [138, 215], [215, 172], [172, 138], [218, 115], [115, 219], [219, 218], [41, 42], [42, 81], [81, 41],\n  [5, 195], [195, 51], [51, 5], [57, 43], [43, 61], [61, 57], [208, 171], [171, 199], [199, 208], [41, 81], [81, 38], [38, 41], [224, 53], [53, 225], [225, 224], [24, 144], [144, 110], [110, 24],\n  [105, 52], [52, 66], [66, 105], [118, 229], [229, 117], [117, 118], [227, 34], [34, 234], [234, 227], [66, 107], [107, 69], [69, 66], [10, 109], [109, 151], [151, 10], [219, 48], [48, 235], [235, 219],\n  [183, 62], [62, 191], [191, 183], [142, 129], [129, 126], [126, 142], [116, 111], [111, 143], [143, 116], [118, 117], [117, 50], [50, 118], [223, 222], [222, 52], [52, 223], [94, 19], [19, 141], [141, 94],\n  [222, 221], [221, 65], [65, 222], [196, 3], [3, 197], [197, 196], [45, 220], [220, 44], [44, 45], [156, 70], [70, 139], [139, 156], [188, 122], [122, 245], [245, 188], [139, 71], [71, 162], [162, 139],\n  [149, 170], [170, 150], [150, 149], [122, 188], [188, 196], [196, 122], [206, 216], [216, 92], [92, 206], [164, 2], [2, 167], [167, 164], [242, 141], [141, 241], [241, 242], [0, 164], [164, 37], [37, 0],\n  [11, 72], [72, 12], [12, 11], [12, 38], [38, 13], [13, 12], [70, 63], [63, 71], [71, 70], [31, 226], [226, 111], [111, 31], [36, 101], [101, 205], [205, 36], [203, 206], [206, 165], [165, 203],\n  [126, 209], [209, 217], [217, 126], [98, 165], [165, 97], [97, 98], [237, 220], [220, 218], [218, 237], [237, 239], [239, 241], [241, 237], [210, 214], [214, 169], [169, 210], [140, 171], [171, 32], [32, 140],\n  [241, 125], [125, 237], [237, 241], [179, 86], [86, 178], [178, 179], [180, 85], [85, 179], [179, 180], [181, 84], [84, 180], [180, 181], [182, 83], [83, 181], [181, 182], [194, 201], [201, 182], [182, 194],\n  [177, 137], [137, 132], [132, 177], [184, 76], [76, 183], [183, 184], [185, 61], [61, 184], [184, 185], [186, 57], [57, 185], [185, 186], [216, 212], [212, 186], [186, 216], [192, 214], [214, 187], [187, 192],\n  [139, 34], [34, 156], [156, 139], [218, 79], [79, 237], [237, 218], [147, 123], [123, 177], [177, 147], [45, 44], [44, 4], [4, 45], [208, 201], [201, 32], [32, 208], [98, 64], [64, 129], [129, 98],\n  [192, 213], [213, 138], [138, 192], [235, 59], [59, 219], [219, 235], [141, 242], [242, 97], [97, 141], [97, 2], [2, 141], [141, 97], [240, 75], [75, 235], [235, 240], [229, 24], [24, 228], [228, 229],\n  [31, 25], [25, 226], [226, 31], [230, 23], [23, 229], [229, 230], [231, 22], [22, 230], [230, 231], [232, 26], [26, 231], [231, 232], [233, 112], [112, 232], [232, 233], [244, 189], [189, 243], [243, 244],\n  [189, 221], [221, 190], [190, 189], [222, 28], [28, 221], [221, 222], [223, 27], [27, 222], [222, 223], [224, 29], [29, 223], [223, 224], [225, 30], [30, 224], [224, 225], [113, 247], [247, 225], [225, 113],\n  [99, 60], [60, 240], [240, 99], [213, 147], [147, 215], [215, 213], [60, 20], [20, 166], [166, 60], [192, 187], [187, 213], [213, 192], [243, 112], [112, 244], [244, 243], [244, 233], [233, 245], [245, 244],\n  [245, 128], [128, 188], [188, 245], [188, 114], [114, 174], [174, 188], [134, 131], [131, 220], [220, 134], [174, 217], [217, 236], [236, 174], [236, 198], [198, 134], [134, 236], [215, 177], [177, 58], [58, 215],\n  [156, 143], [143, 124], [124, 156], [25, 110], [110, 7], [7, 25], [31, 228], [228, 25], [25, 31], [264, 356], [356, 368], [368, 264], [0, 11], [11, 267], [267, 0], [451, 452], [452, 349], [349, 451],\n  [267, 302], [302, 269], [269, 267], [350, 357], [357, 277], [277, 350], [350, 452], [452, 357], [357, 350], [299, 333], [333, 297], [297, 299], [396, 175], [175, 377], [377, 396], [280, 347], [347, 330], [330, 280],\n  [269, 303], [303, 270], [270, 269], [151, 9], [9, 337], [337, 151], [344, 278], [278, 360], [360, 344], [424, 418], [418, 431], [431, 424], [270, 304], [304, 409], [409, 270], [272, 310], [310, 407], [407, 272],\n  [322, 270], [270, 410], [410, 322], [449, 450], [450, 347], [347, 449], [432, 422], [422, 434], [434, 432], [18, 313], [313, 17], [17, 18], [291, 306], [306, 375], [375, 291], [259, 387], [387, 260], [260, 259],\n  [424, 335], [335, 418], [418, 424], [434, 364], [364, 416], [416, 434], [391, 423], [423, 327], [327, 391], [301, 251], [251, 298], [298, 301], [275, 281], [281, 4], [4, 275], [254, 373], [373, 253], [253, 254],\n  [375, 307], [307, 321], [321, 375], [280, 425], [425, 411], [411, 280], [200, 421], [421, 18], [18, 200], [335, 321], [321, 406], [406, 335], [321, 320], [320, 405], [405, 321], [314, 315], [315, 17], [17, 314],\n  [423, 426], [426, 266], [266, 423], [396, 377], [377, 369], [369, 396], [270, 322], [322, 269], [269, 270], [413, 417], [417, 464], [464, 413], [385, 386], [386, 258], [258, 385], [248, 456], [456, 419], [419, 248],\n  [298, 284], [284, 333], [333, 298], [168, 417], [417, 8], [8, 168], [448, 346], [346, 261], [261, 448], [417, 413], [413, 285], [285, 417], [326, 327], [327, 328], [328, 326], [277, 355], [355, 329], [329, 277],\n  [309, 392], [392, 438], [438, 309], [381, 382], [382, 256], [256, 381], [279, 429], [429, 360], [360, 279], [365, 364], [364, 379], [379, 365], [355, 277], [277, 437], [437, 355], [282, 443], [443, 283], [283, 282],\n  [281, 275], [275, 363], [363, 281], [395, 431], [431, 369], [369, 395], [299, 297], [297, 337], [337, 299], [335, 273], [273, 321], [321, 335], [348, 450], [450, 349], [349, 348], [359, 446], [446, 467], [467, 359],\n  [283, 293], [293, 282], [282, 283], [250, 458], [458, 462], [462, 250], [300, 276], [276, 383], [383, 300], [292, 308], [308, 325], [325, 292], [283, 276], [276, 293], [293, 283], [264, 372], [372, 447], [447, 264],\n  [346, 352], [352, 340], [340, 346], [354, 274], [274, 19], [19, 354], [363, 456], [456, 281], [281, 363], [426, 436], [436, 425], [425, 426], [380, 381], [381, 252], [252, 380], [267, 269], [269, 393], [393, 267],\n  [421, 200], [200, 428], [428, 421], [371, 266], [266, 329], [329, 371], [432, 287], [287, 422], [422, 432], [290, 250], [250, 328], [328, 290], [385, 258], [258, 384], [384, 385], [446, 265], [265, 342], [342, 446],\n  [386, 387], [387, 257], [257, 386], [422, 424], [424, 430], [430, 422], [445, 342], [342, 276], [276, 445], [422, 273], [273, 424], [424, 422], [306, 292], [292, 307], [307, 306], [352, 366], [366, 345], [345, 352],\n  [268, 271], [271, 302], [302, 268], [358, 423], [423, 371], [371, 358], [327, 294], [294, 460], [460, 327], [331, 279], [279, 294], [294, 331], [303, 271], [271, 304], [304, 303], [436, 432], [432, 427], [427, 436],\n  [304, 272], [272, 408], [408, 304], [395, 394], [394, 431], [431, 395], [378, 395], [395, 400], [400, 378], [296, 334], [334, 299], [299, 296], [6, 351], [351, 168], [168, 6], [376, 352], [352, 411], [411, 376],\n  [307, 325], [325, 320], [320, 307], [285, 295], [295, 336], [336, 285], [320, 319], [319, 404], [404, 320], [329, 330], [330, 349], [349, 329], [334, 293], [293, 333], [333, 334], [366, 323], [323, 447], [447, 366],\n  [316, 15], [15, 315], [315, 316], [331, 358], [358, 279], [279, 331], [317, 14], [14, 316], [316, 317], [8, 285], [285, 9], [9, 8], [277, 329], [329, 350], [350, 277], [253, 374], [374, 252], [252, 253],\n  [319, 318], [318, 403], [403, 319], [351, 6], [6, 419], [419, 351], [324, 318], [318, 325], [325, 324], [397, 367], [367, 365], [365, 397], [288, 435], [435, 397], [397, 288], [278, 344], [344, 439], [439, 278],\n  [310, 272], [272, 311], [311, 310], [248, 195], [195, 281], [281, 248], [375, 273], [273, 291], [291, 375], [175, 396], [396, 199], [199, 175], [312, 311], [311, 268], [268, 312], [276, 283], [283, 445], [445, 276],\n  [390, 373], [373, 339], [339, 390], [295, 282], [282, 296], [296, 295], [448, 449], [449, 346], [346, 448], [356, 264], [264, 454], [454, 356], [337, 336], [336, 299], [299, 337], [337, 338], [338, 151], [151, 337],\n  [294, 278], [278, 455], [455, 294], [308, 292], [292, 415], [415, 308], [429, 358], [358, 355], [355, 429], [265, 340], [340, 372], [372, 265], [352, 346], [346, 280], [280, 352], [295, 442], [442, 282], [282, 295],\n  [354, 19], [19, 370], [370, 354], [285, 441], [441, 295], [295, 285], [195, 248], [248, 197], [197, 195], [457, 440], [440, 274], [274, 457], [301, 300], [300, 368], [368, 301], [417, 351], [351, 465], [465, 417],\n  [251, 301], [301, 389], [389, 251], [394, 395], [395, 379], [379, 394], [399, 412], [412, 419], [419, 399], [410, 436], [436, 322], [322, 410], [326, 2], [2, 393], [393, 326], [354, 370], [370, 461], [461, 354],\n  [393, 164], [164, 267], [267, 393], [268, 302], [302, 12], [12, 268], [312, 268], [268, 13], [13, 312], [298, 293], [293, 301], [301, 298], [265, 446], [446, 340], [340, 265], [280, 330], [330, 425], [425, 280],\n  [322, 426], [426, 391], [391, 322], [420, 429], [429, 437], [437, 420], [393, 391], [391, 326], [326, 393], [344, 440], [440, 438], [438, 344], [458, 459], [459, 461], [461, 458], [364, 434], [434, 394], [394, 364],\n  [428, 396], [396, 262], [262, 428], [274, 354], [354, 457], [457, 274], [317, 316], [316, 402], [402, 317], [316, 315], [315, 403], [403, 316], [315, 314], [314, 404], [404, 315], [314, 313], [313, 405], [405, 314],\n  [313, 421], [421, 406], [406, 313], [323, 366], [366, 361], [361, 323], [292, 306], [306, 407], [407, 292], [306, 291], [291, 408], [408, 306], [291, 287], [287, 409], [409, 291], [287, 432], [432, 410], [410, 287],\n  [427, 434], [434, 411], [411, 427], [372, 264], [264, 383], [383, 372], [459, 309], [309, 457], [457, 459], [366, 352], [352, 401], [401, 366], [1, 274], [274, 4], [4, 1], [418, 421], [421, 262], [262, 418],\n  [331, 294], [294, 358], [358, 331], [435, 433], [433, 367], [367, 435], [392, 289], [289, 439], [439, 392], [328, 462], [462, 326], [326, 328], [94, 2], [2, 370], [370, 94], [289, 305], [305, 455], [455, 289],\n  [339, 254], [254, 448], [448, 339], [359, 255], [255, 446], [446, 359], [254, 253], [253, 449], [449, 254], [253, 252], [252, 450], [450, 253], [252, 256], [256, 451], [451, 252], [256, 341], [341, 452], [452, 256],\n  [414, 413], [413, 463], [463, 414], [286, 441], [441, 414], [414, 286], [286, 258], [258, 441], [441, 286], [258, 257], [257, 442], [442, 258], [257, 259], [259, 443], [443, 257], [259, 260], [260, 444], [444, 259],\n  [260, 467], [467, 445], [445, 260], [309, 459], [459, 250], [250, 309], [305, 289], [289, 290], [290, 305], [305, 290], [290, 460], [460, 305], [401, 376], [376, 435], [435, 401], [309, 250], [250, 392], [392, 309],\n  [376, 411], [411, 433], [433, 376], [453, 341], [341, 464], [464, 453], [357, 453], [453, 465], [465, 357], [343, 357], [357, 412], [412, 343], [437, 343], [343, 399], [399, 437], [344, 360], [360, 440], [440, 344],\n  [420, 437], [437, 456], [456, 420], [360, 420], [420, 363], [363, 360], [361, 401], [401, 288], [288, 361], [265, 372], [372, 353], [353, 265], [390, 339], [339, 249], [249, 390], [339, 448], [448, 255], [255, 339],\n];\n\nfunction connectionsToIndices(connections: PairArray) {\n  const indices = connections.map((connection) => connection[0]);\n  indices.push(connections[connections.length - 1][1]);\n  return indices;\n}\n\nexport const MEDIAPIPE_FACE_MESH_KEYPOINTS_BY_CONTOUR = {\n  lips: connectionsToIndices(LIPS_CONNECTIONS),\n  leftEye: connectionsToIndices(LEFT_EYE_CONNECTIONS),\n  leftEyebrow: connectionsToIndices(LEFT_EYEBROW_CONNECTIONS),\n  leftIris: connectionsToIndices(LEFT_IRIS_CONNECTIONS),\n  rightEye: connectionsToIndices(RIGHT_EYE_CONNECTIONS),\n  rightEyebrow: connectionsToIndices(RIGHT_EYEBROW_CONNECTIONS),\n  rightIris: connectionsToIndices(RIGHT_IRIS_CONNECTIONS),\n  faceOval: connectionsToIndices(FACE_OVAL_CONNECTIONS),\n};\n\nconst indexLabelPairs: [number, string][] = Object.entries(MEDIAPIPE_FACE_MESH_KEYPOINTS_BY_CONTOUR)\n  .map(([label, indices]) => indices.map((index) => [index, label] as [number, string]))\n  .flat();\n\nexport const MEDIAPIPE_FACE_MESH_KEYPOINTS = new Map(indexLabelPairs);\n\ntype AssignAverage = number[];\nexport interface LandmarksRefinementConfig {\n  indexesMapping: number[]; // Maps indexes of the given set of landmarks to indexes of the resulting set of landmarks. Should be non empty and contain the same amount of indexes as landmarks in the corresponding input\n  zRefinement: 'none'|'copy'|AssignAverage; // Z refinement instructions.\n}\n\nexport const LANDMARKS_REFINEMENT_LIPS_CONFIG = [\n  61, 146, 91, 181, 84, 17, 314, 405, 321, 375, 291, // Lower outer.\n  185, 40, 39, 37, 0, 267, 269, 270, 409, // Upper outer(excluding corners).\n  78, 95, 88, 178, 87, 14, 317, 402, 318, 324, 308, // Lower inner.\n  191, 80, 81, 82, 13, 312, 311, 310, 415, // Upper inner(excluding corners).\n  76, 77, 90, 180, 85, 16, 315, 404, 320, 307, 306, // Lower semi - outer.\n  184, 74, 73, 72, 11, 302, 303, 304, 408, // Upper semi - outer(excluding corners).\n  62, 96, 89, 179, 86, 15, 316, 403, 319, 325, 292, // Lower semi - inner.\n  183, 42, 41, 38, 12, 268, 271, 272, 407, // Upper semi - inner(excluding corners).\n];\n\nexport const LANDMARKS_REFINEMENT_LEFT_EYE_CONFIG = [\n  33, 7, 163, 144, 145, 153, 154, 155, 133, // Lower contour.\n  246, 161, 160, 159, 158, 157, 173, // upper contour (excluding corners).\n  130, 25, 110, 24, 23, 22, 26, 112, 243, // Halo x2 lower contour.\n  247, 30, 29, 27, 28, 56, 190, // Halo x2 upper contour (excluding corners).\n  226, 31, 228, 229, 230, 231, 232, 233, 244, // Halo x3 lower contour.\n  113, 225, 224, 223, 222, 221, 189, // Halo x3 upper contour (excluding corners).\n  35, 124, 46, 53, 52, 65, // Halo x4 upper contour (no lower because of mesh structure) or eyebrow inner contour.\n  143, 111, 117, 118, 119, 120, 121, 128, 245, // Halo x5 lower contour.\n  156, 70, 63, 105, 66, 107, 55, 193, // Halo x5 upper contour (excluding corners) or eyebrow outer contour.\n];\n\nexport const LANDMARKS_REFINEMENT_RIGHT_EYE_CONFIG = [\n  263, 249, 390, 373, 374, 380, 381, 382, 362, // Lower contour.\n  466, 388, 387, 386, 385, 384, 398, // Upper contour (excluding corners).\n  359, 255, 339, 254, 253, 252, 256, 341, 463, // Halo x2 lower contour.\n  467, 260, 259, 257, 258, 286, 414, // Halo x2 upper contour (excluding corners).\n  446, 261, 448, 449, 450, 451, 452, 453, 464, // Halo x3 lower contour.\n  342, 445, 444, 443, 442, 441, 413, // Halo x3 upper contour (excluding corners).\n  265, 353, 276, 283, 282, 295, // Halo x4 upper contour (no lower because of mesh structure) or/ eyebrow inner contour.\n  372, 340, 346, 347, 348, 349, 350, 357, 465, // Halo x5 lower contour.\n  383, 300, 293, 334, 296, 336, 285, 417, // Halo x5 upper contour (excluding corners) or eyebrow outer contour.\n];\n\nexport const LANDMARKS_REFINEMENT_LEFT_IRIS_CONFIG = [\n  468, // Center.\n  469, // Iris right edge.\n  470, // Iris top edge.\n  471, // Iris left edge.\n  472, // Iris bottom edge.\n];\n/*\nzRefinement: [\n  33, 7, 163, 144, 145, 153, 154, 155, 133, // Lower contour.\n  246, 161, 160, 159, 158, 157, 173, // Upper contour (excluding corners).\n];\n*/\n\nexport const LANDMARKS_REFINEMENT_RIGHT_IRIS_CONFIG = [\n  473, // Center.\n  474, // Iris right edge.\n  475, // Iris top edge.\n  476, // Iris left edge.\n  477, // Iris bottom edge.\n];\n/*\nzRefinement: [\n  263, 249, 390, 373, 374, 380, 381, 382, 362, // Lower contour.\n  466, 388, 387, 386, 385, 384, 398, // Upper contour (excluding corners).\n];\n*/\n", "import * as constants from './constants';\nimport type { Tensor } from '../tfjs/types';\n\nexport async function augment(rawCoords, results: Tensor[]) {\n  const t: Record<string, Float32Array> = { // all attention models produce 2d results so it needs to be later augmented with correct z-coords\n    // mesh: results[0], // already have it in rawCoords // output_mesh_identity\n    // flag: results[1], // already processed in parent // conv_faceflag\n    lips: await results.filter((r) => r.size === 160)?.[0]?.data() as Float32Array, // 80 x 2d = 160 // output_lips\n    irisL: await results.filter((r) => r.size === 10)?.[0]?.data() as Float32Array, // 5 x 2d = 10 // output_right_iris\n    eyeL: await results.filter((r) => r.size === 142)?.[0]?.data() as Float32Array, // 71 x 2d = 142 // output_right_eye\n    irisR: await results.filter((r) => r.size === 10)?.[1]?.data() as Float32Array, // 5 x 2d = 10 // output_left_iris\n    eyeR: await results.filter((r) => r.size === 142)?.[1]?.data() as Float32Array, // 71 x 2d = 142// output_left_eye\n  };\n  for (const val of Object.values(t)) {\n    if (!val) return rawCoords; // could not find tensor\n  }\n\n  // augment iris: adds additional 5 keypoints per eye\n  const irisLDepth = constants.LANDMARKS_REFINEMENT_LEFT_EYE_CONFIG.reduce((prev, curr) => prev += rawCoords[curr][2], 0) / constants.LANDMARKS_REFINEMENT_LEFT_EYE_CONFIG.length; // get average z-coord for iris\n  for (let i = 0; i < t.irisL.length / 2; i++) rawCoords.push([t.irisL[2 * i + 0], t.irisL[2 * i + 1], irisLDepth]);\n  const irisRDepth = constants.LANDMARKS_REFINEMENT_RIGHT_EYE_CONFIG.reduce((prev, curr) => prev += rawCoords[curr][2], 0) / constants.LANDMARKS_REFINEMENT_RIGHT_EYE_CONFIG.length; // get average z-coord for iris\n  for (let i = 0; i < t.irisR.length / 2; i++) rawCoords.push([t.irisR[2 * i + 0], t.irisR[2 * i + 1], irisRDepth]);\n\n  // augment eyes: replaces eye keypoints based on heuristic mapping\n  for (let i = 0; i < t.eyeL.length / 2; i++) rawCoords[constants.LANDMARKS_REFINEMENT_LEFT_EYE_CONFIG[i]] = [t.eyeL[2 * i + 0], t.eyeL[2 * i + 1], rawCoords[constants.LANDMARKS_REFINEMENT_LEFT_EYE_CONFIG[i]][2]];\n  for (let i = 0; i < t.eyeR.length / 2; i++) rawCoords[constants.LANDMARKS_REFINEMENT_RIGHT_EYE_CONFIG[i]] = [t.eyeR[2 * i + 0], t.eyeR[2 * i + 1], rawCoords[constants.LANDMARKS_REFINEMENT_RIGHT_EYE_CONFIG[i]][2]];\n\n  // augment lips: replaces eye keypoints based on heuristic mapping\n  for (let i = 0; i < t.lips.length / 2; i++) rawCoords[constants.LANDMARKS_REFINEMENT_LIPS_CONFIG[i]] = [t.lips[2 * i + 0], t.lips[2 * i + 1], rawCoords[constants.LANDMARKS_REFINEMENT_LIPS_CONFIG[i]][2]];\n\n  return rawCoords;\n}\n", "/**\n * BlazeFace, FaceMesh & Iris model implementation\n *\n * Based on:\n * - [**MediaPipe BlazeFace**](https://drive.google.com/file/d/1f39lSzU5Oq-j_OXgS67KfN5wNsoeAZ4V/view)\n * - Facial Spacial Geometry: [**MediaPipe FaceMesh**](https://drive.google.com/file/d/1VFC_wIpw4O7xBOiTgUldl79d9LA-LsnA/view)\n * - Eye Iris Details: [**MediaPipe Iris**](https://drive.google.com/file/d/1bsWbokp9AklH2ANjCfmjqEzzxO1CNbMu/view)\n */\n\nimport { log, now } from '../util/util';\nimport { loadModel } from '../tfjs/load';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport * as blazeface from './blazeface';\nimport * as util from './facemeshutil';\nimport * as coords from './facemeshcoords';\nimport * as iris from './iris';\nimport * as attention from './attention';\nimport { histogramEqualization } from '../image/enhance';\nimport { env } from '../util/env';\nimport type { GraphModel, Tensor } from '../tfjs/types';\nimport type { FaceResult, FaceLandmark, Point } from '../result';\nimport type { Config } from '../config';\n\ninterface DetectBox { startPoint: Point, endPoint: Point, landmarks: Point[], confidence: number }\n\nconst cache = {\n  boxes: [] as DetectBox[],\n  skipped: Number.MAX_SAFE_INTEGER,\n  timestamp: 0,\n};\n\nlet model: GraphModel | null = null;\nlet inputSize = 0;\n\nexport async function predict(input: Tensor, config: Config): Promise<FaceResult[]> {\n  if (!model?.['executor']) return [];\n  // reset cached boxes\n  const skipTime = (config.face.detector?.skipTime || 0) > (now() - cache.timestamp);\n  const skipFrame = cache.skipped < (config.face.detector?.skipFrames || 0);\n  if (!config.skipAllowed || !skipTime || !skipFrame || cache.boxes.length === 0) {\n    cache.boxes = await blazeface.getBoxes(input, config); // get results from blazeface detector\n    cache.timestamp = now();\n    cache.skipped = 0;\n  } else {\n    cache.skipped++;\n  }\n  const faces: FaceResult[] = [];\n  const newCache: DetectBox[] = [];\n  let id = 0;\n  const size = inputSize;\n  for (let i = 0; i < cache.boxes.length; i++) {\n    const box = cache.boxes[i];\n    let angle = 0;\n    let rotationMatrix;\n    const face: FaceResult = { // init face result\n      id: id++,\n      mesh: [],\n      meshRaw: [],\n      box: [0, 0, 0, 0],\n      boxRaw: [0, 0, 0, 0],\n      score: 0,\n      boxScore: 0,\n      faceScore: 0,\n      // contoursRaw: [],\n      // contours: [],\n      annotations: {} as Record<FaceLandmark, Point[]>,\n    };\n\n    // optional rotation correction based on detector data only if mesh is disabled otherwise perform it later when we have more accurate mesh data. if no rotation correction this function performs crop\n    [angle, rotationMatrix, face.tensor] = util.correctFaceRotation(config.face.detector?.rotation, box, input, config.face.mesh?.enabled ? inputSize : blazeface.size());\n    if (config.filter.equalization) {\n      const equilized = face.tensor ? await histogramEqualization(face.tensor) : undefined;\n      tf.dispose(face.tensor);\n      if (equilized) face.tensor = equilized;\n    }\n    face.boxScore = Math.round(100 * box.confidence) / 100;\n    if (!config.face.mesh?.enabled) { // mesh not enabled, return resuts from detector only\n      face.box = util.clampBox(box, input);\n      face.boxRaw = util.getRawBox(box, input);\n      face.score = face.boxScore;\n      face.mesh = box.landmarks.map((pt) => [\n        ((box.startPoint[0] + box.endPoint[0])) / 2 + ((box.endPoint[0] + box.startPoint[0]) * pt[0] / blazeface.size()),\n        ((box.startPoint[1] + box.endPoint[1])) / 2 + ((box.endPoint[1] + box.startPoint[1]) * pt[1] / blazeface.size()),\n      ]);\n      face.meshRaw = face.mesh.map((pt) => [pt[0] / (input.shape[2] || 0), pt[1] / (input.shape[1] || 0), (pt[2] || 0) / size]);\n      for (const key of Object.keys(coords.blazeFaceLandmarks)) {\n        face.annotations[key] = [face.mesh[coords.blazeFaceLandmarks[key] as number]]; // add annotations\n      }\n    } else if (!model) { // mesh enabled, but not loaded\n      if (config.debug) log('face mesh detection requested, but model is not loaded');\n    } else { // mesh enabled\n      if (config.face.attention?.enabled && !env.kernels.includes('atan2')) {\n        config.face.attention.enabled = false;\n        tf.dispose(face.tensor);\n        return faces;\n      }\n      const results = model.execute(face.tensor as Tensor) as Tensor[];\n      const confidenceT = results.find((t) => t.shape[t.shape.length - 1] === 1) as Tensor;\n      const faceConfidence = await confidenceT.data();\n      face.faceScore = Math.round(100 * faceConfidence[0]) / 100;\n      if (face.faceScore < (config.face.detector?.minConfidence || 1)) { // low confidence in detected mesh\n        box.confidence = face.faceScore; // reset confidence of cached box\n        if (config.face.mesh.keepInvalid) {\n          face.box = util.clampBox(box, input);\n          face.boxRaw = util.getRawBox(box, input);\n          face.score = face.boxScore;\n          face.mesh = box.landmarks.map((pt) => [\n            ((box.startPoint[0] + box.endPoint[0])) / 2 + ((box.endPoint[0] + box.startPoint[0]) * pt[0] / blazeface.size()),\n            ((box.startPoint[1] + box.endPoint[1])) / 2 + ((box.endPoint[1] + box.startPoint[1]) * pt[1] / blazeface.size()),\n          ]);\n          face.meshRaw = face.mesh.map((pt) => [pt[0] / (input.shape[2] || 1), pt[1] / (input.shape[1] || 1), (pt[2] || 0) / size]);\n          for (const key of Object.keys(coords.blazeFaceLandmarks)) {\n            face.annotations[key] = [face.mesh[coords.blazeFaceLandmarks[key] as number]]; // add annotations\n          }\n        }\n      } else {\n        const meshT = results.find((t) => t.shape[t.shape.length - 1] === 1404) as Tensor;\n        const coordsReshaped = tf.reshape(meshT, [-1, 3]);\n        let rawCoords = await coordsReshaped.array();\n        tf.dispose(coordsReshaped);\n        if (config.face.attention?.enabled) {\n          rawCoords = await attention.augment(rawCoords, results); // augment iris results using attention model results\n        } else if (config.face.iris?.enabled) {\n          rawCoords = await iris.augmentIris(rawCoords, face.tensor, inputSize); // run iris model and augment results\n        }\n        face.mesh = util.transformRawCoords(rawCoords, box, angle, rotationMatrix, inputSize); // get processed mesh\n        face.meshRaw = face.mesh.map((pt) => [pt[0] / (input.shape[2] || 0), pt[1] / (input.shape[1] || 0), (pt[2] || 0) / size]);\n        for (const key of Object.keys(coords.meshAnnotations)) face.annotations[key] = coords.meshAnnotations[key].map((index) => face.mesh[index]); // add annotations\n        face.score = face.faceScore;\n        const calculatedBox = { ...util.calculateFaceBox(face.mesh, box), confidence: box.confidence, landmarks: box.landmarks };\n        face.box = util.clampBox(calculatedBox, input);\n        face.boxRaw = util.getRawBox(calculatedBox, input);\n        /*\n        const contoursT = results.find((t) => t.shape[t.shape.length - 1] === 266) as Tensor;\n        const contoursData = contoursT && await contoursT.data(); // 133 x 2d points\n        face.contoursRaw = [];\n        for (let j = 0; j < contoursData.length / 2; j++) face.contoursRaw.push([contoursData[2 * j + 0] / inputSize, contoursData[2 * j + 1] / inputSize]);\n        face.contours = face.contoursRaw.map((c) => [Math.trunc((input.shape[2] || 1) * c[0]), Math.trunc((input.shape[1] || 1) * c[1])]);\n        */\n        newCache.push(calculatedBox);\n      }\n      tf.dispose(results);\n    }\n    if (face.score > (config.face.detector?.minConfidence || 1)) faces.push(face);\n    else tf.dispose(face.tensor);\n  }\n  cache.boxes = newCache; // reset cache\n  return faces;\n}\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (env.initial) model = null;\n  if (config.face.attention?.enabled && model?.['signature']) {\n    if (Object.keys(model?.['signature']?.outputs || {}).length < 6) model = null;\n  }\n  if (!model) {\n    if (config.face.attention?.enabled) model = await loadModel(config.face.attention.modelPath);\n    else model = await loadModel(config.face.mesh?.modelPath);\n  } else if (config.debug) {\n    log('cached model:', model['modelUrl']);\n  }\n  inputSize = (model['executor'] && model?.inputs?.[0].shape) ? model?.inputs?.[0].shape[2] : 256;\n  return model;\n}\n\nexport const triangulation = coords.TRI468;\nexport const uvmap = coords.UV468;\n", "/**\n * FaceRes model implementation\n *\n * Returns Age, Gender, Descriptor\n * Implements Face simmilarity function\n *\n * Based on: [**HSE-FaceRes**](https://github.com/HSE-asavchenko/HSE_FaceRec_tf)\n */\n\nimport { log, now } from '../util/util';\nimport { env } from '../util/env';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport { constants } from '../tfjs/constants';\nimport type { Tensor, GraphModel } from '../tfjs/types';\nimport type { Config } from '../config';\nimport type { Gender, Race } from '../result';\n\nexport interface FaceRes { age: number, gender: Gender, genderScore: number, descriptor: number[], race?: { score: number, race: Race }[] }\n\nlet model: GraphModel | null;\nconst last: FaceRes[] = [];\n\nlet lastTime = 0;\nlet lastCount = 0;\nlet skipped = Number.MAX_SAFE_INTEGER;\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (env.initial) model = null;\n  if (!model) model = await loadModel(config.face.description?.modelPath);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n\nexport function enhance(input): Tensor {\n  const tensor = (input.image || input.tensor || input) as Tensor; // input received from detector is already normalized to 0..1, input is also assumed to be straightened\n  if (!model?.inputs[0].shape) return tensor; // model has no shape so no point continuing\n  const crop: Tensor = tf.image.resizeBilinear(tensor, [model.inputs[0].shape[2], model.inputs[0].shape[1]], false);\n  const norm: Tensor = tf.mul(crop, constants.tf255);\n  tf.dispose(crop);\n  return norm;\n  /*\n  // do a tight crop of image and resize it to fit the model\n  const box = [[0.05, 0.15, 0.85, 0.85]]; // empyrical values for top, left, bottom, right\n  const crop = (tensor.shape.length === 3)\n    ? tf.image.cropAndResize(tf.expandDims(tensor, 0), box, [0], [model.inputs[0].shape[2], model.inputs[0].shape[1]]) // add batch dimension if missing\n    : tf.image.cropAndResize(tensor, box, [0], [model.inputs[0].shape[2], model.inputs[0].shape[1]]);\n  */\n  /*\n  // convert to black&white to avoid colorization impact\n  const rgb = [0.2989, 0.5870, 0.1140]; // factors for red/green/blue colors when converting to grayscale: https://www.mathworks.com/help/matlab/ref/rgb2gray.html\n  const [red, green, blue] = tf.split(crop, 3, 3);\n  const redNorm = tf.mul(red, rgb[0]);\n  const greenNorm = tf.mul(green, rgb[1]);\n  const blueNorm = tf.mul(blue, rgb[2]);\n  const grayscale = tf.addN([redNorm, greenNorm, blueNorm]);\n  const merge = tf.stack([grayscale, grayscale, grayscale], 3).squeeze(4);\n  */\n}\n\nexport async function predict(image: Tensor, config: Config, idx: number, count: number): Promise<FaceRes> {\n  const obj: FaceRes = {\n    age: 0 as number,\n    gender: 'unknown' as Gender,\n    genderScore: 0 as number,\n    descriptor: [] as number[],\n  };\n  if (!model?.['executor']) return obj;\n  const skipFrame = skipped < (config.face.description?.skipFrames || 0);\n  const skipTime = (config.face.description?.skipTime || 0) > (now() - lastTime);\n  if (config.skipAllowed && skipFrame && skipTime && (lastCount === count) && (last?.[idx]?.age > 0) && (last?.[idx]?.genderScore > 0)) {\n    skipped++;\n    return last[idx];\n  }\n  skipped = 0;\n  return new Promise(async (resolve) => {\n    if (config.face.description?.enabled) {\n      const enhanced = enhance(image);\n      const resT = model?.execute(enhanced) as Tensor[];\n      lastTime = now();\n      tf.dispose(enhanced);\n      const genderT = resT.find((t) => t.shape[1] === 1) as Tensor;\n      const gender = await genderT.data();\n      const confidence = Math.trunc(200 * Math.abs((gender[0] - 0.5))) / 100;\n      if (confidence > (config.face.description.minConfidence || 0)) {\n        obj.gender = gender[0] <= 0.5 ? 'female' : 'male';\n        obj.genderScore = Math.min(0.99, confidence);\n      }\n      const argmax = tf.argMax(resT.find((t) => t.shape[1] === 100), 1);\n      const ageIdx: number = (await argmax.data())[0];\n      tf.dispose(argmax);\n      const ageT = resT.find((t) => t.shape[1] === 100) as Tensor;\n      const all = await ageT.data();\n      obj.age = Math.round(all[ageIdx - 1] > all[ageIdx + 1] ? 10 * ageIdx - 100 * all[ageIdx - 1] : 10 * ageIdx + 100 * all[ageIdx + 1]) / 10;\n\n      if (Number.isNaN(gender[0]) || Number.isNaN(all[0])) log('faceres error:', { model, result: resT });\n\n      const desc = resT.find((t) => t.shape[1] === 1024);\n      // const reshape = desc.reshape([128, 8]); // reshape large 1024-element descriptor to 128 x 8\n      // const reduce = reshape.logSumExp(1); // reduce 2nd dimension by calculating logSumExp on it which leaves us with 128-element descriptor\n      const descriptor = desc ? await desc.data() : [] as number[];\n      obj.descriptor = Array.from(descriptor);\n      resT.forEach((t) => tf.dispose(t));\n    }\n    last[idx] = obj;\n    lastCount = count;\n    resolve(obj);\n  });\n}\n", "import * as tf from '../../dist/tfjs.esm.js';\nimport type { Point } from '../result';\n\nexport function getBoxSize(box) {\n  return [\n    Math.abs(box.endPoint[0] - box.startPoint[0]),\n    Math.abs(box.endPoint[1] - box.startPoint[1]),\n  ];\n}\n\nexport function getBoxCenter(box) {\n  return [\n    box.startPoint[0] + (box.endPoint[0] - box.startPoint[0]) / 2,\n    box.startPoint[1] + (box.endPoint[1] - box.startPoint[1]) / 2,\n  ];\n}\n\nexport function cutBoxFromImageAndResize(box, image, cropSize) {\n  const h = image.shape[1];\n  const w = image.shape[2];\n  const boxes = [[\n    box.startPoint[1] / h,\n    box.startPoint[0] / w,\n    box.endPoint[1] / h,\n    box.endPoint[0] / w,\n  ]];\n  return tf.image.cropAndResize(image, boxes, [0], cropSize);\n}\n\nexport function scaleBoxCoordinates(box, factor) {\n  const startPoint = [box.startPoint[0] * factor[0], box.startPoint[1] * factor[1]] as Point;\n  const endPoint = [box.endPoint[0] * factor[0], box.endPoint[1] * factor[1]] as Point;\n  const palmLandmarks = box.palmLandmarks.map((coord) => {\n    const scaledCoord = [coord[0] * factor[0], coord[1] * factor[1]];\n    return scaledCoord;\n  });\n  return { startPoint, endPoint, palmLandmarks, confidence: box.confidence };\n}\n\nexport function enlargeBox(box, factor = 1.5) {\n  const center = getBoxCenter(box);\n  const size = getBoxSize(box);\n  const newHalfSize = [factor * size[0] / 2, factor * size[1] / 2];\n  const startPoint = [center[0] - newHalfSize[0], center[1] - newHalfSize[1]] as Point;\n  const endPoint = [center[0] + newHalfSize[0], center[1] + newHalfSize[1]] as Point;\n  return { startPoint, endPoint, palmLandmarks: box.palmLandmarks };\n}\n\nexport function squarifyBox(box) {\n  const centers = getBoxCenter(box);\n  const size = getBoxSize(box);\n  const maxEdge = Math.max(...size);\n  const halfSize = maxEdge / 2;\n  const startPoint = [centers[0] - halfSize, centers[1] - halfSize] as Point;\n  const endPoint = [centers[0] + halfSize, centers[1] + halfSize] as Point;\n  return { startPoint, endPoint, palmLandmarks: box.palmLandmarks };\n}\n\nexport function shiftBox(box, shiftFactor) {\n  const boxSize = [\n    box.endPoint[0] - box.startPoint[0],\n    box.endPoint[1] - box.startPoint[1],\n  ];\n  const shiftVector = [boxSize[0] * shiftFactor[0], boxSize[1] * shiftFactor[1]];\n  const startPoint = [box.startPoint[0] + shiftVector[0], box.startPoint[1] + shiftVector[1]] as Point;\n  const endPoint = [box.endPoint[0] + shiftVector[0], box.endPoint[1] + shiftVector[1]] as Point;\n  return { startPoint, endPoint, palmLandmarks: box.palmLandmarks };\n}\n\nexport function normalizeRadians(angle) {\n  return angle - 2 * Math.PI * Math.floor((angle + Math.PI) / (2 * Math.PI));\n}\n\nexport function computeRotation(point1, point2) {\n  const radians = Math.PI / 2 - Math.atan2(-(point2[1] - point1[1]), point2[0] - point1[0]);\n  return normalizeRadians(radians);\n}\n\nexport const buildTranslationMatrix = (x, y) => [[1, 0, x], [0, 1, y], [0, 0, 1]];\n\nexport function dot(v1, v2) {\n  let product = 0;\n  for (let i = 0; i < v1.length; i++) {\n    product += v1[i] * v2[i];\n  }\n  return product;\n}\n\nexport function getColumnFrom2DArr(arr, columnIndex) {\n  const column: number[] = [];\n  for (let i = 0; i < arr.length; i++) {\n    column.push(arr[i][columnIndex]);\n  }\n  return column;\n}\n\nexport function multiplyTransformMatrices(mat1, mat2) {\n  const product: number[][] = [];\n  const size = mat1.length;\n  for (let row = 0; row < size; row++) {\n    product.push([]);\n    for (let col = 0; col < size; col++) {\n      product[row].push(dot(mat1[row], getColumnFrom2DArr(mat2, col)));\n    }\n  }\n  return product;\n}\n\nexport function buildRotationMatrix(rotation, center) {\n  const cosA = Math.cos(rotation);\n  const sinA = Math.sin(rotation);\n  const rotationMatrix = [[cosA, -sinA, 0], [sinA, cosA, 0], [0, 0, 1]];\n  const translationMatrix = buildTranslationMatrix(center[0], center[1]);\n  const translationTimesRotation = multiplyTransformMatrices(translationMatrix, rotationMatrix);\n  const negativeTranslationMatrix = buildTranslationMatrix(-center[0], -center[1]);\n  return multiplyTransformMatrices(translationTimesRotation, negativeTranslationMatrix);\n}\n\nexport function invertTransformMatrix(matrix) {\n  const rotationComponent = [[matrix[0][0], matrix[1][0]], [matrix[0][1], matrix[1][1]]];\n  const translationComponent = [matrix[0][2], matrix[1][2]];\n  const invertedTranslation = [\n    -dot(rotationComponent[0], translationComponent),\n    -dot(rotationComponent[1], translationComponent),\n  ];\n  return [\n    rotationComponent[0].concat(invertedTranslation[0]),\n    rotationComponent[1].concat(invertedTranslation[1]),\n    [0, 0, 1],\n  ];\n}\n\nexport function rotatePoint(homogeneousCoordinate, rotationMatrix) {\n  return [\n    dot(homogeneousCoordinate, rotationMatrix[0]),\n    dot(homogeneousCoordinate, rotationMatrix[1]),\n  ];\n}\n", "/**\n * HandPose model implementation constants\n * See `handpose.ts` for entry point\n */\n\nexport const anchors = [\n  { x: 0.015625, y: 0.015625 },\n  { x: 0.015625, y: 0.015625 },\n  { x: 0.046875, y: 0.015625 },\n  { x: 0.046875, y: 0.015625 },\n  { x: 0.078125, y: 0.015625 },\n  { x: 0.078125, y: 0.015625 },\n  { x: 0.109375, y: 0.015625 },\n  { x: 0.109375, y: 0.015625 },\n  { x: 0.140625, y: 0.015625 },\n  { x: 0.140625, y: 0.015625 },\n  { x: 0.171875, y: 0.015625 },\n  { x: 0.171875, y: 0.015625 },\n  { x: 0.203125, y: 0.015625 },\n  { x: 0.203125, y: 0.015625 },\n  { x: 0.234375, y: 0.015625 },\n  { x: 0.234375, y: 0.015625 },\n  { x: 0.265625, y: 0.015625 },\n  { x: 0.265625, y: 0.015625 },\n  { x: 0.296875, y: 0.015625 },\n  { x: 0.296875, y: 0.015625 },\n  { x: 0.328125, y: 0.015625 },\n  { x: 0.328125, y: 0.015625 },\n  { x: 0.359375, y: 0.015625 },\n  { x: 0.359375, y: 0.015625 },\n  { x: 0.390625, y: 0.015625 },\n  { x: 0.390625, y: 0.015625 },\n  { x: 0.421875, y: 0.015625 },\n  { x: 0.421875, y: 0.015625 },\n  { x: 0.453125, y: 0.015625 },\n  { x: 0.453125, y: 0.015625 },\n  { x: 0.484375, y: 0.015625 },\n  { x: 0.484375, y: 0.015625 },\n  { x: 0.515625, y: 0.015625 },\n  { x: 0.515625, y: 0.015625 },\n  { x: 0.546875, y: 0.015625 },\n  { x: 0.546875, y: 0.015625 },\n  { x: 0.578125, y: 0.015625 },\n  { x: 0.578125, y: 0.015625 },\n  { x: 0.609375, y: 0.015625 },\n  { x: 0.609375, y: 0.015625 },\n  { x: 0.640625, y: 0.015625 },\n  { x: 0.640625, y: 0.015625 },\n  { x: 0.671875, y: 0.015625 },\n  { x: 0.671875, y: 0.015625 },\n  { x: 0.703125, y: 0.015625 },\n  { x: 0.703125, y: 0.015625 },\n  { x: 0.734375, y: 0.015625 },\n  { x: 0.734375, y: 0.015625 },\n  { x: 0.765625, y: 0.015625 },\n  { x: 0.765625, y: 0.015625 },\n  { x: 0.796875, y: 0.015625 },\n  { x: 0.796875, y: 0.015625 },\n  { x: 0.828125, y: 0.015625 },\n  { x: 0.828125, y: 0.015625 },\n  { x: 0.859375, y: 0.015625 },\n  { x: 0.859375, y: 0.015625 },\n  { x: 0.890625, y: 0.015625 },\n  { x: 0.890625, y: 0.015625 },\n  { x: 0.921875, y: 0.015625 },\n  { x: 0.921875, y: 0.015625 },\n  { x: 0.953125, y: 0.015625 },\n  { x: 0.953125, y: 0.015625 },\n  { x: 0.984375, y: 0.015625 },\n  { x: 0.984375, y: 0.015625 },\n  { x: 0.015625, y: 0.046875 },\n  { x: 0.015625, y: 0.046875 },\n  { x: 0.046875, y: 0.046875 },\n  { x: 0.046875, y: 0.046875 },\n  { x: 0.078125, y: 0.046875 },\n  { x: 0.078125, y: 0.046875 },\n  { x: 0.109375, y: 0.046875 },\n  { x: 0.109375, y: 0.046875 },\n  { x: 0.140625, y: 0.046875 },\n  { x: 0.140625, y: 0.046875 },\n  { x: 0.171875, y: 0.046875 },\n  { x: 0.171875, y: 0.046875 },\n  { x: 0.203125, y: 0.046875 },\n  { x: 0.203125, y: 0.046875 },\n  { x: 0.234375, y: 0.046875 },\n  { x: 0.234375, y: 0.046875 },\n  { x: 0.265625, y: 0.046875 },\n  { x: 0.265625, y: 0.046875 },\n  { x: 0.296875, y: 0.046875 },\n  { x: 0.296875, y: 0.046875 },\n  { x: 0.328125, y: 0.046875 },\n  { x: 0.328125, y: 0.046875 },\n  { x: 0.359375, y: 0.046875 },\n  { x: 0.359375, y: 0.046875 },\n  { x: 0.390625, y: 0.046875 },\n  { x: 0.390625, y: 0.046875 },\n  { x: 0.421875, y: 0.046875 },\n  { x: 0.421875, y: 0.046875 },\n  { x: 0.453125, y: 0.046875 },\n  { x: 0.453125, y: 0.046875 },\n  { x: 0.484375, y: 0.046875 },\n  { x: 0.484375, y: 0.046875 },\n  { x: 0.515625, y: 0.046875 },\n  { x: 0.515625, y: 0.046875 },\n  { x: 0.546875, y: 0.046875 },\n  { x: 0.546875, y: 0.046875 },\n  { x: 0.578125, y: 0.046875 },\n  { x: 0.578125, y: 0.046875 },\n  { x: 0.609375, y: 0.046875 },\n  { x: 0.609375, y: 0.046875 },\n  { x: 0.640625, y: 0.046875 },\n  { x: 0.640625, y: 0.046875 },\n  { x: 0.671875, y: 0.046875 },\n  { x: 0.671875, y: 0.046875 },\n  { x: 0.703125, y: 0.046875 },\n  { x: 0.703125, y: 0.046875 },\n  { x: 0.734375, y: 0.046875 },\n  { x: 0.734375, y: 0.046875 },\n  { x: 0.765625, y: 0.046875 },\n  { x: 0.765625, y: 0.046875 },\n  { x: 0.796875, y: 0.046875 },\n  { x: 0.796875, y: 0.046875 },\n  { x: 0.828125, y: 0.046875 },\n  { x: 0.828125, y: 0.046875 },\n  { x: 0.859375, y: 0.046875 },\n  { x: 0.859375, y: 0.046875 },\n  { x: 0.890625, y: 0.046875 },\n  { x: 0.890625, y: 0.046875 },\n  { x: 0.921875, y: 0.046875 },\n  { x: 0.921875, y: 0.046875 },\n  { x: 0.953125, y: 0.046875 },\n  { x: 0.953125, y: 0.046875 },\n  { x: 0.984375, y: 0.046875 },\n  { x: 0.984375, y: 0.046875 },\n  { x: 0.015625, y: 0.078125 },\n  { x: 0.015625, y: 0.078125 },\n  { x: 0.046875, y: 0.078125 },\n  { x: 0.046875, y: 0.078125 },\n  { x: 0.078125, y: 0.078125 },\n  { x: 0.078125, y: 0.078125 },\n  { x: 0.109375, y: 0.078125 },\n  { x: 0.109375, y: 0.078125 },\n  { x: 0.140625, y: 0.078125 },\n  { x: 0.140625, y: 0.078125 },\n  { x: 0.171875, y: 0.078125 },\n  { x: 0.171875, y: 0.078125 },\n  { x: 0.203125, y: 0.078125 },\n  { x: 0.203125, y: 0.078125 },\n  { x: 0.234375, y: 0.078125 },\n  { x: 0.234375, y: 0.078125 },\n  { x: 0.265625, y: 0.078125 },\n  { x: 0.265625, y: 0.078125 },\n  { x: 0.296875, y: 0.078125 },\n  { x: 0.296875, y: 0.078125 },\n  { x: 0.328125, y: 0.078125 },\n  { x: 0.328125, y: 0.078125 },\n  { x: 0.359375, y: 0.078125 },\n  { x: 0.359375, y: 0.078125 },\n  { x: 0.390625, y: 0.078125 },\n  { x: 0.390625, y: 0.078125 },\n  { x: 0.421875, y: 0.078125 },\n  { x: 0.421875, y: 0.078125 },\n  { x: 0.453125, y: 0.078125 },\n  { x: 0.453125, y: 0.078125 },\n  { x: 0.484375, y: 0.078125 },\n  { x: 0.484375, y: 0.078125 },\n  { x: 0.515625, y: 0.078125 },\n  { x: 0.515625, y: 0.078125 },\n  { x: 0.546875, y: 0.078125 },\n  { x: 0.546875, y: 0.078125 },\n  { x: 0.578125, y: 0.078125 },\n  { x: 0.578125, y: 0.078125 },\n  { x: 0.609375, y: 0.078125 },\n  { x: 0.609375, y: 0.078125 },\n  { x: 0.640625, y: 0.078125 },\n  { x: 0.640625, y: 0.078125 },\n  { x: 0.671875, y: 0.078125 },\n  { x: 0.671875, y: 0.078125 },\n  { x: 0.703125, y: 0.078125 },\n  { x: 0.703125, y: 0.078125 },\n  { x: 0.734375, y: 0.078125 },\n  { x: 0.734375, y: 0.078125 },\n  { x: 0.765625, y: 0.078125 },\n  { x: 0.765625, y: 0.078125 },\n  { x: 0.796875, y: 0.078125 },\n  { x: 0.796875, y: 0.078125 },\n  { x: 0.828125, y: 0.078125 },\n  { x: 0.828125, y: 0.078125 },\n  { x: 0.859375, y: 0.078125 },\n  { x: 0.859375, y: 0.078125 },\n  { x: 0.890625, y: 0.078125 },\n  { x: 0.890625, y: 0.078125 },\n  { x: 0.921875, y: 0.078125 },\n  { x: 0.921875, y: 0.078125 },\n  { x: 0.953125, y: 0.078125 },\n  { x: 0.953125, y: 0.078125 },\n  { x: 0.984375, y: 0.078125 },\n  { x: 0.984375, y: 0.078125 },\n  { x: 0.015625, y: 0.109375 },\n  { x: 0.015625, y: 0.109375 },\n  { x: 0.046875, y: 0.109375 },\n  { x: 0.046875, y: 0.109375 },\n  { x: 0.078125, y: 0.109375 },\n  { x: 0.078125, y: 0.109375 },\n  { x: 0.109375, y: 0.109375 },\n  { x: 0.109375, y: 0.109375 },\n  { x: 0.140625, y: 0.109375 },\n  { x: 0.140625, y: 0.109375 },\n  { x: 0.171875, y: 0.109375 },\n  { x: 0.171875, y: 0.109375 },\n  { x: 0.203125, y: 0.109375 },\n  { x: 0.203125, y: 0.109375 },\n  { x: 0.234375, y: 0.109375 },\n  { x: 0.234375, y: 0.109375 },\n  { x: 0.265625, y: 0.109375 },\n  { x: 0.265625, y: 0.109375 },\n  { x: 0.296875, y: 0.109375 },\n  { x: 0.296875, y: 0.109375 },\n  { x: 0.328125, y: 0.109375 },\n  { x: 0.328125, y: 0.109375 },\n  { x: 0.359375, y: 0.109375 },\n  { x: 0.359375, y: 0.109375 },\n  { x: 0.390625, y: 0.109375 },\n  { x: 0.390625, y: 0.109375 },\n  { x: 0.421875, y: 0.109375 },\n  { x: 0.421875, y: 0.109375 },\n  { x: 0.453125, y: 0.109375 },\n  { x: 0.453125, y: 0.109375 },\n  { x: 0.484375, y: 0.109375 },\n  { x: 0.484375, y: 0.109375 },\n  { x: 0.515625, y: 0.109375 },\n  { x: 0.515625, y: 0.109375 },\n  { x: 0.546875, y: 0.109375 },\n  { x: 0.546875, y: 0.109375 },\n  { x: 0.578125, y: 0.109375 },\n  { x: 0.578125, y: 0.109375 },\n  { x: 0.609375, y: 0.109375 },\n  { x: 0.609375, y: 0.109375 },\n  { x: 0.640625, y: 0.109375 },\n  { x: 0.640625, y: 0.109375 },\n  { x: 0.671875, y: 0.109375 },\n  { x: 0.671875, y: 0.109375 },\n  { x: 0.703125, y: 0.109375 },\n  { x: 0.703125, y: 0.109375 },\n  { x: 0.734375, y: 0.109375 },\n  { x: 0.734375, y: 0.109375 },\n  { x: 0.765625, y: 0.109375 },\n  { x: 0.765625, y: 0.109375 },\n  { x: 0.796875, y: 0.109375 },\n  { x: 0.796875, y: 0.109375 },\n  { x: 0.828125, y: 0.109375 },\n  { x: 0.828125, y: 0.109375 },\n  { x: 0.859375, y: 0.109375 },\n  { x: 0.859375, y: 0.109375 },\n  { x: 0.890625, y: 0.109375 },\n  { x: 0.890625, y: 0.109375 },\n  { x: 0.921875, y: 0.109375 },\n  { x: 0.921875, y: 0.109375 },\n  { x: 0.953125, y: 0.109375 },\n  { x: 0.953125, y: 0.109375 },\n  { x: 0.984375, y: 0.109375 },\n  { x: 0.984375, y: 0.109375 },\n  { x: 0.015625, y: 0.140625 },\n  { x: 0.015625, y: 0.140625 },\n  { x: 0.046875, y: 0.140625 },\n  { x: 0.046875, y: 0.140625 },\n  { x: 0.078125, y: 0.140625 },\n  { x: 0.078125, y: 0.140625 },\n  { x: 0.109375, y: 0.140625 },\n  { x: 0.109375, y: 0.140625 },\n  { x: 0.140625, y: 0.140625 },\n  { x: 0.140625, y: 0.140625 },\n  { x: 0.171875, y: 0.140625 },\n  { x: 0.171875, y: 0.140625 },\n  { x: 0.203125, y: 0.140625 },\n  { x: 0.203125, y: 0.140625 },\n  { x: 0.234375, y: 0.140625 },\n  { x: 0.234375, y: 0.140625 },\n  { x: 0.265625, y: 0.140625 },\n  { x: 0.265625, y: 0.140625 },\n  { x: 0.296875, y: 0.140625 },\n  { x: 0.296875, y: 0.140625 },\n  { x: 0.328125, y: 0.140625 },\n  { x: 0.328125, y: 0.140625 },\n  { x: 0.359375, y: 0.140625 },\n  { x: 0.359375, y: 0.140625 },\n  { x: 0.390625, y: 0.140625 },\n  { x: 0.390625, y: 0.140625 },\n  { x: 0.421875, y: 0.140625 },\n  { x: 0.421875, y: 0.140625 },\n  { x: 0.453125, y: 0.140625 },\n  { x: 0.453125, y: 0.140625 },\n  { x: 0.484375, y: 0.140625 },\n  { x: 0.484375, y: 0.140625 },\n  { x: 0.515625, y: 0.140625 },\n  { x: 0.515625, y: 0.140625 },\n  { x: 0.546875, y: 0.140625 },\n  { x: 0.546875, y: 0.140625 },\n  { x: 0.578125, y: 0.140625 },\n  { x: 0.578125, y: 0.140625 },\n  { x: 0.609375, y: 0.140625 },\n  { x: 0.609375, y: 0.140625 },\n  { x: 0.640625, y: 0.140625 },\n  { x: 0.640625, y: 0.140625 },\n  { x: 0.671875, y: 0.140625 },\n  { x: 0.671875, y: 0.140625 },\n  { x: 0.703125, y: 0.140625 },\n  { x: 0.703125, y: 0.140625 },\n  { x: 0.734375, y: 0.140625 },\n  { x: 0.734375, y: 0.140625 },\n  { x: 0.765625, y: 0.140625 },\n  { x: 0.765625, y: 0.140625 },\n  { x: 0.796875, y: 0.140625 },\n  { x: 0.796875, y: 0.140625 },\n  { x: 0.828125, y: 0.140625 },\n  { x: 0.828125, y: 0.140625 },\n  { x: 0.859375, y: 0.140625 },\n  { x: 0.859375, y: 0.140625 },\n  { x: 0.890625, y: 0.140625 },\n  { x: 0.890625, y: 0.140625 },\n  { x: 0.921875, y: 0.140625 },\n  { x: 0.921875, y: 0.140625 },\n  { x: 0.953125, y: 0.140625 },\n  { x: 0.953125, y: 0.140625 },\n  { x: 0.984375, y: 0.140625 },\n  { x: 0.984375, y: 0.140625 },\n  { x: 0.015625, y: 0.171875 },\n  { x: 0.015625, y: 0.171875 },\n  { x: 0.046875, y: 0.171875 },\n  { x: 0.046875, y: 0.171875 },\n  { x: 0.078125, y: 0.171875 },\n  { x: 0.078125, y: 0.171875 },\n  { x: 0.109375, y: 0.171875 },\n  { x: 0.109375, y: 0.171875 },\n  { x: 0.140625, y: 0.171875 },\n  { x: 0.140625, y: 0.171875 },\n  { x: 0.171875, y: 0.171875 },\n  { x: 0.171875, y: 0.171875 },\n  { x: 0.203125, y: 0.171875 },\n  { x: 0.203125, y: 0.171875 },\n  { x: 0.234375, y: 0.171875 },\n  { x: 0.234375, y: 0.171875 },\n  { x: 0.265625, y: 0.171875 },\n  { x: 0.265625, y: 0.171875 },\n  { x: 0.296875, y: 0.171875 },\n  { x: 0.296875, y: 0.171875 },\n  { x: 0.328125, y: 0.171875 },\n  { x: 0.328125, y: 0.171875 },\n  { x: 0.359375, y: 0.171875 },\n  { x: 0.359375, y: 0.171875 },\n  { x: 0.390625, y: 0.171875 },\n  { x: 0.390625, y: 0.171875 },\n  { x: 0.421875, y: 0.171875 },\n  { x: 0.421875, y: 0.171875 },\n  { x: 0.453125, y: 0.171875 },\n  { x: 0.453125, y: 0.171875 },\n  { x: 0.484375, y: 0.171875 },\n  { x: 0.484375, y: 0.171875 },\n  { x: 0.515625, y: 0.171875 },\n  { x: 0.515625, y: 0.171875 },\n  { x: 0.546875, y: 0.171875 },\n  { x: 0.546875, y: 0.171875 },\n  { x: 0.578125, y: 0.171875 },\n  { x: 0.578125, y: 0.171875 },\n  { x: 0.609375, y: 0.171875 },\n  { x: 0.609375, y: 0.171875 },\n  { x: 0.640625, y: 0.171875 },\n  { x: 0.640625, y: 0.171875 },\n  { x: 0.671875, y: 0.171875 },\n  { x: 0.671875, y: 0.171875 },\n  { x: 0.703125, y: 0.171875 },\n  { x: 0.703125, y: 0.171875 },\n  { x: 0.734375, y: 0.171875 },\n  { x: 0.734375, y: 0.171875 },\n  { x: 0.765625, y: 0.171875 },\n  { x: 0.765625, y: 0.171875 },\n  { x: 0.796875, y: 0.171875 },\n  { x: 0.796875, y: 0.171875 },\n  { x: 0.828125, y: 0.171875 },\n  { x: 0.828125, y: 0.171875 },\n  { x: 0.859375, y: 0.171875 },\n  { x: 0.859375, y: 0.171875 },\n  { x: 0.890625, y: 0.171875 },\n  { x: 0.890625, y: 0.171875 },\n  { x: 0.921875, y: 0.171875 },\n  { x: 0.921875, y: 0.171875 },\n  { x: 0.953125, y: 0.171875 },\n  { x: 0.953125, y: 0.171875 },\n  { x: 0.984375, y: 0.171875 },\n  { x: 0.984375, y: 0.171875 },\n  { x: 0.015625, y: 0.203125 },\n  { x: 0.015625, y: 0.203125 },\n  { x: 0.046875, y: 0.203125 },\n  { x: 0.046875, y: 0.203125 },\n  { x: 0.078125, y: 0.203125 },\n  { x: 0.078125, y: 0.203125 },\n  { x: 0.109375, y: 0.203125 },\n  { x: 0.109375, y: 0.203125 },\n  { x: 0.140625, y: 0.203125 },\n  { x: 0.140625, y: 0.203125 },\n  { x: 0.171875, y: 0.203125 },\n  { x: 0.171875, y: 0.203125 },\n  { x: 0.203125, y: 0.203125 },\n  { x: 0.203125, y: 0.203125 },\n  { x: 0.234375, y: 0.203125 },\n  { x: 0.234375, y: 0.203125 },\n  { x: 0.265625, y: 0.203125 },\n  { x: 0.265625, y: 0.203125 },\n  { x: 0.296875, y: 0.203125 },\n  { x: 0.296875, y: 0.203125 },\n  { x: 0.328125, y: 0.203125 },\n  { x: 0.328125, y: 0.203125 },\n  { x: 0.359375, y: 0.203125 },\n  { x: 0.359375, y: 0.203125 },\n  { x: 0.390625, y: 0.203125 },\n  { x: 0.390625, y: 0.203125 },\n  { x: 0.421875, y: 0.203125 },\n  { x: 0.421875, y: 0.203125 },\n  { x: 0.453125, y: 0.203125 },\n  { x: 0.453125, y: 0.203125 },\n  { x: 0.484375, y: 0.203125 },\n  { x: 0.484375, y: 0.203125 },\n  { x: 0.515625, y: 0.203125 },\n  { x: 0.515625, y: 0.203125 },\n  { x: 0.546875, y: 0.203125 },\n  { x: 0.546875, y: 0.203125 },\n  { x: 0.578125, y: 0.203125 },\n  { x: 0.578125, y: 0.203125 },\n  { x: 0.609375, y: 0.203125 },\n  { x: 0.609375, y: 0.203125 },\n  { x: 0.640625, y: 0.203125 },\n  { x: 0.640625, y: 0.203125 },\n  { x: 0.671875, y: 0.203125 },\n  { x: 0.671875, y: 0.203125 },\n  { x: 0.703125, y: 0.203125 },\n  { x: 0.703125, y: 0.203125 },\n  { x: 0.734375, y: 0.203125 },\n  { x: 0.734375, y: 0.203125 },\n  { x: 0.765625, y: 0.203125 },\n  { x: 0.765625, y: 0.203125 },\n  { x: 0.796875, y: 0.203125 },\n  { x: 0.796875, y: 0.203125 },\n  { x: 0.828125, y: 0.203125 },\n  { x: 0.828125, y: 0.203125 },\n  { x: 0.859375, y: 0.203125 },\n  { x: 0.859375, y: 0.203125 },\n  { x: 0.890625, y: 0.203125 },\n  { x: 0.890625, y: 0.203125 },\n  { x: 0.921875, y: 0.203125 },\n  { x: 0.921875, y: 0.203125 },\n  { x: 0.953125, y: 0.203125 },\n  { x: 0.953125, y: 0.203125 },\n  { x: 0.984375, y: 0.203125 },\n  { x: 0.984375, y: 0.203125 },\n  { x: 0.015625, y: 0.234375 },\n  { x: 0.015625, y: 0.234375 },\n  { x: 0.046875, y: 0.234375 },\n  { x: 0.046875, y: 0.234375 },\n  { x: 0.078125, y: 0.234375 },\n  { x: 0.078125, y: 0.234375 },\n  { x: 0.109375, y: 0.234375 },\n  { x: 0.109375, y: 0.234375 },\n  { x: 0.140625, y: 0.234375 },\n  { x: 0.140625, y: 0.234375 },\n  { x: 0.171875, y: 0.234375 },\n  { x: 0.171875, y: 0.234375 },\n  { x: 0.203125, y: 0.234375 },\n  { x: 0.203125, y: 0.234375 },\n  { x: 0.234375, y: 0.234375 },\n  { x: 0.234375, y: 0.234375 },\n  { x: 0.265625, y: 0.234375 },\n  { x: 0.265625, y: 0.234375 },\n  { x: 0.296875, y: 0.234375 },\n  { x: 0.296875, y: 0.234375 },\n  { x: 0.328125, y: 0.234375 },\n  { x: 0.328125, y: 0.234375 },\n  { x: 0.359375, y: 0.234375 },\n  { x: 0.359375, y: 0.234375 },\n  { x: 0.390625, y: 0.234375 },\n  { x: 0.390625, y: 0.234375 },\n  { x: 0.421875, y: 0.234375 },\n  { x: 0.421875, y: 0.234375 },\n  { x: 0.453125, y: 0.234375 },\n  { x: 0.453125, y: 0.234375 },\n  { x: 0.484375, y: 0.234375 },\n  { x: 0.484375, y: 0.234375 },\n  { x: 0.515625, y: 0.234375 },\n  { x: 0.515625, y: 0.234375 },\n  { x: 0.546875, y: 0.234375 },\n  { x: 0.546875, y: 0.234375 },\n  { x: 0.578125, y: 0.234375 },\n  { x: 0.578125, y: 0.234375 },\n  { x: 0.609375, y: 0.234375 },\n  { x: 0.609375, y: 0.234375 },\n  { x: 0.640625, y: 0.234375 },\n  { x: 0.640625, y: 0.234375 },\n  { x: 0.671875, y: 0.234375 },\n  { x: 0.671875, y: 0.234375 },\n  { x: 0.703125, y: 0.234375 },\n  { x: 0.703125, y: 0.234375 },\n  { x: 0.734375, y: 0.234375 },\n  { x: 0.734375, y: 0.234375 },\n  { x: 0.765625, y: 0.234375 },\n  { x: 0.765625, y: 0.234375 },\n  { x: 0.796875, y: 0.234375 },\n  { x: 0.796875, y: 0.234375 },\n  { x: 0.828125, y: 0.234375 },\n  { x: 0.828125, y: 0.234375 },\n  { x: 0.859375, y: 0.234375 },\n  { x: 0.859375, y: 0.234375 },\n  { x: 0.890625, y: 0.234375 },\n  { x: 0.890625, y: 0.234375 },\n  { x: 0.921875, y: 0.234375 },\n  { x: 0.921875, y: 0.234375 },\n  { x: 0.953125, y: 0.234375 },\n  { x: 0.953125, y: 0.234375 },\n  { x: 0.984375, y: 0.234375 },\n  { x: 0.984375, y: 0.234375 },\n  { x: 0.015625, y: 0.265625 },\n  { x: 0.015625, y: 0.265625 },\n  { x: 0.046875, y: 0.265625 },\n  { x: 0.046875, y: 0.265625 },\n  { x: 0.078125, y: 0.265625 },\n  { x: 0.078125, y: 0.265625 },\n  { x: 0.109375, y: 0.265625 },\n  { x: 0.109375, y: 0.265625 },\n  { x: 0.140625, y: 0.265625 },\n  { x: 0.140625, y: 0.265625 },\n  { x: 0.171875, y: 0.265625 },\n  { x: 0.171875, y: 0.265625 },\n  { x: 0.203125, y: 0.265625 },\n  { x: 0.203125, y: 0.265625 },\n  { x: 0.234375, y: 0.265625 },\n  { x: 0.234375, y: 0.265625 },\n  { x: 0.265625, y: 0.265625 },\n  { x: 0.265625, y: 0.265625 },\n  { x: 0.296875, y: 0.265625 },\n  { x: 0.296875, y: 0.265625 },\n  { x: 0.328125, y: 0.265625 },\n  { x: 0.328125, y: 0.265625 },\n  { x: 0.359375, y: 0.265625 },\n  { x: 0.359375, y: 0.265625 },\n  { x: 0.390625, y: 0.265625 },\n  { x: 0.390625, y: 0.265625 },\n  { x: 0.421875, y: 0.265625 },\n  { x: 0.421875, y: 0.265625 },\n  { x: 0.453125, y: 0.265625 },\n  { x: 0.453125, y: 0.265625 },\n  { x: 0.484375, y: 0.265625 },\n  { x: 0.484375, y: 0.265625 },\n  { x: 0.515625, y: 0.265625 },\n  { x: 0.515625, y: 0.265625 },\n  { x: 0.546875, y: 0.265625 },\n  { x: 0.546875, y: 0.265625 },\n  { x: 0.578125, y: 0.265625 },\n  { x: 0.578125, y: 0.265625 },\n  { x: 0.609375, y: 0.265625 },\n  { x: 0.609375, y: 0.265625 },\n  { x: 0.640625, y: 0.265625 },\n  { x: 0.640625, y: 0.265625 },\n  { x: 0.671875, y: 0.265625 },\n  { x: 0.671875, y: 0.265625 },\n  { x: 0.703125, y: 0.265625 },\n  { x: 0.703125, y: 0.265625 },\n  { x: 0.734375, y: 0.265625 },\n  { x: 0.734375, y: 0.265625 },\n  { x: 0.765625, y: 0.265625 },\n  { x: 0.765625, y: 0.265625 },\n  { x: 0.796875, y: 0.265625 },\n  { x: 0.796875, y: 0.265625 },\n  { x: 0.828125, y: 0.265625 },\n  { x: 0.828125, y: 0.265625 },\n  { x: 0.859375, y: 0.265625 },\n  { x: 0.859375, y: 0.265625 },\n  { x: 0.890625, y: 0.265625 },\n  { x: 0.890625, y: 0.265625 },\n  { x: 0.921875, y: 0.265625 },\n  { x: 0.921875, y: 0.265625 },\n  { x: 0.953125, y: 0.265625 },\n  { x: 0.953125, y: 0.265625 },\n  { x: 0.984375, y: 0.265625 },\n  { x: 0.984375, y: 0.265625 },\n  { x: 0.015625, y: 0.296875 },\n  { x: 0.015625, y: 0.296875 },\n  { x: 0.046875, y: 0.296875 },\n  { x: 0.046875, y: 0.296875 },\n  { x: 0.078125, y: 0.296875 },\n  { x: 0.078125, y: 0.296875 },\n  { x: 0.109375, y: 0.296875 },\n  { x: 0.109375, y: 0.296875 },\n  { x: 0.140625, y: 0.296875 },\n  { x: 0.140625, y: 0.296875 },\n  { x: 0.171875, y: 0.296875 },\n  { x: 0.171875, y: 0.296875 },\n  { x: 0.203125, y: 0.296875 },\n  { x: 0.203125, y: 0.296875 },\n  { x: 0.234375, y: 0.296875 },\n  { x: 0.234375, y: 0.296875 },\n  { x: 0.265625, y: 0.296875 },\n  { x: 0.265625, y: 0.296875 },\n  { x: 0.296875, y: 0.296875 },\n  { x: 0.296875, y: 0.296875 },\n  { x: 0.328125, y: 0.296875 },\n  { x: 0.328125, y: 0.296875 },\n  { x: 0.359375, y: 0.296875 },\n  { x: 0.359375, y: 0.296875 },\n  { x: 0.390625, y: 0.296875 },\n  { x: 0.390625, y: 0.296875 },\n  { x: 0.421875, y: 0.296875 },\n  { x: 0.421875, y: 0.296875 },\n  { x: 0.453125, y: 0.296875 },\n  { x: 0.453125, y: 0.296875 },\n  { x: 0.484375, y: 0.296875 },\n  { x: 0.484375, y: 0.296875 },\n  { x: 0.515625, y: 0.296875 },\n  { x: 0.515625, y: 0.296875 },\n  { x: 0.546875, y: 0.296875 },\n  { x: 0.546875, y: 0.296875 },\n  { x: 0.578125, y: 0.296875 },\n  { x: 0.578125, y: 0.296875 },\n  { x: 0.609375, y: 0.296875 },\n  { x: 0.609375, y: 0.296875 },\n  { x: 0.640625, y: 0.296875 },\n  { x: 0.640625, y: 0.296875 },\n  { x: 0.671875, y: 0.296875 },\n  { x: 0.671875, y: 0.296875 },\n  { x: 0.703125, y: 0.296875 },\n  { x: 0.703125, y: 0.296875 },\n  { x: 0.734375, y: 0.296875 },\n  { x: 0.734375, y: 0.296875 },\n  { x: 0.765625, y: 0.296875 },\n  { x: 0.765625, y: 0.296875 },\n  { x: 0.796875, y: 0.296875 },\n  { x: 0.796875, y: 0.296875 },\n  { x: 0.828125, y: 0.296875 },\n  { x: 0.828125, y: 0.296875 },\n  { x: 0.859375, y: 0.296875 },\n  { x: 0.859375, y: 0.296875 },\n  { x: 0.890625, y: 0.296875 },\n  { x: 0.890625, y: 0.296875 },\n  { x: 0.921875, y: 0.296875 },\n  { x: 0.921875, y: 0.296875 },\n  { x: 0.953125, y: 0.296875 },\n  { x: 0.953125, y: 0.296875 },\n  { x: 0.984375, y: 0.296875 },\n  { x: 0.984375, y: 0.296875 },\n  { x: 0.015625, y: 0.328125 },\n  { x: 0.015625, y: 0.328125 },\n  { x: 0.046875, y: 0.328125 },\n  { x: 0.046875, y: 0.328125 },\n  { x: 0.078125, y: 0.328125 },\n  { x: 0.078125, y: 0.328125 },\n  { x: 0.109375, y: 0.328125 },\n  { x: 0.109375, y: 0.328125 },\n  { x: 0.140625, y: 0.328125 },\n  { x: 0.140625, y: 0.328125 },\n  { x: 0.171875, y: 0.328125 },\n  { x: 0.171875, y: 0.328125 },\n  { x: 0.203125, y: 0.328125 },\n  { x: 0.203125, y: 0.328125 },\n  { x: 0.234375, y: 0.328125 },\n  { x: 0.234375, y: 0.328125 },\n  { x: 0.265625, y: 0.328125 },\n  { x: 0.265625, y: 0.328125 },\n  { x: 0.296875, y: 0.328125 },\n  { x: 0.296875, y: 0.328125 },\n  { x: 0.328125, y: 0.328125 },\n  { x: 0.328125, y: 0.328125 },\n  { x: 0.359375, y: 0.328125 },\n  { x: 0.359375, y: 0.328125 },\n  { x: 0.390625, y: 0.328125 },\n  { x: 0.390625, y: 0.328125 },\n  { x: 0.421875, y: 0.328125 },\n  { x: 0.421875, y: 0.328125 },\n  { x: 0.453125, y: 0.328125 },\n  { x: 0.453125, y: 0.328125 },\n  { x: 0.484375, y: 0.328125 },\n  { x: 0.484375, y: 0.328125 },\n  { x: 0.515625, y: 0.328125 },\n  { x: 0.515625, y: 0.328125 },\n  { x: 0.546875, y: 0.328125 },\n  { x: 0.546875, y: 0.328125 },\n  { x: 0.578125, y: 0.328125 },\n  { x: 0.578125, y: 0.328125 },\n  { x: 0.609375, y: 0.328125 },\n  { x: 0.609375, y: 0.328125 },\n  { x: 0.640625, y: 0.328125 },\n  { x: 0.640625, y: 0.328125 },\n  { x: 0.671875, y: 0.328125 },\n  { x: 0.671875, y: 0.328125 },\n  { x: 0.703125, y: 0.328125 },\n  { x: 0.703125, y: 0.328125 },\n  { x: 0.734375, y: 0.328125 },\n  { x: 0.734375, y: 0.328125 },\n  { x: 0.765625, y: 0.328125 },\n  { x: 0.765625, y: 0.328125 },\n  { x: 0.796875, y: 0.328125 },\n  { x: 0.796875, y: 0.328125 },\n  { x: 0.828125, y: 0.328125 },\n  { x: 0.828125, y: 0.328125 },\n  { x: 0.859375, y: 0.328125 },\n  { x: 0.859375, y: 0.328125 },\n  { x: 0.890625, y: 0.328125 },\n  { x: 0.890625, y: 0.328125 },\n  { x: 0.921875, y: 0.328125 },\n  { x: 0.921875, y: 0.328125 },\n  { x: 0.953125, y: 0.328125 },\n  { x: 0.953125, y: 0.328125 },\n  { x: 0.984375, y: 0.328125 },\n  { x: 0.984375, y: 0.328125 },\n  { x: 0.015625, y: 0.359375 },\n  { x: 0.015625, y: 0.359375 },\n  { x: 0.046875, y: 0.359375 },\n  { x: 0.046875, y: 0.359375 },\n  { x: 0.078125, y: 0.359375 },\n  { x: 0.078125, y: 0.359375 },\n  { x: 0.109375, y: 0.359375 },\n  { x: 0.109375, y: 0.359375 },\n  { x: 0.140625, y: 0.359375 },\n  { x: 0.140625, y: 0.359375 },\n  { x: 0.171875, y: 0.359375 },\n  { x: 0.171875, y: 0.359375 },\n  { x: 0.203125, y: 0.359375 },\n  { x: 0.203125, y: 0.359375 },\n  { x: 0.234375, y: 0.359375 },\n  { x: 0.234375, y: 0.359375 },\n  { x: 0.265625, y: 0.359375 },\n  { x: 0.265625, y: 0.359375 },\n  { x: 0.296875, y: 0.359375 },\n  { x: 0.296875, y: 0.359375 },\n  { x: 0.328125, y: 0.359375 },\n  { x: 0.328125, y: 0.359375 },\n  { x: 0.359375, y: 0.359375 },\n  { x: 0.359375, y: 0.359375 },\n  { x: 0.390625, y: 0.359375 },\n  { x: 0.390625, y: 0.359375 },\n  { x: 0.421875, y: 0.359375 },\n  { x: 0.421875, y: 0.359375 },\n  { x: 0.453125, y: 0.359375 },\n  { x: 0.453125, y: 0.359375 },\n  { x: 0.484375, y: 0.359375 },\n  { x: 0.484375, y: 0.359375 },\n  { x: 0.515625, y: 0.359375 },\n  { x: 0.515625, y: 0.359375 },\n  { x: 0.546875, y: 0.359375 },\n  { x: 0.546875, y: 0.359375 },\n  { x: 0.578125, y: 0.359375 },\n  { x: 0.578125, y: 0.359375 },\n  { x: 0.609375, y: 0.359375 },\n  { x: 0.609375, y: 0.359375 },\n  { x: 0.640625, y: 0.359375 },\n  { x: 0.640625, y: 0.359375 },\n  { x: 0.671875, y: 0.359375 },\n  { x: 0.671875, y: 0.359375 },\n  { x: 0.703125, y: 0.359375 },\n  { x: 0.703125, y: 0.359375 },\n  { x: 0.734375, y: 0.359375 },\n  { x: 0.734375, y: 0.359375 },\n  { x: 0.765625, y: 0.359375 },\n  { x: 0.765625, y: 0.359375 },\n  { x: 0.796875, y: 0.359375 },\n  { x: 0.796875, y: 0.359375 },\n  { x: 0.828125, y: 0.359375 },\n  { x: 0.828125, y: 0.359375 },\n  { x: 0.859375, y: 0.359375 },\n  { x: 0.859375, y: 0.359375 },\n  { x: 0.890625, y: 0.359375 },\n  { x: 0.890625, y: 0.359375 },\n  { x: 0.921875, y: 0.359375 },\n  { x: 0.921875, y: 0.359375 },\n  { x: 0.953125, y: 0.359375 },\n  { x: 0.953125, y: 0.359375 },\n  { x: 0.984375, y: 0.359375 },\n  { x: 0.984375, y: 0.359375 },\n  { x: 0.015625, y: 0.390625 },\n  { x: 0.015625, y: 0.390625 },\n  { x: 0.046875, y: 0.390625 },\n  { x: 0.046875, y: 0.390625 },\n  { x: 0.078125, y: 0.390625 },\n  { x: 0.078125, y: 0.390625 },\n  { x: 0.109375, y: 0.390625 },\n  { x: 0.109375, y: 0.390625 },\n  { x: 0.140625, y: 0.390625 },\n  { x: 0.140625, y: 0.390625 },\n  { x: 0.171875, y: 0.390625 },\n  { x: 0.171875, y: 0.390625 },\n  { x: 0.203125, y: 0.390625 },\n  { x: 0.203125, y: 0.390625 },\n  { x: 0.234375, y: 0.390625 },\n  { x: 0.234375, y: 0.390625 },\n  { x: 0.265625, y: 0.390625 },\n  { x: 0.265625, y: 0.390625 },\n  { x: 0.296875, y: 0.390625 },\n  { x: 0.296875, y: 0.390625 },\n  { x: 0.328125, y: 0.390625 },\n  { x: 0.328125, y: 0.390625 },\n  { x: 0.359375, y: 0.390625 },\n  { x: 0.359375, y: 0.390625 },\n  { x: 0.390625, y: 0.390625 },\n  { x: 0.390625, y: 0.390625 },\n  { x: 0.421875, y: 0.390625 },\n  { x: 0.421875, y: 0.390625 },\n  { x: 0.453125, y: 0.390625 },\n  { x: 0.453125, y: 0.390625 },\n  { x: 0.484375, y: 0.390625 },\n  { x: 0.484375, y: 0.390625 },\n  { x: 0.515625, y: 0.390625 },\n  { x: 0.515625, y: 0.390625 },\n  { x: 0.546875, y: 0.390625 },\n  { x: 0.546875, y: 0.390625 },\n  { x: 0.578125, y: 0.390625 },\n  { x: 0.578125, y: 0.390625 },\n  { x: 0.609375, y: 0.390625 },\n  { x: 0.609375, y: 0.390625 },\n  { x: 0.640625, y: 0.390625 },\n  { x: 0.640625, y: 0.390625 },\n  { x: 0.671875, y: 0.390625 },\n  { x: 0.671875, y: 0.390625 },\n  { x: 0.703125, y: 0.390625 },\n  { x: 0.703125, y: 0.390625 },\n  { x: 0.734375, y: 0.390625 },\n  { x: 0.734375, y: 0.390625 },\n  { x: 0.765625, y: 0.390625 },\n  { x: 0.765625, y: 0.390625 },\n  { x: 0.796875, y: 0.390625 },\n  { x: 0.796875, y: 0.390625 },\n  { x: 0.828125, y: 0.390625 },\n  { x: 0.828125, y: 0.390625 },\n  { x: 0.859375, y: 0.390625 },\n  { x: 0.859375, y: 0.390625 },\n  { x: 0.890625, y: 0.390625 },\n  { x: 0.890625, y: 0.390625 },\n  { x: 0.921875, y: 0.390625 },\n  { x: 0.921875, y: 0.390625 },\n  { x: 0.953125, y: 0.390625 },\n  { x: 0.953125, y: 0.390625 },\n  { x: 0.984375, y: 0.390625 },\n  { x: 0.984375, y: 0.390625 },\n  { x: 0.015625, y: 0.421875 },\n  { x: 0.015625, y: 0.421875 },\n  { x: 0.046875, y: 0.421875 },\n  { x: 0.046875, y: 0.421875 },\n  { x: 0.078125, y: 0.421875 },\n  { x: 0.078125, y: 0.421875 },\n  { x: 0.109375, y: 0.421875 },\n  { x: 0.109375, y: 0.421875 },\n  { x: 0.140625, y: 0.421875 },\n  { x: 0.140625, y: 0.421875 },\n  { x: 0.171875, y: 0.421875 },\n  { x: 0.171875, y: 0.421875 },\n  { x: 0.203125, y: 0.421875 },\n  { x: 0.203125, y: 0.421875 },\n  { x: 0.234375, y: 0.421875 },\n  { x: 0.234375, y: 0.421875 },\n  { x: 0.265625, y: 0.421875 },\n  { x: 0.265625, y: 0.421875 },\n  { x: 0.296875, y: 0.421875 },\n  { x: 0.296875, y: 0.421875 },\n  { x: 0.328125, y: 0.421875 },\n  { x: 0.328125, y: 0.421875 },\n  { x: 0.359375, y: 0.421875 },\n  { x: 0.359375, y: 0.421875 },\n  { x: 0.390625, y: 0.421875 },\n  { x: 0.390625, y: 0.421875 },\n  { x: 0.421875, y: 0.421875 },\n  { x: 0.421875, y: 0.421875 },\n  { x: 0.453125, y: 0.421875 },\n  { x: 0.453125, y: 0.421875 },\n  { x: 0.484375, y: 0.421875 },\n  { x: 0.484375, y: 0.421875 },\n  { x: 0.515625, y: 0.421875 },\n  { x: 0.515625, y: 0.421875 },\n  { x: 0.546875, y: 0.421875 },\n  { x: 0.546875, y: 0.421875 },\n  { x: 0.578125, y: 0.421875 },\n  { x: 0.578125, y: 0.421875 },\n  { x: 0.609375, y: 0.421875 },\n  { x: 0.609375, y: 0.421875 },\n  { x: 0.640625, y: 0.421875 },\n  { x: 0.640625, y: 0.421875 },\n  { x: 0.671875, y: 0.421875 },\n  { x: 0.671875, y: 0.421875 },\n  { x: 0.703125, y: 0.421875 },\n  { x: 0.703125, y: 0.421875 },\n  { x: 0.734375, y: 0.421875 },\n  { x: 0.734375, y: 0.421875 },\n  { x: 0.765625, y: 0.421875 },\n  { x: 0.765625, y: 0.421875 },\n  { x: 0.796875, y: 0.421875 },\n  { x: 0.796875, y: 0.421875 },\n  { x: 0.828125, y: 0.421875 },\n  { x: 0.828125, y: 0.421875 },\n  { x: 0.859375, y: 0.421875 },\n  { x: 0.859375, y: 0.421875 },\n  { x: 0.890625, y: 0.421875 },\n  { x: 0.890625, y: 0.421875 },\n  { x: 0.921875, y: 0.421875 },\n  { x: 0.921875, y: 0.421875 },\n  { x: 0.953125, y: 0.421875 },\n  { x: 0.953125, y: 0.421875 },\n  { x: 0.984375, y: 0.421875 },\n  { x: 0.984375, y: 0.421875 },\n  { x: 0.015625, y: 0.453125 },\n  { x: 0.015625, y: 0.453125 },\n  { x: 0.046875, y: 0.453125 },\n  { x: 0.046875, y: 0.453125 },\n  { x: 0.078125, y: 0.453125 },\n  { x: 0.078125, y: 0.453125 },\n  { x: 0.109375, y: 0.453125 },\n  { x: 0.109375, y: 0.453125 },\n  { x: 0.140625, y: 0.453125 },\n  { x: 0.140625, y: 0.453125 },\n  { x: 0.171875, y: 0.453125 },\n  { x: 0.171875, y: 0.453125 },\n  { x: 0.203125, y: 0.453125 },\n  { x: 0.203125, y: 0.453125 },\n  { x: 0.234375, y: 0.453125 },\n  { x: 0.234375, y: 0.453125 },\n  { x: 0.265625, y: 0.453125 },\n  { x: 0.265625, y: 0.453125 },\n  { x: 0.296875, y: 0.453125 },\n  { x: 0.296875, y: 0.453125 },\n  { x: 0.328125, y: 0.453125 },\n  { x: 0.328125, y: 0.453125 },\n  { x: 0.359375, y: 0.453125 },\n  { x: 0.359375, y: 0.453125 },\n  { x: 0.390625, y: 0.453125 },\n  { x: 0.390625, y: 0.453125 },\n  { x: 0.421875, y: 0.453125 },\n  { x: 0.421875, y: 0.453125 },\n  { x: 0.453125, y: 0.453125 },\n  { x: 0.453125, y: 0.453125 },\n  { x: 0.484375, y: 0.453125 },\n  { x: 0.484375, y: 0.453125 },\n  { x: 0.515625, y: 0.453125 },\n  { x: 0.515625, y: 0.453125 },\n  { x: 0.546875, y: 0.453125 },\n  { x: 0.546875, y: 0.453125 },\n  { x: 0.578125, y: 0.453125 },\n  { x: 0.578125, y: 0.453125 },\n  { x: 0.609375, y: 0.453125 },\n  { x: 0.609375, y: 0.453125 },\n  { x: 0.640625, y: 0.453125 },\n  { x: 0.640625, y: 0.453125 },\n  { x: 0.671875, y: 0.453125 },\n  { x: 0.671875, y: 0.453125 },\n  { x: 0.703125, y: 0.453125 },\n  { x: 0.703125, y: 0.453125 },\n  { x: 0.734375, y: 0.453125 },\n  { x: 0.734375, y: 0.453125 },\n  { x: 0.765625, y: 0.453125 },\n  { x: 0.765625, y: 0.453125 },\n  { x: 0.796875, y: 0.453125 },\n  { x: 0.796875, y: 0.453125 },\n  { x: 0.828125, y: 0.453125 },\n  { x: 0.828125, y: 0.453125 },\n  { x: 0.859375, y: 0.453125 },\n  { x: 0.859375, y: 0.453125 },\n  { x: 0.890625, y: 0.453125 },\n  { x: 0.890625, y: 0.453125 },\n  { x: 0.921875, y: 0.453125 },\n  { x: 0.921875, y: 0.453125 },\n  { x: 0.953125, y: 0.453125 },\n  { x: 0.953125, y: 0.453125 },\n  { x: 0.984375, y: 0.453125 },\n  { x: 0.984375, y: 0.453125 },\n  { x: 0.015625, y: 0.484375 },\n  { x: 0.015625, y: 0.484375 },\n  { x: 0.046875, y: 0.484375 },\n  { x: 0.046875, y: 0.484375 },\n  { x: 0.078125, y: 0.484375 },\n  { x: 0.078125, y: 0.484375 },\n  { x: 0.109375, y: 0.484375 },\n  { x: 0.109375, y: 0.484375 },\n  { x: 0.140625, y: 0.484375 },\n  { x: 0.140625, y: 0.484375 },\n  { x: 0.171875, y: 0.484375 },\n  { x: 0.171875, y: 0.484375 },\n  { x: 0.203125, y: 0.484375 },\n  { x: 0.203125, y: 0.484375 },\n  { x: 0.234375, y: 0.484375 },\n  { x: 0.234375, y: 0.484375 },\n  { x: 0.265625, y: 0.484375 },\n  { x: 0.265625, y: 0.484375 },\n  { x: 0.296875, y: 0.484375 },\n  { x: 0.296875, y: 0.484375 },\n  { x: 0.328125, y: 0.484375 },\n  { x: 0.328125, y: 0.484375 },\n  { x: 0.359375, y: 0.484375 },\n  { x: 0.359375, y: 0.484375 },\n  { x: 0.390625, y: 0.484375 },\n  { x: 0.390625, y: 0.484375 },\n  { x: 0.421875, y: 0.484375 },\n  { x: 0.421875, y: 0.484375 },\n  { x: 0.453125, y: 0.484375 },\n  { x: 0.453125, y: 0.484375 },\n  { x: 0.484375, y: 0.484375 },\n  { x: 0.484375, y: 0.484375 },\n  { x: 0.515625, y: 0.484375 },\n  { x: 0.515625, y: 0.484375 },\n  { x: 0.546875, y: 0.484375 },\n  { x: 0.546875, y: 0.484375 },\n  { x: 0.578125, y: 0.484375 },\n  { x: 0.578125, y: 0.484375 },\n  { x: 0.609375, y: 0.484375 },\n  { x: 0.609375, y: 0.484375 },\n  { x: 0.640625, y: 0.484375 },\n  { x: 0.640625, y: 0.484375 },\n  { x: 0.671875, y: 0.484375 },\n  { x: 0.671875, y: 0.484375 },\n  { x: 0.703125, y: 0.484375 },\n  { x: 0.703125, y: 0.484375 },\n  { x: 0.734375, y: 0.484375 },\n  { x: 0.734375, y: 0.484375 },\n  { x: 0.765625, y: 0.484375 },\n  { x: 0.765625, y: 0.484375 },\n  { x: 0.796875, y: 0.484375 },\n  { x: 0.796875, y: 0.484375 },\n  { x: 0.828125, y: 0.484375 },\n  { x: 0.828125, y: 0.484375 },\n  { x: 0.859375, y: 0.484375 },\n  { x: 0.859375, y: 0.484375 },\n  { x: 0.890625, y: 0.484375 },\n  { x: 0.890625, y: 0.484375 },\n  { x: 0.921875, y: 0.484375 },\n  { x: 0.921875, y: 0.484375 },\n  { x: 0.953125, y: 0.484375 },\n  { x: 0.953125, y: 0.484375 },\n  { x: 0.984375, y: 0.484375 },\n  { x: 0.984375, y: 0.484375 },\n  { x: 0.015625, y: 0.515625 },\n  { x: 0.015625, y: 0.515625 },\n  { x: 0.046875, y: 0.515625 },\n  { x: 0.046875, y: 0.515625 },\n  { x: 0.078125, y: 0.515625 },\n  { x: 0.078125, y: 0.515625 },\n  { x: 0.109375, y: 0.515625 },\n  { x: 0.109375, y: 0.515625 },\n  { x: 0.140625, y: 0.515625 },\n  { x: 0.140625, y: 0.515625 },\n  { x: 0.171875, y: 0.515625 },\n  { x: 0.171875, y: 0.515625 },\n  { x: 0.203125, y: 0.515625 },\n  { x: 0.203125, y: 0.515625 },\n  { x: 0.234375, y: 0.515625 },\n  { x: 0.234375, y: 0.515625 },\n  { x: 0.265625, y: 0.515625 },\n  { x: 0.265625, y: 0.515625 },\n  { x: 0.296875, y: 0.515625 },\n  { x: 0.296875, y: 0.515625 },\n  { x: 0.328125, y: 0.515625 },\n  { x: 0.328125, y: 0.515625 },\n  { x: 0.359375, y: 0.515625 },\n  { x: 0.359375, y: 0.515625 },\n  { x: 0.390625, y: 0.515625 },\n  { x: 0.390625, y: 0.515625 },\n  { x: 0.421875, y: 0.515625 },\n  { x: 0.421875, y: 0.515625 },\n  { x: 0.453125, y: 0.515625 },\n  { x: 0.453125, y: 0.515625 },\n  { x: 0.484375, y: 0.515625 },\n  { x: 0.484375, y: 0.515625 },\n  { x: 0.515625, y: 0.515625 },\n  { x: 0.515625, y: 0.515625 },\n  { x: 0.546875, y: 0.515625 },\n  { x: 0.546875, y: 0.515625 },\n  { x: 0.578125, y: 0.515625 },\n  { x: 0.578125, y: 0.515625 },\n  { x: 0.609375, y: 0.515625 },\n  { x: 0.609375, y: 0.515625 },\n  { x: 0.640625, y: 0.515625 },\n  { x: 0.640625, y: 0.515625 },\n  { x: 0.671875, y: 0.515625 },\n  { x: 0.671875, y: 0.515625 },\n  { x: 0.703125, y: 0.515625 },\n  { x: 0.703125, y: 0.515625 },\n  { x: 0.734375, y: 0.515625 },\n  { x: 0.734375, y: 0.515625 },\n  { x: 0.765625, y: 0.515625 },\n  { x: 0.765625, y: 0.515625 },\n  { x: 0.796875, y: 0.515625 },\n  { x: 0.796875, y: 0.515625 },\n  { x: 0.828125, y: 0.515625 },\n  { x: 0.828125, y: 0.515625 },\n  { x: 0.859375, y: 0.515625 },\n  { x: 0.859375, y: 0.515625 },\n  { x: 0.890625, y: 0.515625 },\n  { x: 0.890625, y: 0.515625 },\n  { x: 0.921875, y: 0.515625 },\n  { x: 0.921875, y: 0.515625 },\n  { x: 0.953125, y: 0.515625 },\n  { x: 0.953125, y: 0.515625 },\n  { x: 0.984375, y: 0.515625 },\n  { x: 0.984375, y: 0.515625 },\n  { x: 0.015625, y: 0.546875 },\n  { x: 0.015625, y: 0.546875 },\n  { x: 0.046875, y: 0.546875 },\n  { x: 0.046875, y: 0.546875 },\n  { x: 0.078125, y: 0.546875 },\n  { x: 0.078125, y: 0.546875 },\n  { x: 0.109375, y: 0.546875 },\n  { x: 0.109375, y: 0.546875 },\n  { x: 0.140625, y: 0.546875 },\n  { x: 0.140625, y: 0.546875 },\n  { x: 0.171875, y: 0.546875 },\n  { x: 0.171875, y: 0.546875 },\n  { x: 0.203125, y: 0.546875 },\n  { x: 0.203125, y: 0.546875 },\n  { x: 0.234375, y: 0.546875 },\n  { x: 0.234375, y: 0.546875 },\n  { x: 0.265625, y: 0.546875 },\n  { x: 0.265625, y: 0.546875 },\n  { x: 0.296875, y: 0.546875 },\n  { x: 0.296875, y: 0.546875 },\n  { x: 0.328125, y: 0.546875 },\n  { x: 0.328125, y: 0.546875 },\n  { x: 0.359375, y: 0.546875 },\n  { x: 0.359375, y: 0.546875 },\n  { x: 0.390625, y: 0.546875 },\n  { x: 0.390625, y: 0.546875 },\n  { x: 0.421875, y: 0.546875 },\n  { x: 0.421875, y: 0.546875 },\n  { x: 0.453125, y: 0.546875 },\n  { x: 0.453125, y: 0.546875 },\n  { x: 0.484375, y: 0.546875 },\n  { x: 0.484375, y: 0.546875 },\n  { x: 0.515625, y: 0.546875 },\n  { x: 0.515625, y: 0.546875 },\n  { x: 0.546875, y: 0.546875 },\n  { x: 0.546875, y: 0.546875 },\n  { x: 0.578125, y: 0.546875 },\n  { x: 0.578125, y: 0.546875 },\n  { x: 0.609375, y: 0.546875 },\n  { x: 0.609375, y: 0.546875 },\n  { x: 0.640625, y: 0.546875 },\n  { x: 0.640625, y: 0.546875 },\n  { x: 0.671875, y: 0.546875 },\n  { x: 0.671875, y: 0.546875 },\n  { x: 0.703125, y: 0.546875 },\n  { x: 0.703125, y: 0.546875 },\n  { x: 0.734375, y: 0.546875 },\n  { x: 0.734375, y: 0.546875 },\n  { x: 0.765625, y: 0.546875 },\n  { x: 0.765625, y: 0.546875 },\n  { x: 0.796875, y: 0.546875 },\n  { x: 0.796875, y: 0.546875 },\n  { x: 0.828125, y: 0.546875 },\n  { x: 0.828125, y: 0.546875 },\n  { x: 0.859375, y: 0.546875 },\n  { x: 0.859375, y: 0.546875 },\n  { x: 0.890625, y: 0.546875 },\n  { x: 0.890625, y: 0.546875 },\n  { x: 0.921875, y: 0.546875 },\n  { x: 0.921875, y: 0.546875 },\n  { x: 0.953125, y: 0.546875 },\n  { x: 0.953125, y: 0.546875 },\n  { x: 0.984375, y: 0.546875 },\n  { x: 0.984375, y: 0.546875 },\n  { x: 0.015625, y: 0.578125 },\n  { x: 0.015625, y: 0.578125 },\n  { x: 0.046875, y: 0.578125 },\n  { x: 0.046875, y: 0.578125 },\n  { x: 0.078125, y: 0.578125 },\n  { x: 0.078125, y: 0.578125 },\n  { x: 0.109375, y: 0.578125 },\n  { x: 0.109375, y: 0.578125 },\n  { x: 0.140625, y: 0.578125 },\n  { x: 0.140625, y: 0.578125 },\n  { x: 0.171875, y: 0.578125 },\n  { x: 0.171875, y: 0.578125 },\n  { x: 0.203125, y: 0.578125 },\n  { x: 0.203125, y: 0.578125 },\n  { x: 0.234375, y: 0.578125 },\n  { x: 0.234375, y: 0.578125 },\n  { x: 0.265625, y: 0.578125 },\n  { x: 0.265625, y: 0.578125 },\n  { x: 0.296875, y: 0.578125 },\n  { x: 0.296875, y: 0.578125 },\n  { x: 0.328125, y: 0.578125 },\n  { x: 0.328125, y: 0.578125 },\n  { x: 0.359375, y: 0.578125 },\n  { x: 0.359375, y: 0.578125 },\n  { x: 0.390625, y: 0.578125 },\n  { x: 0.390625, y: 0.578125 },\n  { x: 0.421875, y: 0.578125 },\n  { x: 0.421875, y: 0.578125 },\n  { x: 0.453125, y: 0.578125 },\n  { x: 0.453125, y: 0.578125 },\n  { x: 0.484375, y: 0.578125 },\n  { x: 0.484375, y: 0.578125 },\n  { x: 0.515625, y: 0.578125 },\n  { x: 0.515625, y: 0.578125 },\n  { x: 0.546875, y: 0.578125 },\n  { x: 0.546875, y: 0.578125 },\n  { x: 0.578125, y: 0.578125 },\n  { x: 0.578125, y: 0.578125 },\n  { x: 0.609375, y: 0.578125 },\n  { x: 0.609375, y: 0.578125 },\n  { x: 0.640625, y: 0.578125 },\n  { x: 0.640625, y: 0.578125 },\n  { x: 0.671875, y: 0.578125 },\n  { x: 0.671875, y: 0.578125 },\n  { x: 0.703125, y: 0.578125 },\n  { x: 0.703125, y: 0.578125 },\n  { x: 0.734375, y: 0.578125 },\n  { x: 0.734375, y: 0.578125 },\n  { x: 0.765625, y: 0.578125 },\n  { x: 0.765625, y: 0.578125 },\n  { x: 0.796875, y: 0.578125 },\n  { x: 0.796875, y: 0.578125 },\n  { x: 0.828125, y: 0.578125 },\n  { x: 0.828125, y: 0.578125 },\n  { x: 0.859375, y: 0.578125 },\n  { x: 0.859375, y: 0.578125 },\n  { x: 0.890625, y: 0.578125 },\n  { x: 0.890625, y: 0.578125 },\n  { x: 0.921875, y: 0.578125 },\n  { x: 0.921875, y: 0.578125 },\n  { x: 0.953125, y: 0.578125 },\n  { x: 0.953125, y: 0.578125 },\n  { x: 0.984375, y: 0.578125 },\n  { x: 0.984375, y: 0.578125 },\n  { x: 0.015625, y: 0.609375 },\n  { x: 0.015625, y: 0.609375 },\n  { x: 0.046875, y: 0.609375 },\n  { x: 0.046875, y: 0.609375 },\n  { x: 0.078125, y: 0.609375 },\n  { x: 0.078125, y: 0.609375 },\n  { x: 0.109375, y: 0.609375 },\n  { x: 0.109375, y: 0.609375 },\n  { x: 0.140625, y: 0.609375 },\n  { x: 0.140625, y: 0.609375 },\n  { x: 0.171875, y: 0.609375 },\n  { x: 0.171875, y: 0.609375 },\n  { x: 0.203125, y: 0.609375 },\n  { x: 0.203125, y: 0.609375 },\n  { x: 0.234375, y: 0.609375 },\n  { x: 0.234375, y: 0.609375 },\n  { x: 0.265625, y: 0.609375 },\n  { x: 0.265625, y: 0.609375 },\n  { x: 0.296875, y: 0.609375 },\n  { x: 0.296875, y: 0.609375 },\n  { x: 0.328125, y: 0.609375 },\n  { x: 0.328125, y: 0.609375 },\n  { x: 0.359375, y: 0.609375 },\n  { x: 0.359375, y: 0.609375 },\n  { x: 0.390625, y: 0.609375 },\n  { x: 0.390625, y: 0.609375 },\n  { x: 0.421875, y: 0.609375 },\n  { x: 0.421875, y: 0.609375 },\n  { x: 0.453125, y: 0.609375 },\n  { x: 0.453125, y: 0.609375 },\n  { x: 0.484375, y: 0.609375 },\n  { x: 0.484375, y: 0.609375 },\n  { x: 0.515625, y: 0.609375 },\n  { x: 0.515625, y: 0.609375 },\n  { x: 0.546875, y: 0.609375 },\n  { x: 0.546875, y: 0.609375 },\n  { x: 0.578125, y: 0.609375 },\n  { x: 0.578125, y: 0.609375 },\n  { x: 0.609375, y: 0.609375 },\n  { x: 0.609375, y: 0.609375 },\n  { x: 0.640625, y: 0.609375 },\n  { x: 0.640625, y: 0.609375 },\n  { x: 0.671875, y: 0.609375 },\n  { x: 0.671875, y: 0.609375 },\n  { x: 0.703125, y: 0.609375 },\n  { x: 0.703125, y: 0.609375 },\n  { x: 0.734375, y: 0.609375 },\n  { x: 0.734375, y: 0.609375 },\n  { x: 0.765625, y: 0.609375 },\n  { x: 0.765625, y: 0.609375 },\n  { x: 0.796875, y: 0.609375 },\n  { x: 0.796875, y: 0.609375 },\n  { x: 0.828125, y: 0.609375 },\n  { x: 0.828125, y: 0.609375 },\n  { x: 0.859375, y: 0.609375 },\n  { x: 0.859375, y: 0.609375 },\n  { x: 0.890625, y: 0.609375 },\n  { x: 0.890625, y: 0.609375 },\n  { x: 0.921875, y: 0.609375 },\n  { x: 0.921875, y: 0.609375 },\n  { x: 0.953125, y: 0.609375 },\n  { x: 0.953125, y: 0.609375 },\n  { x: 0.984375, y: 0.609375 },\n  { x: 0.984375, y: 0.609375 },\n  { x: 0.015625, y: 0.640625 },\n  { x: 0.015625, y: 0.640625 },\n  { x: 0.046875, y: 0.640625 },\n  { x: 0.046875, y: 0.640625 },\n  { x: 0.078125, y: 0.640625 },\n  { x: 0.078125, y: 0.640625 },\n  { x: 0.109375, y: 0.640625 },\n  { x: 0.109375, y: 0.640625 },\n  { x: 0.140625, y: 0.640625 },\n  { x: 0.140625, y: 0.640625 },\n  { x: 0.171875, y: 0.640625 },\n  { x: 0.171875, y: 0.640625 },\n  { x: 0.203125, y: 0.640625 },\n  { x: 0.203125, y: 0.640625 },\n  { x: 0.234375, y: 0.640625 },\n  { x: 0.234375, y: 0.640625 },\n  { x: 0.265625, y: 0.640625 },\n  { x: 0.265625, y: 0.640625 },\n  { x: 0.296875, y: 0.640625 },\n  { x: 0.296875, y: 0.640625 },\n  { x: 0.328125, y: 0.640625 },\n  { x: 0.328125, y: 0.640625 },\n  { x: 0.359375, y: 0.640625 },\n  { x: 0.359375, y: 0.640625 },\n  { x: 0.390625, y: 0.640625 },\n  { x: 0.390625, y: 0.640625 },\n  { x: 0.421875, y: 0.640625 },\n  { x: 0.421875, y: 0.640625 },\n  { x: 0.453125, y: 0.640625 },\n  { x: 0.453125, y: 0.640625 },\n  { x: 0.484375, y: 0.640625 },\n  { x: 0.484375, y: 0.640625 },\n  { x: 0.515625, y: 0.640625 },\n  { x: 0.515625, y: 0.640625 },\n  { x: 0.546875, y: 0.640625 },\n  { x: 0.546875, y: 0.640625 },\n  { x: 0.578125, y: 0.640625 },\n  { x: 0.578125, y: 0.640625 },\n  { x: 0.609375, y: 0.640625 },\n  { x: 0.609375, y: 0.640625 },\n  { x: 0.640625, y: 0.640625 },\n  { x: 0.640625, y: 0.640625 },\n  { x: 0.671875, y: 0.640625 },\n  { x: 0.671875, y: 0.640625 },\n  { x: 0.703125, y: 0.640625 },\n  { x: 0.703125, y: 0.640625 },\n  { x: 0.734375, y: 0.640625 },\n  { x: 0.734375, y: 0.640625 },\n  { x: 0.765625, y: 0.640625 },\n  { x: 0.765625, y: 0.640625 },\n  { x: 0.796875, y: 0.640625 },\n  { x: 0.796875, y: 0.640625 },\n  { x: 0.828125, y: 0.640625 },\n  { x: 0.828125, y: 0.640625 },\n  { x: 0.859375, y: 0.640625 },\n  { x: 0.859375, y: 0.640625 },\n  { x: 0.890625, y: 0.640625 },\n  { x: 0.890625, y: 0.640625 },\n  { x: 0.921875, y: 0.640625 },\n  { x: 0.921875, y: 0.640625 },\n  { x: 0.953125, y: 0.640625 },\n  { x: 0.953125, y: 0.640625 },\n  { x: 0.984375, y: 0.640625 },\n  { x: 0.984375, y: 0.640625 },\n  { x: 0.015625, y: 0.671875 },\n  { x: 0.015625, y: 0.671875 },\n  { x: 0.046875, y: 0.671875 },\n  { x: 0.046875, y: 0.671875 },\n  { x: 0.078125, y: 0.671875 },\n  { x: 0.078125, y: 0.671875 },\n  { x: 0.109375, y: 0.671875 },\n  { x: 0.109375, y: 0.671875 },\n  { x: 0.140625, y: 0.671875 },\n  { x: 0.140625, y: 0.671875 },\n  { x: 0.171875, y: 0.671875 },\n  { x: 0.171875, y: 0.671875 },\n  { x: 0.203125, y: 0.671875 },\n  { x: 0.203125, y: 0.671875 },\n  { x: 0.234375, y: 0.671875 },\n  { x: 0.234375, y: 0.671875 },\n  { x: 0.265625, y: 0.671875 },\n  { x: 0.265625, y: 0.671875 },\n  { x: 0.296875, y: 0.671875 },\n  { x: 0.296875, y: 0.671875 },\n  { x: 0.328125, y: 0.671875 },\n  { x: 0.328125, y: 0.671875 },\n  { x: 0.359375, y: 0.671875 },\n  { x: 0.359375, y: 0.671875 },\n  { x: 0.390625, y: 0.671875 },\n  { x: 0.390625, y: 0.671875 },\n  { x: 0.421875, y: 0.671875 },\n  { x: 0.421875, y: 0.671875 },\n  { x: 0.453125, y: 0.671875 },\n  { x: 0.453125, y: 0.671875 },\n  { x: 0.484375, y: 0.671875 },\n  { x: 0.484375, y: 0.671875 },\n  { x: 0.515625, y: 0.671875 },\n  { x: 0.515625, y: 0.671875 },\n  { x: 0.546875, y: 0.671875 },\n  { x: 0.546875, y: 0.671875 },\n  { x: 0.578125, y: 0.671875 },\n  { x: 0.578125, y: 0.671875 },\n  { x: 0.609375, y: 0.671875 },\n  { x: 0.609375, y: 0.671875 },\n  { x: 0.640625, y: 0.671875 },\n  { x: 0.640625, y: 0.671875 },\n  { x: 0.671875, y: 0.671875 },\n  { x: 0.671875, y: 0.671875 },\n  { x: 0.703125, y: 0.671875 },\n  { x: 0.703125, y: 0.671875 },\n  { x: 0.734375, y: 0.671875 },\n  { x: 0.734375, y: 0.671875 },\n  { x: 0.765625, y: 0.671875 },\n  { x: 0.765625, y: 0.671875 },\n  { x: 0.796875, y: 0.671875 },\n  { x: 0.796875, y: 0.671875 },\n  { x: 0.828125, y: 0.671875 },\n  { x: 0.828125, y: 0.671875 },\n  { x: 0.859375, y: 0.671875 },\n  { x: 0.859375, y: 0.671875 },\n  { x: 0.890625, y: 0.671875 },\n  { x: 0.890625, y: 0.671875 },\n  { x: 0.921875, y: 0.671875 },\n  { x: 0.921875, y: 0.671875 },\n  { x: 0.953125, y: 0.671875 },\n  { x: 0.953125, y: 0.671875 },\n  { x: 0.984375, y: 0.671875 },\n  { x: 0.984375, y: 0.671875 },\n  { x: 0.015625, y: 0.703125 },\n  { x: 0.015625, y: 0.703125 },\n  { x: 0.046875, y: 0.703125 },\n  { x: 0.046875, y: 0.703125 },\n  { x: 0.078125, y: 0.703125 },\n  { x: 0.078125, y: 0.703125 },\n  { x: 0.109375, y: 0.703125 },\n  { x: 0.109375, y: 0.703125 },\n  { x: 0.140625, y: 0.703125 },\n  { x: 0.140625, y: 0.703125 },\n  { x: 0.171875, y: 0.703125 },\n  { x: 0.171875, y: 0.703125 },\n  { x: 0.203125, y: 0.703125 },\n  { x: 0.203125, y: 0.703125 },\n  { x: 0.234375, y: 0.703125 },\n  { x: 0.234375, y: 0.703125 },\n  { x: 0.265625, y: 0.703125 },\n  { x: 0.265625, y: 0.703125 },\n  { x: 0.296875, y: 0.703125 },\n  { x: 0.296875, y: 0.703125 },\n  { x: 0.328125, y: 0.703125 },\n  { x: 0.328125, y: 0.703125 },\n  { x: 0.359375, y: 0.703125 },\n  { x: 0.359375, y: 0.703125 },\n  { x: 0.390625, y: 0.703125 },\n  { x: 0.390625, y: 0.703125 },\n  { x: 0.421875, y: 0.703125 },\n  { x: 0.421875, y: 0.703125 },\n  { x: 0.453125, y: 0.703125 },\n  { x: 0.453125, y: 0.703125 },\n  { x: 0.484375, y: 0.703125 },\n  { x: 0.484375, y: 0.703125 },\n  { x: 0.515625, y: 0.703125 },\n  { x: 0.515625, y: 0.703125 },\n  { x: 0.546875, y: 0.703125 },\n  { x: 0.546875, y: 0.703125 },\n  { x: 0.578125, y: 0.703125 },\n  { x: 0.578125, y: 0.703125 },\n  { x: 0.609375, y: 0.703125 },\n  { x: 0.609375, y: 0.703125 },\n  { x: 0.640625, y: 0.703125 },\n  { x: 0.640625, y: 0.703125 },\n  { x: 0.671875, y: 0.703125 },\n  { x: 0.671875, y: 0.703125 },\n  { x: 0.703125, y: 0.703125 },\n  { x: 0.703125, y: 0.703125 },\n  { x: 0.734375, y: 0.703125 },\n  { x: 0.734375, y: 0.703125 },\n  { x: 0.765625, y: 0.703125 },\n  { x: 0.765625, y: 0.703125 },\n  { x: 0.796875, y: 0.703125 },\n  { x: 0.796875, y: 0.703125 },\n  { x: 0.828125, y: 0.703125 },\n  { x: 0.828125, y: 0.703125 },\n  { x: 0.859375, y: 0.703125 },\n  { x: 0.859375, y: 0.703125 },\n  { x: 0.890625, y: 0.703125 },\n  { x: 0.890625, y: 0.703125 },\n  { x: 0.921875, y: 0.703125 },\n  { x: 0.921875, y: 0.703125 },\n  { x: 0.953125, y: 0.703125 },\n  { x: 0.953125, y: 0.703125 },\n  { x: 0.984375, y: 0.703125 },\n  { x: 0.984375, y: 0.703125 },\n  { x: 0.015625, y: 0.734375 },\n  { x: 0.015625, y: 0.734375 },\n  { x: 0.046875, y: 0.734375 },\n  { x: 0.046875, y: 0.734375 },\n  { x: 0.078125, y: 0.734375 },\n  { x: 0.078125, y: 0.734375 },\n  { x: 0.109375, y: 0.734375 },\n  { x: 0.109375, y: 0.734375 },\n  { x: 0.140625, y: 0.734375 },\n  { x: 0.140625, y: 0.734375 },\n  { x: 0.171875, y: 0.734375 },\n  { x: 0.171875, y: 0.734375 },\n  { x: 0.203125, y: 0.734375 },\n  { x: 0.203125, y: 0.734375 },\n  { x: 0.234375, y: 0.734375 },\n  { x: 0.234375, y: 0.734375 },\n  { x: 0.265625, y: 0.734375 },\n  { x: 0.265625, y: 0.734375 },\n  { x: 0.296875, y: 0.734375 },\n  { x: 0.296875, y: 0.734375 },\n  { x: 0.328125, y: 0.734375 },\n  { x: 0.328125, y: 0.734375 },\n  { x: 0.359375, y: 0.734375 },\n  { x: 0.359375, y: 0.734375 },\n  { x: 0.390625, y: 0.734375 },\n  { x: 0.390625, y: 0.734375 },\n  { x: 0.421875, y: 0.734375 },\n  { x: 0.421875, y: 0.734375 },\n  { x: 0.453125, y: 0.734375 },\n  { x: 0.453125, y: 0.734375 },\n  { x: 0.484375, y: 0.734375 },\n  { x: 0.484375, y: 0.734375 },\n  { x: 0.515625, y: 0.734375 },\n  { x: 0.515625, y: 0.734375 },\n  { x: 0.546875, y: 0.734375 },\n  { x: 0.546875, y: 0.734375 },\n  { x: 0.578125, y: 0.734375 },\n  { x: 0.578125, y: 0.734375 },\n  { x: 0.609375, y: 0.734375 },\n  { x: 0.609375, y: 0.734375 },\n  { x: 0.640625, y: 0.734375 },\n  { x: 0.640625, y: 0.734375 },\n  { x: 0.671875, y: 0.734375 },\n  { x: 0.671875, y: 0.734375 },\n  { x: 0.703125, y: 0.734375 },\n  { x: 0.703125, y: 0.734375 },\n  { x: 0.734375, y: 0.734375 },\n  { x: 0.734375, y: 0.734375 },\n  { x: 0.765625, y: 0.734375 },\n  { x: 0.765625, y: 0.734375 },\n  { x: 0.796875, y: 0.734375 },\n  { x: 0.796875, y: 0.734375 },\n  { x: 0.828125, y: 0.734375 },\n  { x: 0.828125, y: 0.734375 },\n  { x: 0.859375, y: 0.734375 },\n  { x: 0.859375, y: 0.734375 },\n  { x: 0.890625, y: 0.734375 },\n  { x: 0.890625, y: 0.734375 },\n  { x: 0.921875, y: 0.734375 },\n  { x: 0.921875, y: 0.734375 },\n  { x: 0.953125, y: 0.734375 },\n  { x: 0.953125, y: 0.734375 },\n  { x: 0.984375, y: 0.734375 },\n  { x: 0.984375, y: 0.734375 },\n  { x: 0.015625, y: 0.765625 },\n  { x: 0.015625, y: 0.765625 },\n  { x: 0.046875, y: 0.765625 },\n  { x: 0.046875, y: 0.765625 },\n  { x: 0.078125, y: 0.765625 },\n  { x: 0.078125, y: 0.765625 },\n  { x: 0.109375, y: 0.765625 },\n  { x: 0.109375, y: 0.765625 },\n  { x: 0.140625, y: 0.765625 },\n  { x: 0.140625, y: 0.765625 },\n  { x: 0.171875, y: 0.765625 },\n  { x: 0.171875, y: 0.765625 },\n  { x: 0.203125, y: 0.765625 },\n  { x: 0.203125, y: 0.765625 },\n  { x: 0.234375, y: 0.765625 },\n  { x: 0.234375, y: 0.765625 },\n  { x: 0.265625, y: 0.765625 },\n  { x: 0.265625, y: 0.765625 },\n  { x: 0.296875, y: 0.765625 },\n  { x: 0.296875, y: 0.765625 },\n  { x: 0.328125, y: 0.765625 },\n  { x: 0.328125, y: 0.765625 },\n  { x: 0.359375, y: 0.765625 },\n  { x: 0.359375, y: 0.765625 },\n  { x: 0.390625, y: 0.765625 },\n  { x: 0.390625, y: 0.765625 },\n  { x: 0.421875, y: 0.765625 },\n  { x: 0.421875, y: 0.765625 },\n  { x: 0.453125, y: 0.765625 },\n  { x: 0.453125, y: 0.765625 },\n  { x: 0.484375, y: 0.765625 },\n  { x: 0.484375, y: 0.765625 },\n  { x: 0.515625, y: 0.765625 },\n  { x: 0.515625, y: 0.765625 },\n  { x: 0.546875, y: 0.765625 },\n  { x: 0.546875, y: 0.765625 },\n  { x: 0.578125, y: 0.765625 },\n  { x: 0.578125, y: 0.765625 },\n  { x: 0.609375, y: 0.765625 },\n  { x: 0.609375, y: 0.765625 },\n  { x: 0.640625, y: 0.765625 },\n  { x: 0.640625, y: 0.765625 },\n  { x: 0.671875, y: 0.765625 },\n  { x: 0.671875, y: 0.765625 },\n  { x: 0.703125, y: 0.765625 },\n  { x: 0.703125, y: 0.765625 },\n  { x: 0.734375, y: 0.765625 },\n  { x: 0.734375, y: 0.765625 },\n  { x: 0.765625, y: 0.765625 },\n  { x: 0.765625, y: 0.765625 },\n  { x: 0.796875, y: 0.765625 },\n  { x: 0.796875, y: 0.765625 },\n  { x: 0.828125, y: 0.765625 },\n  { x: 0.828125, y: 0.765625 },\n  { x: 0.859375, y: 0.765625 },\n  { x: 0.859375, y: 0.765625 },\n  { x: 0.890625, y: 0.765625 },\n  { x: 0.890625, y: 0.765625 },\n  { x: 0.921875, y: 0.765625 },\n  { x: 0.921875, y: 0.765625 },\n  { x: 0.953125, y: 0.765625 },\n  { x: 0.953125, y: 0.765625 },\n  { x: 0.984375, y: 0.765625 },\n  { x: 0.984375, y: 0.765625 },\n  { x: 0.015625, y: 0.796875 },\n  { x: 0.015625, y: 0.796875 },\n  { x: 0.046875, y: 0.796875 },\n  { x: 0.046875, y: 0.796875 },\n  { x: 0.078125, y: 0.796875 },\n  { x: 0.078125, y: 0.796875 },\n  { x: 0.109375, y: 0.796875 },\n  { x: 0.109375, y: 0.796875 },\n  { x: 0.140625, y: 0.796875 },\n  { x: 0.140625, y: 0.796875 },\n  { x: 0.171875, y: 0.796875 },\n  { x: 0.171875, y: 0.796875 },\n  { x: 0.203125, y: 0.796875 },\n  { x: 0.203125, y: 0.796875 },\n  { x: 0.234375, y: 0.796875 },\n  { x: 0.234375, y: 0.796875 },\n  { x: 0.265625, y: 0.796875 },\n  { x: 0.265625, y: 0.796875 },\n  { x: 0.296875, y: 0.796875 },\n  { x: 0.296875, y: 0.796875 },\n  { x: 0.328125, y: 0.796875 },\n  { x: 0.328125, y: 0.796875 },\n  { x: 0.359375, y: 0.796875 },\n  { x: 0.359375, y: 0.796875 },\n  { x: 0.390625, y: 0.796875 },\n  { x: 0.390625, y: 0.796875 },\n  { x: 0.421875, y: 0.796875 },\n  { x: 0.421875, y: 0.796875 },\n  { x: 0.453125, y: 0.796875 },\n  { x: 0.453125, y: 0.796875 },\n  { x: 0.484375, y: 0.796875 },\n  { x: 0.484375, y: 0.796875 },\n  { x: 0.515625, y: 0.796875 },\n  { x: 0.515625, y: 0.796875 },\n  { x: 0.546875, y: 0.796875 },\n  { x: 0.546875, y: 0.796875 },\n  { x: 0.578125, y: 0.796875 },\n  { x: 0.578125, y: 0.796875 },\n  { x: 0.609375, y: 0.796875 },\n  { x: 0.609375, y: 0.796875 },\n  { x: 0.640625, y: 0.796875 },\n  { x: 0.640625, y: 0.796875 },\n  { x: 0.671875, y: 0.796875 },\n  { x: 0.671875, y: 0.796875 },\n  { x: 0.703125, y: 0.796875 },\n  { x: 0.703125, y: 0.796875 },\n  { x: 0.734375, y: 0.796875 },\n  { x: 0.734375, y: 0.796875 },\n  { x: 0.765625, y: 0.796875 },\n  { x: 0.765625, y: 0.796875 },\n  { x: 0.796875, y: 0.796875 },\n  { x: 0.796875, y: 0.796875 },\n  { x: 0.828125, y: 0.796875 },\n  { x: 0.828125, y: 0.796875 },\n  { x: 0.859375, y: 0.796875 },\n  { x: 0.859375, y: 0.796875 },\n  { x: 0.890625, y: 0.796875 },\n  { x: 0.890625, y: 0.796875 },\n  { x: 0.921875, y: 0.796875 },\n  { x: 0.921875, y: 0.796875 },\n  { x: 0.953125, y: 0.796875 },\n  { x: 0.953125, y: 0.796875 },\n  { x: 0.984375, y: 0.796875 },\n  { x: 0.984375, y: 0.796875 },\n  { x: 0.015625, y: 0.828125 },\n  { x: 0.015625, y: 0.828125 },\n  { x: 0.046875, y: 0.828125 },\n  { x: 0.046875, y: 0.828125 },\n  { x: 0.078125, y: 0.828125 },\n  { x: 0.078125, y: 0.828125 },\n  { x: 0.109375, y: 0.828125 },\n  { x: 0.109375, y: 0.828125 },\n  { x: 0.140625, y: 0.828125 },\n  { x: 0.140625, y: 0.828125 },\n  { x: 0.171875, y: 0.828125 },\n  { x: 0.171875, y: 0.828125 },\n  { x: 0.203125, y: 0.828125 },\n  { x: 0.203125, y: 0.828125 },\n  { x: 0.234375, y: 0.828125 },\n  { x: 0.234375, y: 0.828125 },\n  { x: 0.265625, y: 0.828125 },\n  { x: 0.265625, y: 0.828125 },\n  { x: 0.296875, y: 0.828125 },\n  { x: 0.296875, y: 0.828125 },\n  { x: 0.328125, y: 0.828125 },\n  { x: 0.328125, y: 0.828125 },\n  { x: 0.359375, y: 0.828125 },\n  { x: 0.359375, y: 0.828125 },\n  { x: 0.390625, y: 0.828125 },\n  { x: 0.390625, y: 0.828125 },\n  { x: 0.421875, y: 0.828125 },\n  { x: 0.421875, y: 0.828125 },\n  { x: 0.453125, y: 0.828125 },\n  { x: 0.453125, y: 0.828125 },\n  { x: 0.484375, y: 0.828125 },\n  { x: 0.484375, y: 0.828125 },\n  { x: 0.515625, y: 0.828125 },\n  { x: 0.515625, y: 0.828125 },\n  { x: 0.546875, y: 0.828125 },\n  { x: 0.546875, y: 0.828125 },\n  { x: 0.578125, y: 0.828125 },\n  { x: 0.578125, y: 0.828125 },\n  { x: 0.609375, y: 0.828125 },\n  { x: 0.609375, y: 0.828125 },\n  { x: 0.640625, y: 0.828125 },\n  { x: 0.640625, y: 0.828125 },\n  { x: 0.671875, y: 0.828125 },\n  { x: 0.671875, y: 0.828125 },\n  { x: 0.703125, y: 0.828125 },\n  { x: 0.703125, y: 0.828125 },\n  { x: 0.734375, y: 0.828125 },\n  { x: 0.734375, y: 0.828125 },\n  { x: 0.765625, y: 0.828125 },\n  { x: 0.765625, y: 0.828125 },\n  { x: 0.796875, y: 0.828125 },\n  { x: 0.796875, y: 0.828125 },\n  { x: 0.828125, y: 0.828125 },\n  { x: 0.828125, y: 0.828125 },\n  { x: 0.859375, y: 0.828125 },\n  { x: 0.859375, y: 0.828125 },\n  { x: 0.890625, y: 0.828125 },\n  { x: 0.890625, y: 0.828125 },\n  { x: 0.921875, y: 0.828125 },\n  { x: 0.921875, y: 0.828125 },\n  { x: 0.953125, y: 0.828125 },\n  { x: 0.953125, y: 0.828125 },\n  { x: 0.984375, y: 0.828125 },\n  { x: 0.984375, y: 0.828125 },\n  { x: 0.015625, y: 0.859375 },\n  { x: 0.015625, y: 0.859375 },\n  { x: 0.046875, y: 0.859375 },\n  { x: 0.046875, y: 0.859375 },\n  { x: 0.078125, y: 0.859375 },\n  { x: 0.078125, y: 0.859375 },\n  { x: 0.109375, y: 0.859375 },\n  { x: 0.109375, y: 0.859375 },\n  { x: 0.140625, y: 0.859375 },\n  { x: 0.140625, y: 0.859375 },\n  { x: 0.171875, y: 0.859375 },\n  { x: 0.171875, y: 0.859375 },\n  { x: 0.203125, y: 0.859375 },\n  { x: 0.203125, y: 0.859375 },\n  { x: 0.234375, y: 0.859375 },\n  { x: 0.234375, y: 0.859375 },\n  { x: 0.265625, y: 0.859375 },\n  { x: 0.265625, y: 0.859375 },\n  { x: 0.296875, y: 0.859375 },\n  { x: 0.296875, y: 0.859375 },\n  { x: 0.328125, y: 0.859375 },\n  { x: 0.328125, y: 0.859375 },\n  { x: 0.359375, y: 0.859375 },\n  { x: 0.359375, y: 0.859375 },\n  { x: 0.390625, y: 0.859375 },\n  { x: 0.390625, y: 0.859375 },\n  { x: 0.421875, y: 0.859375 },\n  { x: 0.421875, y: 0.859375 },\n  { x: 0.453125, y: 0.859375 },\n  { x: 0.453125, y: 0.859375 },\n  { x: 0.484375, y: 0.859375 },\n  { x: 0.484375, y: 0.859375 },\n  { x: 0.515625, y: 0.859375 },\n  { x: 0.515625, y: 0.859375 },\n  { x: 0.546875, y: 0.859375 },\n  { x: 0.546875, y: 0.859375 },\n  { x: 0.578125, y: 0.859375 },\n  { x: 0.578125, y: 0.859375 },\n  { x: 0.609375, y: 0.859375 },\n  { x: 0.609375, y: 0.859375 },\n  { x: 0.640625, y: 0.859375 },\n  { x: 0.640625, y: 0.859375 },\n  { x: 0.671875, y: 0.859375 },\n  { x: 0.671875, y: 0.859375 },\n  { x: 0.703125, y: 0.859375 },\n  { x: 0.703125, y: 0.859375 },\n  { x: 0.734375, y: 0.859375 },\n  { x: 0.734375, y: 0.859375 },\n  { x: 0.765625, y: 0.859375 },\n  { x: 0.765625, y: 0.859375 },\n  { x: 0.796875, y: 0.859375 },\n  { x: 0.796875, y: 0.859375 },\n  { x: 0.828125, y: 0.859375 },\n  { x: 0.828125, y: 0.859375 },\n  { x: 0.859375, y: 0.859375 },\n  { x: 0.859375, y: 0.859375 },\n  { x: 0.890625, y: 0.859375 },\n  { x: 0.890625, y: 0.859375 },\n  { x: 0.921875, y: 0.859375 },\n  { x: 0.921875, y: 0.859375 },\n  { x: 0.953125, y: 0.859375 },\n  { x: 0.953125, y: 0.859375 },\n  { x: 0.984375, y: 0.859375 },\n  { x: 0.984375, y: 0.859375 },\n  { x: 0.015625, y: 0.890625 },\n  { x: 0.015625, y: 0.890625 },\n  { x: 0.046875, y: 0.890625 },\n  { x: 0.046875, y: 0.890625 },\n  { x: 0.078125, y: 0.890625 },\n  { x: 0.078125, y: 0.890625 },\n  { x: 0.109375, y: 0.890625 },\n  { x: 0.109375, y: 0.890625 },\n  { x: 0.140625, y: 0.890625 },\n  { x: 0.140625, y: 0.890625 },\n  { x: 0.171875, y: 0.890625 },\n  { x: 0.171875, y: 0.890625 },\n  { x: 0.203125, y: 0.890625 },\n  { x: 0.203125, y: 0.890625 },\n  { x: 0.234375, y: 0.890625 },\n  { x: 0.234375, y: 0.890625 },\n  { x: 0.265625, y: 0.890625 },\n  { x: 0.265625, y: 0.890625 },\n  { x: 0.296875, y: 0.890625 },\n  { x: 0.296875, y: 0.890625 },\n  { x: 0.328125, y: 0.890625 },\n  { x: 0.328125, y: 0.890625 },\n  { x: 0.359375, y: 0.890625 },\n  { x: 0.359375, y: 0.890625 },\n  { x: 0.390625, y: 0.890625 },\n  { x: 0.390625, y: 0.890625 },\n  { x: 0.421875, y: 0.890625 },\n  { x: 0.421875, y: 0.890625 },\n  { x: 0.453125, y: 0.890625 },\n  { x: 0.453125, y: 0.890625 },\n  { x: 0.484375, y: 0.890625 },\n  { x: 0.484375, y: 0.890625 },\n  { x: 0.515625, y: 0.890625 },\n  { x: 0.515625, y: 0.890625 },\n  { x: 0.546875, y: 0.890625 },\n  { x: 0.546875, y: 0.890625 },\n  { x: 0.578125, y: 0.890625 },\n  { x: 0.578125, y: 0.890625 },\n  { x: 0.609375, y: 0.890625 },\n  { x: 0.609375, y: 0.890625 },\n  { x: 0.640625, y: 0.890625 },\n  { x: 0.640625, y: 0.890625 },\n  { x: 0.671875, y: 0.890625 },\n  { x: 0.671875, y: 0.890625 },\n  { x: 0.703125, y: 0.890625 },\n  { x: 0.703125, y: 0.890625 },\n  { x: 0.734375, y: 0.890625 },\n  { x: 0.734375, y: 0.890625 },\n  { x: 0.765625, y: 0.890625 },\n  { x: 0.765625, y: 0.890625 },\n  { x: 0.796875, y: 0.890625 },\n  { x: 0.796875, y: 0.890625 },\n  { x: 0.828125, y: 0.890625 },\n  { x: 0.828125, y: 0.890625 },\n  { x: 0.859375, y: 0.890625 },\n  { x: 0.859375, y: 0.890625 },\n  { x: 0.890625, y: 0.890625 },\n  { x: 0.890625, y: 0.890625 },\n  { x: 0.921875, y: 0.890625 },\n  { x: 0.921875, y: 0.890625 },\n  { x: 0.953125, y: 0.890625 },\n  { x: 0.953125, y: 0.890625 },\n  { x: 0.984375, y: 0.890625 },\n  { x: 0.984375, y: 0.890625 },\n  { x: 0.015625, y: 0.921875 },\n  { x: 0.015625, y: 0.921875 },\n  { x: 0.046875, y: 0.921875 },\n  { x: 0.046875, y: 0.921875 },\n  { x: 0.078125, y: 0.921875 },\n  { x: 0.078125, y: 0.921875 },\n  { x: 0.109375, y: 0.921875 },\n  { x: 0.109375, y: 0.921875 },\n  { x: 0.140625, y: 0.921875 },\n  { x: 0.140625, y: 0.921875 },\n  { x: 0.171875, y: 0.921875 },\n  { x: 0.171875, y: 0.921875 },\n  { x: 0.203125, y: 0.921875 },\n  { x: 0.203125, y: 0.921875 },\n  { x: 0.234375, y: 0.921875 },\n  { x: 0.234375, y: 0.921875 },\n  { x: 0.265625, y: 0.921875 },\n  { x: 0.265625, y: 0.921875 },\n  { x: 0.296875, y: 0.921875 },\n  { x: 0.296875, y: 0.921875 },\n  { x: 0.328125, y: 0.921875 },\n  { x: 0.328125, y: 0.921875 },\n  { x: 0.359375, y: 0.921875 },\n  { x: 0.359375, y: 0.921875 },\n  { x: 0.390625, y: 0.921875 },\n  { x: 0.390625, y: 0.921875 },\n  { x: 0.421875, y: 0.921875 },\n  { x: 0.421875, y: 0.921875 },\n  { x: 0.453125, y: 0.921875 },\n  { x: 0.453125, y: 0.921875 },\n  { x: 0.484375, y: 0.921875 },\n  { x: 0.484375, y: 0.921875 },\n  { x: 0.515625, y: 0.921875 },\n  { x: 0.515625, y: 0.921875 },\n  { x: 0.546875, y: 0.921875 },\n  { x: 0.546875, y: 0.921875 },\n  { x: 0.578125, y: 0.921875 },\n  { x: 0.578125, y: 0.921875 },\n  { x: 0.609375, y: 0.921875 },\n  { x: 0.609375, y: 0.921875 },\n  { x: 0.640625, y: 0.921875 },\n  { x: 0.640625, y: 0.921875 },\n  { x: 0.671875, y: 0.921875 },\n  { x: 0.671875, y: 0.921875 },\n  { x: 0.703125, y: 0.921875 },\n  { x: 0.703125, y: 0.921875 },\n  { x: 0.734375, y: 0.921875 },\n  { x: 0.734375, y: 0.921875 },\n  { x: 0.765625, y: 0.921875 },\n  { x: 0.765625, y: 0.921875 },\n  { x: 0.796875, y: 0.921875 },\n  { x: 0.796875, y: 0.921875 },\n  { x: 0.828125, y: 0.921875 },\n  { x: 0.828125, y: 0.921875 },\n  { x: 0.859375, y: 0.921875 },\n  { x: 0.859375, y: 0.921875 },\n  { x: 0.890625, y: 0.921875 },\n  { x: 0.890625, y: 0.921875 },\n  { x: 0.921875, y: 0.921875 },\n  { x: 0.921875, y: 0.921875 },\n  { x: 0.953125, y: 0.921875 },\n  { x: 0.953125, y: 0.921875 },\n  { x: 0.984375, y: 0.921875 },\n  { x: 0.984375, y: 0.921875 },\n  { x: 0.015625, y: 0.953125 },\n  { x: 0.015625, y: 0.953125 },\n  { x: 0.046875, y: 0.953125 },\n  { x: 0.046875, y: 0.953125 },\n  { x: 0.078125, y: 0.953125 },\n  { x: 0.078125, y: 0.953125 },\n  { x: 0.109375, y: 0.953125 },\n  { x: 0.109375, y: 0.953125 },\n  { x: 0.140625, y: 0.953125 },\n  { x: 0.140625, y: 0.953125 },\n  { x: 0.171875, y: 0.953125 },\n  { x: 0.171875, y: 0.953125 },\n  { x: 0.203125, y: 0.953125 },\n  { x: 0.203125, y: 0.953125 },\n  { x: 0.234375, y: 0.953125 },\n  { x: 0.234375, y: 0.953125 },\n  { x: 0.265625, y: 0.953125 },\n  { x: 0.265625, y: 0.953125 },\n  { x: 0.296875, y: 0.953125 },\n  { x: 0.296875, y: 0.953125 },\n  { x: 0.328125, y: 0.953125 },\n  { x: 0.328125, y: 0.953125 },\n  { x: 0.359375, y: 0.953125 },\n  { x: 0.359375, y: 0.953125 },\n  { x: 0.390625, y: 0.953125 },\n  { x: 0.390625, y: 0.953125 },\n  { x: 0.421875, y: 0.953125 },\n  { x: 0.421875, y: 0.953125 },\n  { x: 0.453125, y: 0.953125 },\n  { x: 0.453125, y: 0.953125 },\n  { x: 0.484375, y: 0.953125 },\n  { x: 0.484375, y: 0.953125 },\n  { x: 0.515625, y: 0.953125 },\n  { x: 0.515625, y: 0.953125 },\n  { x: 0.546875, y: 0.953125 },\n  { x: 0.546875, y: 0.953125 },\n  { x: 0.578125, y: 0.953125 },\n  { x: 0.578125, y: 0.953125 },\n  { x: 0.609375, y: 0.953125 },\n  { x: 0.609375, y: 0.953125 },\n  { x: 0.640625, y: 0.953125 },\n  { x: 0.640625, y: 0.953125 },\n  { x: 0.671875, y: 0.953125 },\n  { x: 0.671875, y: 0.953125 },\n  { x: 0.703125, y: 0.953125 },\n  { x: 0.703125, y: 0.953125 },\n  { x: 0.734375, y: 0.953125 },\n  { x: 0.734375, y: 0.953125 },\n  { x: 0.765625, y: 0.953125 },\n  { x: 0.765625, y: 0.953125 },\n  { x: 0.796875, y: 0.953125 },\n  { x: 0.796875, y: 0.953125 },\n  { x: 0.828125, y: 0.953125 },\n  { x: 0.828125, y: 0.953125 },\n  { x: 0.859375, y: 0.953125 },\n  { x: 0.859375, y: 0.953125 },\n  { x: 0.890625, y: 0.953125 },\n  { x: 0.890625, y: 0.953125 },\n  { x: 0.921875, y: 0.953125 },\n  { x: 0.921875, y: 0.953125 },\n  { x: 0.953125, y: 0.953125 },\n  { x: 0.953125, y: 0.953125 },\n  { x: 0.984375, y: 0.953125 },\n  { x: 0.984375, y: 0.953125 },\n  { x: 0.015625, y: 0.984375 },\n  { x: 0.015625, y: 0.984375 },\n  { x: 0.046875, y: 0.984375 },\n  { x: 0.046875, y: 0.984375 },\n  { x: 0.078125, y: 0.984375 },\n  { x: 0.078125, y: 0.984375 },\n  { x: 0.109375, y: 0.984375 },\n  { x: 0.109375, y: 0.984375 },\n  { x: 0.140625, y: 0.984375 },\n  { x: 0.140625, y: 0.984375 },\n  { x: 0.171875, y: 0.984375 },\n  { x: 0.171875, y: 0.984375 },\n  { x: 0.203125, y: 0.984375 },\n  { x: 0.203125, y: 0.984375 },\n  { x: 0.234375, y: 0.984375 },\n  { x: 0.234375, y: 0.984375 },\n  { x: 0.265625, y: 0.984375 },\n  { x: 0.265625, y: 0.984375 },\n  { x: 0.296875, y: 0.984375 },\n  { x: 0.296875, y: 0.984375 },\n  { x: 0.328125, y: 0.984375 },\n  { x: 0.328125, y: 0.984375 },\n  { x: 0.359375, y: 0.984375 },\n  { x: 0.359375, y: 0.984375 },\n  { x: 0.390625, y: 0.984375 },\n  { x: 0.390625, y: 0.984375 },\n  { x: 0.421875, y: 0.984375 },\n  { x: 0.421875, y: 0.984375 },\n  { x: 0.453125, y: 0.984375 },\n  { x: 0.453125, y: 0.984375 },\n  { x: 0.484375, y: 0.984375 },\n  { x: 0.484375, y: 0.984375 },\n  { x: 0.515625, y: 0.984375 },\n  { x: 0.515625, y: 0.984375 },\n  { x: 0.546875, y: 0.984375 },\n  { x: 0.546875, y: 0.984375 },\n  { x: 0.578125, y: 0.984375 },\n  { x: 0.578125, y: 0.984375 },\n  { x: 0.609375, y: 0.984375 },\n  { x: 0.609375, y: 0.984375 },\n  { x: 0.640625, y: 0.984375 },\n  { x: 0.640625, y: 0.984375 },\n  { x: 0.671875, y: 0.984375 },\n  { x: 0.671875, y: 0.984375 },\n  { x: 0.703125, y: 0.984375 },\n  { x: 0.703125, y: 0.984375 },\n  { x: 0.734375, y: 0.984375 },\n  { x: 0.734375, y: 0.984375 },\n  { x: 0.765625, y: 0.984375 },\n  { x: 0.765625, y: 0.984375 },\n  { x: 0.796875, y: 0.984375 },\n  { x: 0.796875, y: 0.984375 },\n  { x: 0.828125, y: 0.984375 },\n  { x: 0.828125, y: 0.984375 },\n  { x: 0.859375, y: 0.984375 },\n  { x: 0.859375, y: 0.984375 },\n  { x: 0.890625, y: 0.984375 },\n  { x: 0.890625, y: 0.984375 },\n  { x: 0.921875, y: 0.984375 },\n  { x: 0.921875, y: 0.984375 },\n  { x: 0.953125, y: 0.984375 },\n  { x: 0.953125, y: 0.984375 },\n  { x: 0.984375, y: 0.984375 },\n  { x: 0.984375, y: 0.984375 },\n  { x: 0.03125, y: 0.03125 },\n  { x: 0.03125, y: 0.03125 },\n  { x: 0.09375, y: 0.03125 },\n  { x: 0.09375, y: 0.03125 },\n  { x: 0.15625, y: 0.03125 },\n  { x: 0.15625, y: 0.03125 },\n  { x: 0.21875, y: 0.03125 },\n  { x: 0.21875, y: 0.03125 },\n  { x: 0.28125, y: 0.03125 },\n  { x: 0.28125, y: 0.03125 },\n  { x: 0.34375, y: 0.03125 },\n  { x: 0.34375, y: 0.03125 },\n  { x: 0.40625, y: 0.03125 },\n  { x: 0.40625, y: 0.03125 },\n  { x: 0.46875, y: 0.03125 },\n  { x: 0.46875, y: 0.03125 },\n  { x: 0.53125, y: 0.03125 },\n  { x: 0.53125, y: 0.03125 },\n  { x: 0.59375, y: 0.03125 },\n  { x: 0.59375, y: 0.03125 },\n  { x: 0.65625, y: 0.03125 },\n  { x: 0.65625, y: 0.03125 },\n  { x: 0.71875, y: 0.03125 },\n  { x: 0.71875, y: 0.03125 },\n  { x: 0.78125, y: 0.03125 },\n  { x: 0.78125, y: 0.03125 },\n  { x: 0.84375, y: 0.03125 },\n  { x: 0.84375, y: 0.03125 },\n  { x: 0.90625, y: 0.03125 },\n  { x: 0.90625, y: 0.03125 },\n  { x: 0.96875, y: 0.03125 },\n  { x: 0.96875, y: 0.03125 },\n  { x: 0.03125, y: 0.09375 },\n  { x: 0.03125, y: 0.09375 },\n  { x: 0.09375, y: 0.09375 },\n  { x: 0.09375, y: 0.09375 },\n  { x: 0.15625, y: 0.09375 },\n  { x: 0.15625, y: 0.09375 },\n  { x: 0.21875, y: 0.09375 },\n  { x: 0.21875, y: 0.09375 },\n  { x: 0.28125, y: 0.09375 },\n  { x: 0.28125, y: 0.09375 },\n  { x: 0.34375, y: 0.09375 },\n  { x: 0.34375, y: 0.09375 },\n  { x: 0.40625, y: 0.09375 },\n  { x: 0.40625, y: 0.09375 },\n  { x: 0.46875, y: 0.09375 },\n  { x: 0.46875, y: 0.09375 },\n  { x: 0.53125, y: 0.09375 },\n  { x: 0.53125, y: 0.09375 },\n  { x: 0.59375, y: 0.09375 },\n  { x: 0.59375, y: 0.09375 },\n  { x: 0.65625, y: 0.09375 },\n  { x: 0.65625, y: 0.09375 },\n  { x: 0.71875, y: 0.09375 },\n  { x: 0.71875, y: 0.09375 },\n  { x: 0.78125, y: 0.09375 },\n  { x: 0.78125, y: 0.09375 },\n  { x: 0.84375, y: 0.09375 },\n  { x: 0.84375, y: 0.09375 },\n  { x: 0.90625, y: 0.09375 },\n  { x: 0.90625, y: 0.09375 },\n  { x: 0.96875, y: 0.09375 },\n  { x: 0.96875, y: 0.09375 },\n  { x: 0.03125, y: 0.15625 },\n  { x: 0.03125, y: 0.15625 },\n  { x: 0.09375, y: 0.15625 },\n  { x: 0.09375, y: 0.15625 },\n  { x: 0.15625, y: 0.15625 },\n  { x: 0.15625, y: 0.15625 },\n  { x: 0.21875, y: 0.15625 },\n  { x: 0.21875, y: 0.15625 },\n  { x: 0.28125, y: 0.15625 },\n  { x: 0.28125, y: 0.15625 },\n  { x: 0.34375, y: 0.15625 },\n  { x: 0.34375, y: 0.15625 },\n  { x: 0.40625, y: 0.15625 },\n  { x: 0.40625, y: 0.15625 },\n  { x: 0.46875, y: 0.15625 },\n  { x: 0.46875, y: 0.15625 },\n  { x: 0.53125, y: 0.15625 },\n  { x: 0.53125, y: 0.15625 },\n  { x: 0.59375, y: 0.15625 },\n  { x: 0.59375, y: 0.15625 },\n  { x: 0.65625, y: 0.15625 },\n  { x: 0.65625, y: 0.15625 },\n  { x: 0.71875, y: 0.15625 },\n  { x: 0.71875, y: 0.15625 },\n  { x: 0.78125, y: 0.15625 },\n  { x: 0.78125, y: 0.15625 },\n  { x: 0.84375, y: 0.15625 },\n  { x: 0.84375, y: 0.15625 },\n  { x: 0.90625, y: 0.15625 },\n  { x: 0.90625, y: 0.15625 },\n  { x: 0.96875, y: 0.15625 },\n  { x: 0.96875, y: 0.15625 },\n  { x: 0.03125, y: 0.21875 },\n  { x: 0.03125, y: 0.21875 },\n  { x: 0.09375, y: 0.21875 },\n  { x: 0.09375, y: 0.21875 },\n  { x: 0.15625, y: 0.21875 },\n  { x: 0.15625, y: 0.21875 },\n  { x: 0.21875, y: 0.21875 },\n  { x: 0.21875, y: 0.21875 },\n  { x: 0.28125, y: 0.21875 },\n  { x: 0.28125, y: 0.21875 },\n  { x: 0.34375, y: 0.21875 },\n  { x: 0.34375, y: 0.21875 },\n  { x: 0.40625, y: 0.21875 },\n  { x: 0.40625, y: 0.21875 },\n  { x: 0.46875, y: 0.21875 },\n  { x: 0.46875, y: 0.21875 },\n  { x: 0.53125, y: 0.21875 },\n  { x: 0.53125, y: 0.21875 },\n  { x: 0.59375, y: 0.21875 },\n  { x: 0.59375, y: 0.21875 },\n  { x: 0.65625, y: 0.21875 },\n  { x: 0.65625, y: 0.21875 },\n  { x: 0.71875, y: 0.21875 },\n  { x: 0.71875, y: 0.21875 },\n  { x: 0.78125, y: 0.21875 },\n  { x: 0.78125, y: 0.21875 },\n  { x: 0.84375, y: 0.21875 },\n  { x: 0.84375, y: 0.21875 },\n  { x: 0.90625, y: 0.21875 },\n  { x: 0.90625, y: 0.21875 },\n  { x: 0.96875, y: 0.21875 },\n  { x: 0.96875, y: 0.21875 },\n  { x: 0.03125, y: 0.28125 },\n  { x: 0.03125, y: 0.28125 },\n  { x: 0.09375, y: 0.28125 },\n  { x: 0.09375, y: 0.28125 },\n  { x: 0.15625, y: 0.28125 },\n  { x: 0.15625, y: 0.28125 },\n  { x: 0.21875, y: 0.28125 },\n  { x: 0.21875, y: 0.28125 },\n  { x: 0.28125, y: 0.28125 },\n  { x: 0.28125, y: 0.28125 },\n  { x: 0.34375, y: 0.28125 },\n  { x: 0.34375, y: 0.28125 },\n  { x: 0.40625, y: 0.28125 },\n  { x: 0.40625, y: 0.28125 },\n  { x: 0.46875, y: 0.28125 },\n  { x: 0.46875, y: 0.28125 },\n  { x: 0.53125, y: 0.28125 },\n  { x: 0.53125, y: 0.28125 },\n  { x: 0.59375, y: 0.28125 },\n  { x: 0.59375, y: 0.28125 },\n  { x: 0.65625, y: 0.28125 },\n  { x: 0.65625, y: 0.28125 },\n  { x: 0.71875, y: 0.28125 },\n  { x: 0.71875, y: 0.28125 },\n  { x: 0.78125, y: 0.28125 },\n  { x: 0.78125, y: 0.28125 },\n  { x: 0.84375, y: 0.28125 },\n  { x: 0.84375, y: 0.28125 },\n  { x: 0.90625, y: 0.28125 },\n  { x: 0.90625, y: 0.28125 },\n  { x: 0.96875, y: 0.28125 },\n  { x: 0.96875, y: 0.28125 },\n  { x: 0.03125, y: 0.34375 },\n  { x: 0.03125, y: 0.34375 },\n  { x: 0.09375, y: 0.34375 },\n  { x: 0.09375, y: 0.34375 },\n  { x: 0.15625, y: 0.34375 },\n  { x: 0.15625, y: 0.34375 },\n  { x: 0.21875, y: 0.34375 },\n  { x: 0.21875, y: 0.34375 },\n  { x: 0.28125, y: 0.34375 },\n  { x: 0.28125, y: 0.34375 },\n  { x: 0.34375, y: 0.34375 },\n  { x: 0.34375, y: 0.34375 },\n  { x: 0.40625, y: 0.34375 },\n  { x: 0.40625, y: 0.34375 },\n  { x: 0.46875, y: 0.34375 },\n  { x: 0.46875, y: 0.34375 },\n  { x: 0.53125, y: 0.34375 },\n  { x: 0.53125, y: 0.34375 },\n  { x: 0.59375, y: 0.34375 },\n  { x: 0.59375, y: 0.34375 },\n  { x: 0.65625, y: 0.34375 },\n  { x: 0.65625, y: 0.34375 },\n  { x: 0.71875, y: 0.34375 },\n  { x: 0.71875, y: 0.34375 },\n  { x: 0.78125, y: 0.34375 },\n  { x: 0.78125, y: 0.34375 },\n  { x: 0.84375, y: 0.34375 },\n  { x: 0.84375, y: 0.34375 },\n  { x: 0.90625, y: 0.34375 },\n  { x: 0.90625, y: 0.34375 },\n  { x: 0.96875, y: 0.34375 },\n  { x: 0.96875, y: 0.34375 },\n  { x: 0.03125, y: 0.40625 },\n  { x: 0.03125, y: 0.40625 },\n  { x: 0.09375, y: 0.40625 },\n  { x: 0.09375, y: 0.40625 },\n  { x: 0.15625, y: 0.40625 },\n  { x: 0.15625, y: 0.40625 },\n  { x: 0.21875, y: 0.40625 },\n  { x: 0.21875, y: 0.40625 },\n  { x: 0.28125, y: 0.40625 },\n  { x: 0.28125, y: 0.40625 },\n  { x: 0.34375, y: 0.40625 },\n  { x: 0.34375, y: 0.40625 },\n  { x: 0.40625, y: 0.40625 },\n  { x: 0.40625, y: 0.40625 },\n  { x: 0.46875, y: 0.40625 },\n  { x: 0.46875, y: 0.40625 },\n  { x: 0.53125, y: 0.40625 },\n  { x: 0.53125, y: 0.40625 },\n  { x: 0.59375, y: 0.40625 },\n  { x: 0.59375, y: 0.40625 },\n  { x: 0.65625, y: 0.40625 },\n  { x: 0.65625, y: 0.40625 },\n  { x: 0.71875, y: 0.40625 },\n  { x: 0.71875, y: 0.40625 },\n  { x: 0.78125, y: 0.40625 },\n  { x: 0.78125, y: 0.40625 },\n  { x: 0.84375, y: 0.40625 },\n  { x: 0.84375, y: 0.40625 },\n  { x: 0.90625, y: 0.40625 },\n  { x: 0.90625, y: 0.40625 },\n  { x: 0.96875, y: 0.40625 },\n  { x: 0.96875, y: 0.40625 },\n  { x: 0.03125, y: 0.46875 },\n  { x: 0.03125, y: 0.46875 },\n  { x: 0.09375, y: 0.46875 },\n  { x: 0.09375, y: 0.46875 },\n  { x: 0.15625, y: 0.46875 },\n  { x: 0.15625, y: 0.46875 },\n  { x: 0.21875, y: 0.46875 },\n  { x: 0.21875, y: 0.46875 },\n  { x: 0.28125, y: 0.46875 },\n  { x: 0.28125, y: 0.46875 },\n  { x: 0.34375, y: 0.46875 },\n  { x: 0.34375, y: 0.46875 },\n  { x: 0.40625, y: 0.46875 },\n  { x: 0.40625, y: 0.46875 },\n  { x: 0.46875, y: 0.46875 },\n  { x: 0.46875, y: 0.46875 },\n  { x: 0.53125, y: 0.46875 },\n  { x: 0.53125, y: 0.46875 },\n  { x: 0.59375, y: 0.46875 },\n  { x: 0.59375, y: 0.46875 },\n  { x: 0.65625, y: 0.46875 },\n  { x: 0.65625, y: 0.46875 },\n  { x: 0.71875, y: 0.46875 },\n  { x: 0.71875, y: 0.46875 },\n  { x: 0.78125, y: 0.46875 },\n  { x: 0.78125, y: 0.46875 },\n  { x: 0.84375, y: 0.46875 },\n  { x: 0.84375, y: 0.46875 },\n  { x: 0.90625, y: 0.46875 },\n  { x: 0.90625, y: 0.46875 },\n  { x: 0.96875, y: 0.46875 },\n  { x: 0.96875, y: 0.46875 },\n  { x: 0.03125, y: 0.53125 },\n  { x: 0.03125, y: 0.53125 },\n  { x: 0.09375, y: 0.53125 },\n  { x: 0.09375, y: 0.53125 },\n  { x: 0.15625, y: 0.53125 },\n  { x: 0.15625, y: 0.53125 },\n  { x: 0.21875, y: 0.53125 },\n  { x: 0.21875, y: 0.53125 },\n  { x: 0.28125, y: 0.53125 },\n  { x: 0.28125, y: 0.53125 },\n  { x: 0.34375, y: 0.53125 },\n  { x: 0.34375, y: 0.53125 },\n  { x: 0.40625, y: 0.53125 },\n  { x: 0.40625, y: 0.53125 },\n  { x: 0.46875, y: 0.53125 },\n  { x: 0.46875, y: 0.53125 },\n  { x: 0.53125, y: 0.53125 },\n  { x: 0.53125, y: 0.53125 },\n  { x: 0.59375, y: 0.53125 },\n  { x: 0.59375, y: 0.53125 },\n  { x: 0.65625, y: 0.53125 },\n  { x: 0.65625, y: 0.53125 },\n  { x: 0.71875, y: 0.53125 },\n  { x: 0.71875, y: 0.53125 },\n  { x: 0.78125, y: 0.53125 },\n  { x: 0.78125, y: 0.53125 },\n  { x: 0.84375, y: 0.53125 },\n  { x: 0.84375, y: 0.53125 },\n  { x: 0.90625, y: 0.53125 },\n  { x: 0.90625, y: 0.53125 },\n  { x: 0.96875, y: 0.53125 },\n  { x: 0.96875, y: 0.53125 },\n  { x: 0.03125, y: 0.59375 },\n  { x: 0.03125, y: 0.59375 },\n  { x: 0.09375, y: 0.59375 },\n  { x: 0.09375, y: 0.59375 },\n  { x: 0.15625, y: 0.59375 },\n  { x: 0.15625, y: 0.59375 },\n  { x: 0.21875, y: 0.59375 },\n  { x: 0.21875, y: 0.59375 },\n  { x: 0.28125, y: 0.59375 },\n  { x: 0.28125, y: 0.59375 },\n  { x: 0.34375, y: 0.59375 },\n  { x: 0.34375, y: 0.59375 },\n  { x: 0.40625, y: 0.59375 },\n  { x: 0.40625, y: 0.59375 },\n  { x: 0.46875, y: 0.59375 },\n  { x: 0.46875, y: 0.59375 },\n  { x: 0.53125, y: 0.59375 },\n  { x: 0.53125, y: 0.59375 },\n  { x: 0.59375, y: 0.59375 },\n  { x: 0.59375, y: 0.59375 },\n  { x: 0.65625, y: 0.59375 },\n  { x: 0.65625, y: 0.59375 },\n  { x: 0.71875, y: 0.59375 },\n  { x: 0.71875, y: 0.59375 },\n  { x: 0.78125, y: 0.59375 },\n  { x: 0.78125, y: 0.59375 },\n  { x: 0.84375, y: 0.59375 },\n  { x: 0.84375, y: 0.59375 },\n  { x: 0.90625, y: 0.59375 },\n  { x: 0.90625, y: 0.59375 },\n  { x: 0.96875, y: 0.59375 },\n  { x: 0.96875, y: 0.59375 },\n  { x: 0.03125, y: 0.65625 },\n  { x: 0.03125, y: 0.65625 },\n  { x: 0.09375, y: 0.65625 },\n  { x: 0.09375, y: 0.65625 },\n  { x: 0.15625, y: 0.65625 },\n  { x: 0.15625, y: 0.65625 },\n  { x: 0.21875, y: 0.65625 },\n  { x: 0.21875, y: 0.65625 },\n  { x: 0.28125, y: 0.65625 },\n  { x: 0.28125, y: 0.65625 },\n  { x: 0.34375, y: 0.65625 },\n  { x: 0.34375, y: 0.65625 },\n  { x: 0.40625, y: 0.65625 },\n  { x: 0.40625, y: 0.65625 },\n  { x: 0.46875, y: 0.65625 },\n  { x: 0.46875, y: 0.65625 },\n  { x: 0.53125, y: 0.65625 },\n  { x: 0.53125, y: 0.65625 },\n  { x: 0.59375, y: 0.65625 },\n  { x: 0.59375, y: 0.65625 },\n  { x: 0.65625, y: 0.65625 },\n  { x: 0.65625, y: 0.65625 },\n  { x: 0.71875, y: 0.65625 },\n  { x: 0.71875, y: 0.65625 },\n  { x: 0.78125, y: 0.65625 },\n  { x: 0.78125, y: 0.65625 },\n  { x: 0.84375, y: 0.65625 },\n  { x: 0.84375, y: 0.65625 },\n  { x: 0.90625, y: 0.65625 },\n  { x: 0.90625, y: 0.65625 },\n  { x: 0.96875, y: 0.65625 },\n  { x: 0.96875, y: 0.65625 },\n  { x: 0.03125, y: 0.71875 },\n  { x: 0.03125, y: 0.71875 },\n  { x: 0.09375, y: 0.71875 },\n  { x: 0.09375, y: 0.71875 },\n  { x: 0.15625, y: 0.71875 },\n  { x: 0.15625, y: 0.71875 },\n  { x: 0.21875, y: 0.71875 },\n  { x: 0.21875, y: 0.71875 },\n  { x: 0.28125, y: 0.71875 },\n  { x: 0.28125, y: 0.71875 },\n  { x: 0.34375, y: 0.71875 },\n  { x: 0.34375, y: 0.71875 },\n  { x: 0.40625, y: 0.71875 },\n  { x: 0.40625, y: 0.71875 },\n  { x: 0.46875, y: 0.71875 },\n  { x: 0.46875, y: 0.71875 },\n  { x: 0.53125, y: 0.71875 },\n  { x: 0.53125, y: 0.71875 },\n  { x: 0.59375, y: 0.71875 },\n  { x: 0.59375, y: 0.71875 },\n  { x: 0.65625, y: 0.71875 },\n  { x: 0.65625, y: 0.71875 },\n  { x: 0.71875, y: 0.71875 },\n  { x: 0.71875, y: 0.71875 },\n  { x: 0.78125, y: 0.71875 },\n  { x: 0.78125, y: 0.71875 },\n  { x: 0.84375, y: 0.71875 },\n  { x: 0.84375, y: 0.71875 },\n  { x: 0.90625, y: 0.71875 },\n  { x: 0.90625, y: 0.71875 },\n  { x: 0.96875, y: 0.71875 },\n  { x: 0.96875, y: 0.71875 },\n  { x: 0.03125, y: 0.78125 },\n  { x: 0.03125, y: 0.78125 },\n  { x: 0.09375, y: 0.78125 },\n  { x: 0.09375, y: 0.78125 },\n  { x: 0.15625, y: 0.78125 },\n  { x: 0.15625, y: 0.78125 },\n  { x: 0.21875, y: 0.78125 },\n  { x: 0.21875, y: 0.78125 },\n  { x: 0.28125, y: 0.78125 },\n  { x: 0.28125, y: 0.78125 },\n  { x: 0.34375, y: 0.78125 },\n  { x: 0.34375, y: 0.78125 },\n  { x: 0.40625, y: 0.78125 },\n  { x: 0.40625, y: 0.78125 },\n  { x: 0.46875, y: 0.78125 },\n  { x: 0.46875, y: 0.78125 },\n  { x: 0.53125, y: 0.78125 },\n  { x: 0.53125, y: 0.78125 },\n  { x: 0.59375, y: 0.78125 },\n  { x: 0.59375, y: 0.78125 },\n  { x: 0.65625, y: 0.78125 },\n  { x: 0.65625, y: 0.78125 },\n  { x: 0.71875, y: 0.78125 },\n  { x: 0.71875, y: 0.78125 },\n  { x: 0.78125, y: 0.78125 },\n  { x: 0.78125, y: 0.78125 },\n  { x: 0.84375, y: 0.78125 },\n  { x: 0.84375, y: 0.78125 },\n  { x: 0.90625, y: 0.78125 },\n  { x: 0.90625, y: 0.78125 },\n  { x: 0.96875, y: 0.78125 },\n  { x: 0.96875, y: 0.78125 },\n  { x: 0.03125, y: 0.84375 },\n  { x: 0.03125, y: 0.84375 },\n  { x: 0.09375, y: 0.84375 },\n  { x: 0.09375, y: 0.84375 },\n  { x: 0.15625, y: 0.84375 },\n  { x: 0.15625, y: 0.84375 },\n  { x: 0.21875, y: 0.84375 },\n  { x: 0.21875, y: 0.84375 },\n  { x: 0.28125, y: 0.84375 },\n  { x: 0.28125, y: 0.84375 },\n  { x: 0.34375, y: 0.84375 },\n  { x: 0.34375, y: 0.84375 },\n  { x: 0.40625, y: 0.84375 },\n  { x: 0.40625, y: 0.84375 },\n  { x: 0.46875, y: 0.84375 },\n  { x: 0.46875, y: 0.84375 },\n  { x: 0.53125, y: 0.84375 },\n  { x: 0.53125, y: 0.84375 },\n  { x: 0.59375, y: 0.84375 },\n  { x: 0.59375, y: 0.84375 },\n  { x: 0.65625, y: 0.84375 },\n  { x: 0.65625, y: 0.84375 },\n  { x: 0.71875, y: 0.84375 },\n  { x: 0.71875, y: 0.84375 },\n  { x: 0.78125, y: 0.84375 },\n  { x: 0.78125, y: 0.84375 },\n  { x: 0.84375, y: 0.84375 },\n  { x: 0.84375, y: 0.84375 },\n  { x: 0.90625, y: 0.84375 },\n  { x: 0.90625, y: 0.84375 },\n  { x: 0.96875, y: 0.84375 },\n  { x: 0.96875, y: 0.84375 },\n  { x: 0.03125, y: 0.90625 },\n  { x: 0.03125, y: 0.90625 },\n  { x: 0.09375, y: 0.90625 },\n  { x: 0.09375, y: 0.90625 },\n  { x: 0.15625, y: 0.90625 },\n  { x: 0.15625, y: 0.90625 },\n  { x: 0.21875, y: 0.90625 },\n  { x: 0.21875, y: 0.90625 },\n  { x: 0.28125, y: 0.90625 },\n  { x: 0.28125, y: 0.90625 },\n  { x: 0.34375, y: 0.90625 },\n  { x: 0.34375, y: 0.90625 },\n  { x: 0.40625, y: 0.90625 },\n  { x: 0.40625, y: 0.90625 },\n  { x: 0.46875, y: 0.90625 },\n  { x: 0.46875, y: 0.90625 },\n  { x: 0.53125, y: 0.90625 },\n  { x: 0.53125, y: 0.90625 },\n  { x: 0.59375, y: 0.90625 },\n  { x: 0.59375, y: 0.90625 },\n  { x: 0.65625, y: 0.90625 },\n  { x: 0.65625, y: 0.90625 },\n  { x: 0.71875, y: 0.90625 },\n  { x: 0.71875, y: 0.90625 },\n  { x: 0.78125, y: 0.90625 },\n  { x: 0.78125, y: 0.90625 },\n  { x: 0.84375, y: 0.90625 },\n  { x: 0.84375, y: 0.90625 },\n  { x: 0.90625, y: 0.90625 },\n  { x: 0.90625, y: 0.90625 },\n  { x: 0.96875, y: 0.90625 },\n  { x: 0.96875, y: 0.90625 },\n  { x: 0.03125, y: 0.96875 },\n  { x: 0.03125, y: 0.96875 },\n  { x: 0.09375, y: 0.96875 },\n  { x: 0.09375, y: 0.96875 },\n  { x: 0.15625, y: 0.96875 },\n  { x: 0.15625, y: 0.96875 },\n  { x: 0.21875, y: 0.96875 },\n  { x: 0.21875, y: 0.96875 },\n  { x: 0.28125, y: 0.96875 },\n  { x: 0.28125, y: 0.96875 },\n  { x: 0.34375, y: 0.96875 },\n  { x: 0.34375, y: 0.96875 },\n  { x: 0.40625, y: 0.96875 },\n  { x: 0.40625, y: 0.96875 },\n  { x: 0.46875, y: 0.96875 },\n  { x: 0.46875, y: 0.96875 },\n  { x: 0.53125, y: 0.96875 },\n  { x: 0.53125, y: 0.96875 },\n  { x: 0.59375, y: 0.96875 },\n  { x: 0.59375, y: 0.96875 },\n  { x: 0.65625, y: 0.96875 },\n  { x: 0.65625, y: 0.96875 },\n  { x: 0.71875, y: 0.96875 },\n  { x: 0.71875, y: 0.96875 },\n  { x: 0.78125, y: 0.96875 },\n  { x: 0.78125, y: 0.96875 },\n  { x: 0.84375, y: 0.96875 },\n  { x: 0.84375, y: 0.96875 },\n  { x: 0.90625, y: 0.96875 },\n  { x: 0.90625, y: 0.96875 },\n  { x: 0.96875, y: 0.96875 },\n  { x: 0.96875, y: 0.96875 },\n  { x: 0.0625, y: 0.0625 },\n  { x: 0.0625, y: 0.0625 },\n  { x: 0.0625, y: 0.0625 },\n  { x: 0.0625, y: 0.0625 },\n  { x: 0.0625, y: 0.0625 },\n  { x: 0.0625, y: 0.0625 },\n  { x: 0.1875, y: 0.0625 },\n  { x: 0.1875, y: 0.0625 },\n  { x: 0.1875, y: 0.0625 },\n  { x: 0.1875, y: 0.0625 },\n  { x: 0.1875, y: 0.0625 },\n  { x: 0.1875, y: 0.0625 },\n  { x: 0.3125, y: 0.0625 },\n  { x: 0.3125, y: 0.0625 },\n  { x: 0.3125, y: 0.0625 },\n  { x: 0.3125, y: 0.0625 },\n  { x: 0.3125, y: 0.0625 },\n  { x: 0.3125, y: 0.0625 },\n  { x: 0.4375, y: 0.0625 },\n  { x: 0.4375, y: 0.0625 },\n  { x: 0.4375, y: 0.0625 },\n  { x: 0.4375, y: 0.0625 },\n  { x: 0.4375, y: 0.0625 },\n  { x: 0.4375, y: 0.0625 },\n  { x: 0.5625, y: 0.0625 },\n  { x: 0.5625, y: 0.0625 },\n  { x: 0.5625, y: 0.0625 },\n  { x: 0.5625, y: 0.0625 },\n  { x: 0.5625, y: 0.0625 },\n  { x: 0.5625, y: 0.0625 },\n  { x: 0.6875, y: 0.0625 },\n  { x: 0.6875, y: 0.0625 },\n  { x: 0.6875, y: 0.0625 },\n  { x: 0.6875, y: 0.0625 },\n  { x: 0.6875, y: 0.0625 },\n  { x: 0.6875, y: 0.0625 },\n  { x: 0.8125, y: 0.0625 },\n  { x: 0.8125, y: 0.0625 },\n  { x: 0.8125, y: 0.0625 },\n  { x: 0.8125, y: 0.0625 },\n  { x: 0.8125, y: 0.0625 },\n  { x: 0.8125, y: 0.0625 },\n  { x: 0.9375, y: 0.0625 },\n  { x: 0.9375, y: 0.0625 },\n  { x: 0.9375, y: 0.0625 },\n  { x: 0.9375, y: 0.0625 },\n  { x: 0.9375, y: 0.0625 },\n  { x: 0.9375, y: 0.0625 },\n  { x: 0.0625, y: 0.1875 },\n  { x: 0.0625, y: 0.1875 },\n  { x: 0.0625, y: 0.1875 },\n  { x: 0.0625, y: 0.1875 },\n  { x: 0.0625, y: 0.1875 },\n  { x: 0.0625, y: 0.1875 },\n  { x: 0.1875, y: 0.1875 },\n  { x: 0.1875, y: 0.1875 },\n  { x: 0.1875, y: 0.1875 },\n  { x: 0.1875, y: 0.1875 },\n  { x: 0.1875, y: 0.1875 },\n  { x: 0.1875, y: 0.1875 },\n  { x: 0.3125, y: 0.1875 },\n  { x: 0.3125, y: 0.1875 },\n  { x: 0.3125, y: 0.1875 },\n  { x: 0.3125, y: 0.1875 },\n  { x: 0.3125, y: 0.1875 },\n  { x: 0.3125, y: 0.1875 },\n  { x: 0.4375, y: 0.1875 },\n  { x: 0.4375, y: 0.1875 },\n  { x: 0.4375, y: 0.1875 },\n  { x: 0.4375, y: 0.1875 },\n  { x: 0.4375, y: 0.1875 },\n  { x: 0.4375, y: 0.1875 },\n  { x: 0.5625, y: 0.1875 },\n  { x: 0.5625, y: 0.1875 },\n  { x: 0.5625, y: 0.1875 },\n  { x: 0.5625, y: 0.1875 },\n  { x: 0.5625, y: 0.1875 },\n  { x: 0.5625, y: 0.1875 },\n  { x: 0.6875, y: 0.1875 },\n  { x: 0.6875, y: 0.1875 },\n  { x: 0.6875, y: 0.1875 },\n  { x: 0.6875, y: 0.1875 },\n  { x: 0.6875, y: 0.1875 },\n  { x: 0.6875, y: 0.1875 },\n  { x: 0.8125, y: 0.1875 },\n  { x: 0.8125, y: 0.1875 },\n  { x: 0.8125, y: 0.1875 },\n  { x: 0.8125, y: 0.1875 },\n  { x: 0.8125, y: 0.1875 },\n  { x: 0.8125, y: 0.1875 },\n  { x: 0.9375, y: 0.1875 },\n  { x: 0.9375, y: 0.1875 },\n  { x: 0.9375, y: 0.1875 },\n  { x: 0.9375, y: 0.1875 },\n  { x: 0.9375, y: 0.1875 },\n  { x: 0.9375, y: 0.1875 },\n  { x: 0.0625, y: 0.3125 },\n  { x: 0.0625, y: 0.3125 },\n  { x: 0.0625, y: 0.3125 },\n  { x: 0.0625, y: 0.3125 },\n  { x: 0.0625, y: 0.3125 },\n  { x: 0.0625, y: 0.3125 },\n  { x: 0.1875, y: 0.3125 },\n  { x: 0.1875, y: 0.3125 },\n  { x: 0.1875, y: 0.3125 },\n  { x: 0.1875, y: 0.3125 },\n  { x: 0.1875, y: 0.3125 },\n  { x: 0.1875, y: 0.3125 },\n  { x: 0.3125, y: 0.3125 },\n  { x: 0.3125, y: 0.3125 },\n  { x: 0.3125, y: 0.3125 },\n  { x: 0.3125, y: 0.3125 },\n  { x: 0.3125, y: 0.3125 },\n  { x: 0.3125, y: 0.3125 },\n  { x: 0.4375, y: 0.3125 },\n  { x: 0.4375, y: 0.3125 },\n  { x: 0.4375, y: 0.3125 },\n  { x: 0.4375, y: 0.3125 },\n  { x: 0.4375, y: 0.3125 },\n  { x: 0.4375, y: 0.3125 },\n  { x: 0.5625, y: 0.3125 },\n  { x: 0.5625, y: 0.3125 },\n  { x: 0.5625, y: 0.3125 },\n  { x: 0.5625, y: 0.3125 },\n  { x: 0.5625, y: 0.3125 },\n  { x: 0.5625, y: 0.3125 },\n  { x: 0.6875, y: 0.3125 },\n  { x: 0.6875, y: 0.3125 },\n  { x: 0.6875, y: 0.3125 },\n  { x: 0.6875, y: 0.3125 },\n  { x: 0.6875, y: 0.3125 },\n  { x: 0.6875, y: 0.3125 },\n  { x: 0.8125, y: 0.3125 },\n  { x: 0.8125, y: 0.3125 },\n  { x: 0.8125, y: 0.3125 },\n  { x: 0.8125, y: 0.3125 },\n  { x: 0.8125, y: 0.3125 },\n  { x: 0.8125, y: 0.3125 },\n  { x: 0.9375, y: 0.3125 },\n  { x: 0.9375, y: 0.3125 },\n  { x: 0.9375, y: 0.3125 },\n  { x: 0.9375, y: 0.3125 },\n  { x: 0.9375, y: 0.3125 },\n  { x: 0.9375, y: 0.3125 },\n  { x: 0.0625, y: 0.4375 },\n  { x: 0.0625, y: 0.4375 },\n  { x: 0.0625, y: 0.4375 },\n  { x: 0.0625, y: 0.4375 },\n  { x: 0.0625, y: 0.4375 },\n  { x: 0.0625, y: 0.4375 },\n  { x: 0.1875, y: 0.4375 },\n  { x: 0.1875, y: 0.4375 },\n  { x: 0.1875, y: 0.4375 },\n  { x: 0.1875, y: 0.4375 },\n  { x: 0.1875, y: 0.4375 },\n  { x: 0.1875, y: 0.4375 },\n  { x: 0.3125, y: 0.4375 },\n  { x: 0.3125, y: 0.4375 },\n  { x: 0.3125, y: 0.4375 },\n  { x: 0.3125, y: 0.4375 },\n  { x: 0.3125, y: 0.4375 },\n  { x: 0.3125, y: 0.4375 },\n  { x: 0.4375, y: 0.4375 },\n  { x: 0.4375, y: 0.4375 },\n  { x: 0.4375, y: 0.4375 },\n  { x: 0.4375, y: 0.4375 },\n  { x: 0.4375, y: 0.4375 },\n  { x: 0.4375, y: 0.4375 },\n  { x: 0.5625, y: 0.4375 },\n  { x: 0.5625, y: 0.4375 },\n  { x: 0.5625, y: 0.4375 },\n  { x: 0.5625, y: 0.4375 },\n  { x: 0.5625, y: 0.4375 },\n  { x: 0.5625, y: 0.4375 },\n  { x: 0.6875, y: 0.4375 },\n  { x: 0.6875, y: 0.4375 },\n  { x: 0.6875, y: 0.4375 },\n  { x: 0.6875, y: 0.4375 },\n  { x: 0.6875, y: 0.4375 },\n  { x: 0.6875, y: 0.4375 },\n  { x: 0.8125, y: 0.4375 },\n  { x: 0.8125, y: 0.4375 },\n  { x: 0.8125, y: 0.4375 },\n  { x: 0.8125, y: 0.4375 },\n  { x: 0.8125, y: 0.4375 },\n  { x: 0.8125, y: 0.4375 },\n  { x: 0.9375, y: 0.4375 },\n  { x: 0.9375, y: 0.4375 },\n  { x: 0.9375, y: 0.4375 },\n  { x: 0.9375, y: 0.4375 },\n  { x: 0.9375, y: 0.4375 },\n  { x: 0.9375, y: 0.4375 },\n  { x: 0.0625, y: 0.5625 },\n  { x: 0.0625, y: 0.5625 },\n  { x: 0.0625, y: 0.5625 },\n  { x: 0.0625, y: 0.5625 },\n  { x: 0.0625, y: 0.5625 },\n  { x: 0.0625, y: 0.5625 },\n  { x: 0.1875, y: 0.5625 },\n  { x: 0.1875, y: 0.5625 },\n  { x: 0.1875, y: 0.5625 },\n  { x: 0.1875, y: 0.5625 },\n  { x: 0.1875, y: 0.5625 },\n  { x: 0.1875, y: 0.5625 },\n  { x: 0.3125, y: 0.5625 },\n  { x: 0.3125, y: 0.5625 },\n  { x: 0.3125, y: 0.5625 },\n  { x: 0.3125, y: 0.5625 },\n  { x: 0.3125, y: 0.5625 },\n  { x: 0.3125, y: 0.5625 },\n  { x: 0.4375, y: 0.5625 },\n  { x: 0.4375, y: 0.5625 },\n  { x: 0.4375, y: 0.5625 },\n  { x: 0.4375, y: 0.5625 },\n  { x: 0.4375, y: 0.5625 },\n  { x: 0.4375, y: 0.5625 },\n  { x: 0.5625, y: 0.5625 },\n  { x: 0.5625, y: 0.5625 },\n  { x: 0.5625, y: 0.5625 },\n  { x: 0.5625, y: 0.5625 },\n  { x: 0.5625, y: 0.5625 },\n  { x: 0.5625, y: 0.5625 },\n  { x: 0.6875, y: 0.5625 },\n  { x: 0.6875, y: 0.5625 },\n  { x: 0.6875, y: 0.5625 },\n  { x: 0.6875, y: 0.5625 },\n  { x: 0.6875, y: 0.5625 },\n  { x: 0.6875, y: 0.5625 },\n  { x: 0.8125, y: 0.5625 },\n  { x: 0.8125, y: 0.5625 },\n  { x: 0.8125, y: 0.5625 },\n  { x: 0.8125, y: 0.5625 },\n  { x: 0.8125, y: 0.5625 },\n  { x: 0.8125, y: 0.5625 },\n  { x: 0.9375, y: 0.5625 },\n  { x: 0.9375, y: 0.5625 },\n  { x: 0.9375, y: 0.5625 },\n  { x: 0.9375, y: 0.5625 },\n  { x: 0.9375, y: 0.5625 },\n  { x: 0.9375, y: 0.5625 },\n  { x: 0.0625, y: 0.6875 },\n  { x: 0.0625, y: 0.6875 },\n  { x: 0.0625, y: 0.6875 },\n  { x: 0.0625, y: 0.6875 },\n  { x: 0.0625, y: 0.6875 },\n  { x: 0.0625, y: 0.6875 },\n  { x: 0.1875, y: 0.6875 },\n  { x: 0.1875, y: 0.6875 },\n  { x: 0.1875, y: 0.6875 },\n  { x: 0.1875, y: 0.6875 },\n  { x: 0.1875, y: 0.6875 },\n  { x: 0.1875, y: 0.6875 },\n  { x: 0.3125, y: 0.6875 },\n  { x: 0.3125, y: 0.6875 },\n  { x: 0.3125, y: 0.6875 },\n  { x: 0.3125, y: 0.6875 },\n  { x: 0.3125, y: 0.6875 },\n  { x: 0.3125, y: 0.6875 },\n  { x: 0.4375, y: 0.6875 },\n  { x: 0.4375, y: 0.6875 },\n  { x: 0.4375, y: 0.6875 },\n  { x: 0.4375, y: 0.6875 },\n  { x: 0.4375, y: 0.6875 },\n  { x: 0.4375, y: 0.6875 },\n  { x: 0.5625, y: 0.6875 },\n  { x: 0.5625, y: 0.6875 },\n  { x: 0.5625, y: 0.6875 },\n  { x: 0.5625, y: 0.6875 },\n  { x: 0.5625, y: 0.6875 },\n  { x: 0.5625, y: 0.6875 },\n  { x: 0.6875, y: 0.6875 },\n  { x: 0.6875, y: 0.6875 },\n  { x: 0.6875, y: 0.6875 },\n  { x: 0.6875, y: 0.6875 },\n  { x: 0.6875, y: 0.6875 },\n  { x: 0.6875, y: 0.6875 },\n  { x: 0.8125, y: 0.6875 },\n  { x: 0.8125, y: 0.6875 },\n  { x: 0.8125, y: 0.6875 },\n  { x: 0.8125, y: 0.6875 },\n  { x: 0.8125, y: 0.6875 },\n  { x: 0.8125, y: 0.6875 },\n  { x: 0.9375, y: 0.6875 },\n  { x: 0.9375, y: 0.6875 },\n  { x: 0.9375, y: 0.6875 },\n  { x: 0.9375, y: 0.6875 },\n  { x: 0.9375, y: 0.6875 },\n  { x: 0.9375, y: 0.6875 },\n  { x: 0.0625, y: 0.8125 },\n  { x: 0.0625, y: 0.8125 },\n  { x: 0.0625, y: 0.8125 },\n  { x: 0.0625, y: 0.8125 },\n  { x: 0.0625, y: 0.8125 },\n  { x: 0.0625, y: 0.8125 },\n  { x: 0.1875, y: 0.8125 },\n  { x: 0.1875, y: 0.8125 },\n  { x: 0.1875, y: 0.8125 },\n  { x: 0.1875, y: 0.8125 },\n  { x: 0.1875, y: 0.8125 },\n  { x: 0.1875, y: 0.8125 },\n  { x: 0.3125, y: 0.8125 },\n  { x: 0.3125, y: 0.8125 },\n  { x: 0.3125, y: 0.8125 },\n  { x: 0.3125, y: 0.8125 },\n  { x: 0.3125, y: 0.8125 },\n  { x: 0.3125, y: 0.8125 },\n  { x: 0.4375, y: 0.8125 },\n  { x: 0.4375, y: 0.8125 },\n  { x: 0.4375, y: 0.8125 },\n  { x: 0.4375, y: 0.8125 },\n  { x: 0.4375, y: 0.8125 },\n  { x: 0.4375, y: 0.8125 },\n  { x: 0.5625, y: 0.8125 },\n  { x: 0.5625, y: 0.8125 },\n  { x: 0.5625, y: 0.8125 },\n  { x: 0.5625, y: 0.8125 },\n  { x: 0.5625, y: 0.8125 },\n  { x: 0.5625, y: 0.8125 },\n  { x: 0.6875, y: 0.8125 },\n  { x: 0.6875, y: 0.8125 },\n  { x: 0.6875, y: 0.8125 },\n  { x: 0.6875, y: 0.8125 },\n  { x: 0.6875, y: 0.8125 },\n  { x: 0.6875, y: 0.8125 },\n  { x: 0.8125, y: 0.8125 },\n  { x: 0.8125, y: 0.8125 },\n  { x: 0.8125, y: 0.8125 },\n  { x: 0.8125, y: 0.8125 },\n  { x: 0.8125, y: 0.8125 },\n  { x: 0.8125, y: 0.8125 },\n  { x: 0.9375, y: 0.8125 },\n  { x: 0.9375, y: 0.8125 },\n  { x: 0.9375, y: 0.8125 },\n  { x: 0.9375, y: 0.8125 },\n  { x: 0.9375, y: 0.8125 },\n  { x: 0.9375, y: 0.8125 },\n  { x: 0.0625, y: 0.9375 },\n  { x: 0.0625, y: 0.9375 },\n  { x: 0.0625, y: 0.9375 },\n  { x: 0.0625, y: 0.9375 },\n  { x: 0.0625, y: 0.9375 },\n  { x: 0.0625, y: 0.9375 },\n  { x: 0.1875, y: 0.9375 },\n  { x: 0.1875, y: 0.9375 },\n  { x: 0.1875, y: 0.9375 },\n  { x: 0.1875, y: 0.9375 },\n  { x: 0.1875, y: 0.9375 },\n  { x: 0.1875, y: 0.9375 },\n  { x: 0.3125, y: 0.9375 },\n  { x: 0.3125, y: 0.9375 },\n  { x: 0.3125, y: 0.9375 },\n  { x: 0.3125, y: 0.9375 },\n  { x: 0.3125, y: 0.9375 },\n  { x: 0.3125, y: 0.9375 },\n  { x: 0.4375, y: 0.9375 },\n  { x: 0.4375, y: 0.9375 },\n  { x: 0.4375, y: 0.9375 },\n  { x: 0.4375, y: 0.9375 },\n  { x: 0.4375, y: 0.9375 },\n  { x: 0.4375, y: 0.9375 },\n  { x: 0.5625, y: 0.9375 },\n  { x: 0.5625, y: 0.9375 },\n  { x: 0.5625, y: 0.9375 },\n  { x: 0.5625, y: 0.9375 },\n  { x: 0.5625, y: 0.9375 },\n  { x: 0.5625, y: 0.9375 },\n  { x: 0.6875, y: 0.9375 },\n  { x: 0.6875, y: 0.9375 },\n  { x: 0.6875, y: 0.9375 },\n  { x: 0.6875, y: 0.9375 },\n  { x: 0.6875, y: 0.9375 },\n  { x: 0.6875, y: 0.9375 },\n  { x: 0.8125, y: 0.9375 },\n  { x: 0.8125, y: 0.9375 },\n  { x: 0.8125, y: 0.9375 },\n  { x: 0.8125, y: 0.9375 },\n  { x: 0.8125, y: 0.9375 },\n  { x: 0.8125, y: 0.9375 },\n  { x: 0.9375, y: 0.9375 },\n  { x: 0.9375, y: 0.9375 },\n  { x: 0.9375, y: 0.9375 },\n  { x: 0.9375, y: 0.9375 },\n  { x: 0.9375, y: 0.9375 },\n  { x: 0.9375, y: 0.9375 },\n];\n", "/**\n * HandPose model implementation\n * See `handpose.ts` for entry point\n */\n\nimport * as tf from '../../dist/tfjs.esm.js';\nimport * as util from './handposeutil';\nimport * as anchors from './handposeanchors';\nimport { constants } from '../tfjs/constants';\nimport type { Tensor, GraphModel } from '../tfjs/types';\nimport type { Point } from '../result';\nimport type { Config } from '../config';\n\nexport class HandDetector {\n  model: GraphModel;\n  anchors: number[][];\n  anchorsTensor: Tensor;\n  inputSize: number;\n  inputSizeTensor: Tensor;\n  doubleInputSizeTensor: Tensor;\n\n  constructor(model: GraphModel) {\n    this.model = model;\n    this.anchors = anchors.anchors.map((anchor) => [anchor.x, anchor.y]);\n    this.anchorsTensor = tf.tensor2d(this.anchors);\n    this.inputSize = this?.model?.inputs?.[0]?.shape?.[2] || 0;\n    this.inputSizeTensor = tf.tensor1d([this.inputSize, this.inputSize]);\n    this.doubleInputSizeTensor = tf.tensor1d([this.inputSize * 2, this.inputSize * 2]);\n  }\n\n  normalizeBoxes(boxes) {\n    const t: Record<string, Tensor> = {};\n    t.boxOffsets = tf.slice(boxes, [0, 0], [-1, 2]);\n    t.boxSizes = tf.slice(boxes, [0, 2], [-1, 2]);\n    t.div = tf.div(t.boxOffsets, this.inputSizeTensor);\n    t.boxCenterPoints = tf.add(t.div, this.anchorsTensor);\n    t.halfBoxSizes = tf.div(t.boxSizes, this.doubleInputSizeTensor);\n    t.sub = tf.sub(t.boxCenterPoints, t.halfBoxSizes);\n    t.startPoints = tf.mul(t.sub, this.inputSizeTensor);\n    t.add = tf.add(t.boxCenterPoints, t.halfBoxSizes);\n    t.endPoints = tf.mul(t.add, this.inputSizeTensor);\n    const res = tf.concat2d([t.startPoints, t.endPoints], 1);\n    Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n    return res as Tensor;\n  }\n\n  normalizeLandmarks(rawPalmLandmarks, index: number) {\n    const t: Record<string, Tensor> = {};\n    t.reshape = tf.reshape(rawPalmLandmarks, [-1, 7, 2]);\n    t.div = tf.div(t.reshape, this.inputSizeTensor);\n    t.landmarks = tf.add(t.div, this.anchors[index] ? this.anchors[index] : 0);\n    const res = tf.mul(t.landmarks, this.inputSizeTensor);\n    Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n    return res as Tensor;\n  }\n\n  async predict(input: Tensor, config: Config): Promise<{ startPoint: Point; endPoint: Point, palmLandmarks: Point[]; confidence: number }[]> {\n    const t: Record<string, Tensor> = {};\n    t.resize = tf.image.resizeBilinear(input, [this.inputSize, this.inputSize]);\n    t.div = tf.div(t.resize, constants.tf127);\n    t.image = tf.sub(t.div, constants.tf1);\n    t.batched = this.model.execute(t.image) as Tensor;\n    t.predictions = tf.squeeze(t.batched);\n    t.slice = tf.slice(t.predictions, [0, 0], [-1, 1]);\n    t.sigmoid = tf.sigmoid(t.slice);\n    t.scores = tf.squeeze(t.sigmoid);\n    const scores = await t.scores.data();\n    t.boxes = tf.slice(t.predictions, [0, 1], [-1, 4]);\n    t.norm = this.normalizeBoxes(t.boxes);\n    // box detection is flaky so we look for 3x boxes than we need results\n    t.nms = await tf.image.nonMaxSuppressionAsync(t.norm, t.scores, 3 * (config.hand?.maxDetected || 1), config.hand.iouThreshold, config.hand.minConfidence);\n    const nms = await t.nms.array() as number[];\n    const hands: { startPoint: Point; endPoint: Point; palmLandmarks: Point[]; confidence: number }[] = [];\n    for (const index of nms) {\n      const p: Record<string, Tensor> = {};\n      p.box = tf.slice(t.norm, [index, 0], [1, -1]);\n      p.slice = tf.slice(t.predictions, [index, 5], [1, 14]);\n      p.norm = this.normalizeLandmarks(p.slice, index);\n      p.palmLandmarks = tf.reshape(p.norm, [-1, 2]);\n      const box = await p.box.data();\n      const startPoint = box.slice(0, 2) as unknown as Point;\n      const endPoint = box.slice(2, 4) as unknown as Point;\n      const palmLandmarks = await p.palmLandmarks.array();\n      const hand = { startPoint, endPoint, palmLandmarks, confidence: scores[index] };\n      const scaled = util.scaleBoxCoordinates(hand, [(input.shape[2] || 1) / this.inputSize, (input.shape[1] || 0) / this.inputSize]);\n      hands.push(scaled);\n      Object.keys(p).forEach((tensor) => tf.dispose(p[tensor]));\n    }\n    Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n    return hands;\n  }\n}\n", "/**\n * HandPose model implementation\n * See `handpose.ts` for entry point\n */\n\nimport * as tf from '../../dist/tfjs.esm.js';\nimport * as util from './handposeutil';\nimport type * as detector from './handposedetector';\nimport { constants } from '../tfjs/constants';\nimport type { Tensor, GraphModel } from '../tfjs/types';\nimport { env } from '../util/env';\nimport { now } from '../util/util';\nimport type { Point } from '../result';\n\nconst palmBoxEnlargeFactor = 5; // default 3\nconst handBoxEnlargeFactor = 1.65; // default 1.65\nconst palmLandmarkIds = [0, 5, 9, 13, 17, 1, 2];\nconst palmLandmarksPalmBase = 0;\nconst palmLandmarksMiddleFingerBase = 2;\nlet lastTime = 0;\n\nexport class HandPipeline {\n  handDetector: detector.HandDetector;\n  handPoseModel: GraphModel;\n  inputSize: number;\n  storedBoxes: ({ startPoint: Point; endPoint: Point; palmLandmarks: Point[]; confidence: number } | null)[];\n  skipped: number;\n  detectedHands: number;\n\n  constructor(handDetector, handPoseModel) {\n    this.handDetector = handDetector;\n    this.handPoseModel = handPoseModel;\n    this.inputSize = this.handPoseModel?.inputs?.[0].shape?.[2] || 0;\n    this.storedBoxes = [];\n    this.skipped = Number.MAX_SAFE_INTEGER;\n    this.detectedHands = 0;\n  }\n\n  calculateLandmarksBoundingBox(landmarks) { // eslint-disable-line class-methods-use-this\n    const xs = landmarks.map((d) => d[0]);\n    const ys = landmarks.map((d) => d[1]);\n    const startPoint = [Math.min(...xs), Math.min(...ys)];\n    const endPoint = [Math.max(...xs), Math.max(...ys)];\n    return { startPoint, endPoint };\n  }\n\n  getBoxForPalmLandmarks(palmLandmarks, rotationMatrix) {\n    const rotatedPalmLandmarks = palmLandmarks.map((coord) => util.rotatePoint([...coord, 1], rotationMatrix));\n    const boxAroundPalm = this.calculateLandmarksBoundingBox(rotatedPalmLandmarks);\n    return util.enlargeBox(util.squarifyBox(boxAroundPalm), palmBoxEnlargeFactor);\n  }\n\n  getBoxForHandLandmarks(landmarks) {\n    const boundingBox = this.calculateLandmarksBoundingBox(landmarks);\n    const boxAroundHand = util.enlargeBox(util.squarifyBox(boundingBox), handBoxEnlargeFactor);\n    boxAroundHand.palmLandmarks = [];\n    for (let i = 0; i < palmLandmarkIds.length; i++) {\n      boxAroundHand.palmLandmarks.push(landmarks[palmLandmarkIds[i]].slice(0, 2));\n    }\n    return boxAroundHand;\n  }\n\n  transformRawCoords(rawCoords, box2, angle, rotationMatrix) {\n    const boxSize = util.getBoxSize(box2);\n    const scaleFactor = [boxSize[0] / this.inputSize, boxSize[1] / this.inputSize, (boxSize[0] + boxSize[1]) / this.inputSize / 2];\n    const coordsScaled = rawCoords.map((coord) => [\n      scaleFactor[0] * (coord[0] - this.inputSize / 2),\n      scaleFactor[1] * (coord[1] - this.inputSize / 2),\n      scaleFactor[2] * coord[2],\n    ]);\n    const coordsRotationMatrix = util.buildRotationMatrix(angle, [0, 0]);\n    const coordsRotated = coordsScaled.map((coord) => {\n      const rotated = util.rotatePoint(coord, coordsRotationMatrix);\n      return [...rotated, coord[2]];\n    });\n    const inverseRotationMatrix = util.invertTransformMatrix(rotationMatrix);\n    const boxCenter = [...util.getBoxCenter(box2), 1];\n    const originalBoxCenter = [\n      util.dot(boxCenter, inverseRotationMatrix[0]),\n      util.dot(boxCenter, inverseRotationMatrix[1]),\n    ];\n    return coordsRotated.map((coord) => [\n      Math.trunc(coord[0] + originalBoxCenter[0]),\n      Math.trunc(coord[1] + originalBoxCenter[1]),\n      Math.trunc(coord[2]),\n    ]);\n  }\n\n  async estimateHands(image, config) {\n    let useFreshBox = false;\n\n    // run new detector every skipFrames\n    let boxes;\n    const skipTime = (config.hand.skipTime || 0) > (now() - lastTime);\n    const skipFrame = this.skipped < (config.hand.skipFrames || 0);\n    if (config.skipAllowed && skipTime && skipFrame) {\n      boxes = await this.handDetector.predict(image, config);\n      this.skipped = 0;\n    }\n    if (config.skipAllowed) this.skipped++;\n\n    // if detector result count doesn't match current working set, use it to reset current working set\n    if (boxes && (boxes.length > 0) && ((boxes.length !== this.detectedHands) && (this.detectedHands !== config.hand.maxDetected) || !config.hand.landmarks)) {\n      this.detectedHands = 0;\n      this.storedBoxes = [...boxes];\n      // for (const possible of boxes) this.storedBoxes.push(possible);\n      if (this.storedBoxes.length > 0) useFreshBox = true;\n    }\n    const hands: { landmarks: Point[], confidence: number, boxConfidence: number, fingerConfidence: number, box: { topLeft: Point, bottomRight: Point } }[] = [];\n\n    // go through working set of boxes\n    for (let i = 0; i < this.storedBoxes.length; i++) {\n      const currentBox = this.storedBoxes[i];\n      if (!currentBox) continue;\n      if (config.hand.landmarks) {\n        const angle = config.hand.rotation ? util.computeRotation(currentBox.palmLandmarks[palmLandmarksPalmBase], currentBox.palmLandmarks[palmLandmarksMiddleFingerBase]) : 0;\n        const palmCenter = util.getBoxCenter(currentBox);\n        const palmCenterNormalized = [palmCenter[0] / image.shape[2], palmCenter[1] / image.shape[1]];\n        const rotatedImage = config.hand.rotation && env.kernels.includes('rotatewithoffset') ? tf.image.rotateWithOffset(image, angle, 0, palmCenterNormalized) : image.clone();\n        const rotationMatrix = util.buildRotationMatrix(-angle, palmCenter);\n        const newBox = useFreshBox ? this.getBoxForPalmLandmarks(currentBox.palmLandmarks, rotationMatrix) : currentBox;\n        const croppedInput = util.cutBoxFromImageAndResize(newBox, rotatedImage, [this.inputSize, this.inputSize]);\n        const handImage = tf.div(croppedInput, constants.tf255);\n        tf.dispose(croppedInput);\n        tf.dispose(rotatedImage);\n        const [confidenceT, keypoints] = this.handPoseModel.execute(handImage) as Tensor[];\n        lastTime = now();\n        tf.dispose(handImage);\n        const confidence = (await confidenceT.data())[0];\n        tf.dispose(confidenceT);\n        if (confidence >= config.hand.minConfidence / 4) {\n          const keypointsReshaped = tf.reshape(keypoints, [-1, 3]);\n          const rawCoords = await keypointsReshaped.array();\n          tf.dispose(keypoints);\n          tf.dispose(keypointsReshaped);\n          const coords = this.transformRawCoords(rawCoords, newBox, angle, rotationMatrix);\n          const nextBoundingBox = this.getBoxForHandLandmarks(coords);\n          this.storedBoxes[i] = { ...nextBoundingBox, confidence };\n          const result = {\n            landmarks: coords,\n            confidence,\n            boxConfidence: currentBox.confidence,\n            fingerConfidence: confidence,\n            box: { topLeft: nextBoundingBox.startPoint, bottomRight: nextBoundingBox.endPoint },\n          };\n          hands.push(result);\n        } else {\n          this.storedBoxes[i] = null;\n        }\n        tf.dispose(keypoints);\n      } else {\n        // const enlarged = box.enlargeBox(box.squarifyBox(box.shiftBox(currentBox, HAND_BOX_SHIFT_VECTOR)), handBoxEnlargeFactor);\n        const enlarged = util.enlargeBox(util.squarifyBox(currentBox), handBoxEnlargeFactor);\n        const result = {\n          confidence: currentBox.confidence,\n          boxConfidence: currentBox.confidence,\n          fingerConfidence: 0,\n          box: { topLeft: enlarged.startPoint, bottomRight: enlarged.endPoint },\n          landmarks: [],\n        };\n        hands.push(result);\n      }\n    }\n    this.storedBoxes = this.storedBoxes.filter((a) => a !== null);\n    this.detectedHands = hands.length;\n    if (hands.length > config.hand.maxDetected) hands.length = config.hand.maxDetected;\n    return hands;\n  }\n}\n", "/**\n * FingerPose algorithm implementation\n * See `fingerpose.ts` for entry point\n */\n\nexport const Finger = {\n  thumb: 0,\n  index: 1,\n  middle: 2,\n  ring: 3,\n  pinky: 4,\n  all: [0, 1, 2, 3, 4], // just for convenience\n  nameMapping: { 0: 'thumb', 1: 'index', 2: 'middle', 3: 'ring', 4: 'pinky' },\n  // Describes mapping of joints based on the 21 points returned by handpose.\n  // [0]     Palm\n  // [1-4]   Thumb\n  // [5-8]   Index\n  // [9-12]  Middle\n  // [13-16] Ring\n  // [17-20] Pinky\n  pointsMapping: {\n    0: [[0, 1], [1, 2], [2, 3], [3, 4]],\n    1: [[0, 5], [5, 6], [6, 7], [7, 8]],\n    2: [[0, 9], [9, 10], [10, 11], [11, 12]],\n    3: [[0, 13], [13, 14], [14, 15], [15, 16]],\n    4: [[0, 17], [17, 18], [18, 19], [19, 20]],\n  },\n  getName: (value) => Finger.nameMapping[value],\n  getPoints: (value) => Finger.pointsMapping[value],\n};\n\nexport const FingerCurl = {\n  none: 0,\n  half: 1,\n  full: 2,\n  nameMapping: { 0: 'none', 1: 'half', 2: 'full' },\n  getName: (value) => FingerCurl.nameMapping[value],\n};\n\nexport const FingerDirection = {\n  verticalUp: 0,\n  verticalDown: 1,\n  horizontalLeft: 2,\n  horizontalRight: 3,\n  diagonalUpRight: 4,\n  diagonalUpLeft: 5,\n  diagonalDownRight: 6,\n  diagonalDownLeft: 7,\n  nameMapping: { 0: 'verticalUp', 1: 'verticalDown', 2: 'horizontalLeft', 3: 'horizontalRight', 4: 'diagonalUpRight', 5: 'diagonalUpLeft', 6: 'diagonalDownRight', 7: 'diagonalDownLeft' },\n  getName: (value) => FingerDirection.nameMapping[value],\n};\n\nexport class FingerGesture {\n  name;\n  curls;\n  directions;\n  weights;\n  weightsRelative;\n\n  constructor(name) {\n    // name (should be unique)\n    this.name = name;\n    this.curls = {};\n    this.directions = {};\n    this.weights = [1.0, 1.0, 1.0, 1.0, 1.0];\n    this.weightsRelative = [1.0, 1.0, 1.0, 1.0, 1.0];\n  }\n\n  curl(finger, curl, confidence) {\n    if (typeof this.curls[finger] === 'undefined') this.curls[finger] = [];\n    this.curls[finger].push([curl, confidence]);\n  }\n\n  direction(finger, position, confidence) {\n    if (!this.directions[finger]) this.directions[finger] = [];\n    this.directions[finger].push([position, confidence]);\n  }\n\n  weight(finger, weight) {\n    this.weights[finger] = weight;\n    // recalculate relative weights\n    const total = this.weights.reduce((a, b) => a + b, 0);\n    this.weightsRelative = this.weights.map((el) => el * 5 / total);\n  }\n\n  matchAgainst(detectedCurls, detectedDirections) {\n    let confidence = 0.0;\n    // look at the detected curl of each finger and compare with\n    // the expected curl of this finger inside current gesture\n    for (const fingerIdx in detectedCurls) {\n      const detectedCurl = detectedCurls[fingerIdx];\n      const expectedCurls = this.curls[fingerIdx];\n      if (typeof expectedCurls === 'undefined') {\n        // no curl description available for this finger\n        // add default confidence of \"1\"\n        confidence += this.weightsRelative[fingerIdx];\n        continue;\n      }\n      // compare to each possible curl of this specific finger\n      for (const [expectedCurl, score] of expectedCurls) {\n        if (detectedCurl === expectedCurl) {\n          confidence += score * this.weightsRelative[fingerIdx];\n          break;\n        }\n      }\n    }\n    // same for detected direction of each finger\n    for (const fingerIdx in detectedDirections) {\n      const detectedDirection = detectedDirections[fingerIdx];\n      const expectedDirections = this.directions[fingerIdx];\n      if (typeof expectedDirections === 'undefined') {\n        // no direction description available for this finger\n        // add default confidence of \"1\"\n        confidence += this.weightsRelative[fingerIdx];\n        continue;\n      }\n      // compare to each possible direction of this specific finger\n      for (const [expectedDirection, score] of expectedDirections) {\n        if (detectedDirection === expectedDirection) {\n          confidence += score * this.weightsRelative[fingerIdx];\n          break;\n        }\n      }\n    }\n    return confidence / 10;\n  }\n}\n", "/**\n * FingerPose algorithm implementation\n * See `fingerpose.ts` for entry point\n */\n\nimport { Finger, FingerCurl, FingerDirection, FingerGesture } from './fingerdef';\n\nexport const { thumb, index, middle, ring, pinky } = Finger;\nexport const { none, half, full } = FingerCurl;\nexport const { verticalUp, verticalDown, horizontalLeft, horizontalRight, diagonalUpRight, diagonalUpLeft, diagonalDownRight, diagonalDownLeft } = FingerDirection;\n\n// describe thumbs up gesture \uD83D\uDC4D\nconst ThumbsUp = new FingerGesture('thumbs up');\nThumbsUp.curl(thumb, none, 1.0);\nThumbsUp.direction(thumb, verticalUp, 1.0);\nThumbsUp.direction(thumb, diagonalUpLeft, 0.25);\nThumbsUp.direction(thumb, diagonalUpRight, 0.25);\nfor (const finger of [Finger.index, Finger.middle, Finger.ring, Finger.pinky]) {\n  ThumbsUp.curl(finger, full, 1.0);\n  ThumbsUp.direction(finger, horizontalLeft, 1.0);\n  ThumbsUp.direction(finger, horizontalRight, 1.0);\n}\n\n// describe Victory gesture \u270C\uFE0F\nconst Victory = new FingerGesture('victory');\nVictory.curl(thumb, half, 0.5);\nVictory.curl(thumb, none, 0.5);\nVictory.direction(thumb, verticalUp, 1.0);\nVictory.direction(thumb, diagonalUpLeft, 1.0);\nVictory.curl(index, none, 1.0);\nVictory.direction(index, verticalUp, 0.75);\nVictory.direction(index, diagonalUpLeft, 1.0);\nVictory.curl(middle, none, 1.0);\nVictory.direction(middle, verticalUp, 1.0);\nVictory.direction(middle, diagonalUpLeft, 0.75);\nVictory.curl(ring, full, 1.0);\nVictory.direction(ring, verticalUp, 0.2);\nVictory.direction(ring, diagonalUpLeft, 1.0);\nVictory.direction(ring, horizontalLeft, 0.2);\nVictory.curl(pinky, full, 1.0);\nVictory.direction(pinky, verticalUp, 0.2);\nVictory.direction(pinky, diagonalUpLeft, 1.0);\nVictory.direction(pinky, horizontalLeft, 0.2);\nVictory.weight(index, 2);\nVictory.weight(middle, 2);\n\n// describe Point gesture \u270C\uFE0F\nconst Point = new FingerGesture('point');\nPoint.curl(thumb, full, 1.0);\nPoint.curl(index, none, 0.5);\nPoint.curl(middle, full, 0.5);\nPoint.curl(ring, full, 0.5);\nPoint.curl(pinky, full, 0.5);\nPoint.weight(index, 2);\nPoint.weight(middle, 2);\n\n// describe Point gesture \u270C\uFE0F\nconst MiddleFinger = new FingerGesture('middle finger');\nMiddleFinger.curl(thumb, none, 1.0);\nMiddleFinger.curl(index, full, 0.5);\nMiddleFinger.curl(middle, full, 0.5);\nMiddleFinger.curl(ring, full, 0.5);\nMiddleFinger.curl(pinky, full, 0.5);\nMiddleFinger.weight(index, 2);\nMiddleFinger.weight(middle, 2);\n\n// describe Open Palm gesture \u270C\uFE0F\nconst OpenPalm = new FingerGesture('open palm');\nOpenPalm.curl(thumb, none, 0.75);\nOpenPalm.curl(index, none, 0.75);\nOpenPalm.curl(middle, none, 0.75);\nOpenPalm.curl(ring, none, 0.75);\nOpenPalm.curl(pinky, none, 0.75);\n\nexport default [ThumbsUp, Victory, Point, MiddleFinger, OpenPalm];\n", "/**\n * FingerPose algorithm implementation constants\n *\n * Based on: [**FingerPose***](https://github.com/andypotato/fingerpose)\n */\n\n/* eslint-disable camelcase */\n\nimport { Finger, FingerCurl, FingerDirection } from './fingerdef';\nimport Gestures from '../hand/fingergesture';\n\nconst minConfidence = 0.7;\nconst options = {\n  // curl estimation\n  HALF_CURL_START_LIMIT: 60.0,\n  NO_CURL_START_LIMIT: 130.0,\n  // direction estimation\n  DISTANCE_VOTE_POWER: 1.1,\n  SINGLE_ANGLE_VOTE_POWER: 0.9,\n  TOTAL_ANGLE_VOTE_POWER: 1.6,\n};\n\nfunction calculateSlope(point1x, point1y, point2x, point2y) {\n  const value = (point1y - point2y) / (point1x - point2x);\n  let slope = Math.atan(value) * 180 / Math.PI;\n  if (slope <= 0) slope = -slope;\n  else if (slope > 0) slope = 180 - slope;\n  return slope;\n}\n\n// point1, point2 are 2d or 3d point arrays (xy[z])\n// returns either a single scalar (2d) or array of two slopes (3d)\nfunction getSlopes(point1, point2) {\n  if (!point1 || !point2) return [0, 0];\n  const slopeXY = calculateSlope(point1[0], point1[1], point2[0], point2[1]);\n  if (point1.length === 2) return slopeXY;\n  const slopeYZ = calculateSlope(point1[1], point1[2], point2[1], point2[2]);\n  return [slopeXY, slopeYZ];\n}\n\nfunction angleOrientationAt(angle, weightageAt = 1.0) {\n  let isVertical = 0;\n  let isDiagonal = 0;\n  let isHorizontal = 0;\n  if (angle >= 75.0 && angle <= 105.0) isVertical = 1 * weightageAt;\n  else if (angle >= 25.0 && angle <= 155.0) isDiagonal = 1 * weightageAt;\n  else isHorizontal = 1 * weightageAt;\n  return [isVertical, isDiagonal, isHorizontal];\n}\n\nfunction estimateFingerCurl(startPoint, midPoint, endPoint) {\n  const start_mid_x_dist = startPoint[0] - midPoint[0];\n  const start_end_x_dist = startPoint[0] - endPoint[0];\n  const mid_end_x_dist = midPoint[0] - endPoint[0];\n  const start_mid_y_dist = startPoint[1] - midPoint[1];\n  const start_end_y_dist = startPoint[1] - endPoint[1];\n  const mid_end_y_dist = midPoint[1] - endPoint[1];\n  const start_mid_z_dist = startPoint[2] - midPoint[2];\n  const start_end_z_dist = startPoint[2] - endPoint[2];\n  const mid_end_z_dist = midPoint[2] - endPoint[2];\n  const start_mid_dist = Math.sqrt(start_mid_x_dist * start_mid_x_dist + start_mid_y_dist * start_mid_y_dist + start_mid_z_dist * start_mid_z_dist);\n  const start_end_dist = Math.sqrt(start_end_x_dist * start_end_x_dist + start_end_y_dist * start_end_y_dist + start_end_z_dist * start_end_z_dist);\n  const mid_end_dist = Math.sqrt(mid_end_x_dist * mid_end_x_dist + mid_end_y_dist * mid_end_y_dist + mid_end_z_dist * mid_end_z_dist);\n  let cos_in = (mid_end_dist * mid_end_dist + start_mid_dist * start_mid_dist - start_end_dist * start_end_dist) / (2 * mid_end_dist * start_mid_dist);\n  if (cos_in > 1.0) cos_in = 1.0;\n  else if (cos_in < -1.0) cos_in = -1.0;\n  let angleOfCurve = Math.acos(cos_in);\n  angleOfCurve = (57.2958 * angleOfCurve) % 180;\n  let fingerCurl;\n  if (angleOfCurve > options.NO_CURL_START_LIMIT) fingerCurl = FingerCurl.none;\n  else if (angleOfCurve > options.HALF_CURL_START_LIMIT) fingerCurl = FingerCurl.half;\n  else fingerCurl = FingerCurl.full;\n  return fingerCurl;\n}\n\nfunction estimateHorizontalDirection(start_end_x_dist, start_mid_x_dist, mid_end_x_dist, max_dist_x) {\n  let estimatedDirection;\n  if (max_dist_x === Math.abs(start_end_x_dist)) {\n    if (start_end_x_dist > 0) estimatedDirection = FingerDirection.horizontalLeft;\n    else estimatedDirection = FingerDirection.horizontalRight;\n  } else if (max_dist_x === Math.abs(start_mid_x_dist)) {\n    if (start_mid_x_dist > 0) estimatedDirection = FingerDirection.horizontalLeft;\n    else estimatedDirection = FingerDirection.horizontalRight;\n  } else {\n    if (mid_end_x_dist > 0) estimatedDirection = FingerDirection.horizontalLeft;\n    else estimatedDirection = FingerDirection.horizontalRight;\n  }\n  return estimatedDirection;\n}\n\nfunction estimateVerticalDirection(start_end_y_dist, start_mid_y_dist, mid_end_y_dist, max_dist_y) {\n  let estimatedDirection;\n  if (max_dist_y === Math.abs(start_end_y_dist)) {\n    if (start_end_y_dist < 0) estimatedDirection = FingerDirection.verticalDown;\n    else estimatedDirection = FingerDirection.verticalUp;\n  } else if (max_dist_y === Math.abs(start_mid_y_dist)) {\n    if (start_mid_y_dist < 0) estimatedDirection = FingerDirection.verticalDown;\n    else estimatedDirection = FingerDirection.verticalUp;\n  } else {\n    if (mid_end_y_dist < 0) estimatedDirection = FingerDirection.verticalDown;\n    else estimatedDirection = FingerDirection.verticalUp;\n  }\n  return estimatedDirection;\n}\n\nfunction estimateDiagonalDirection(start_end_y_dist, start_mid_y_dist, mid_end_y_dist, max_dist_y, start_end_x_dist, start_mid_x_dist, mid_end_x_dist, max_dist_x) {\n  let estimatedDirection;\n  const reqd_vertical_direction = estimateVerticalDirection(start_end_y_dist, start_mid_y_dist, mid_end_y_dist, max_dist_y);\n  const reqd_horizontal_direction = estimateHorizontalDirection(start_end_x_dist, start_mid_x_dist, mid_end_x_dist, max_dist_x);\n  if (reqd_vertical_direction === FingerDirection.verticalUp) {\n    if (reqd_horizontal_direction === FingerDirection.horizontalLeft) estimatedDirection = FingerDirection.diagonalUpLeft;\n    else estimatedDirection = FingerDirection.diagonalUpRight;\n  } else {\n    if (reqd_horizontal_direction === FingerDirection.horizontalLeft) estimatedDirection = FingerDirection.diagonalDownLeft;\n    else estimatedDirection = FingerDirection.diagonalDownRight;\n  }\n  return estimatedDirection;\n}\n\nfunction calculateFingerDirection(startPoint, midPoint, endPoint, fingerSlopes) {\n  const start_mid_x_dist = startPoint[0] - midPoint[0];\n  const start_end_x_dist = startPoint[0] - endPoint[0];\n  const mid_end_x_dist = midPoint[0] - endPoint[0];\n  const start_mid_y_dist = startPoint[1] - midPoint[1];\n  const start_end_y_dist = startPoint[1] - endPoint[1];\n  const mid_end_y_dist = midPoint[1] - endPoint[1];\n  const max_dist_x = Math.max(Math.abs(start_mid_x_dist), Math.abs(start_end_x_dist), Math.abs(mid_end_x_dist));\n  const max_dist_y = Math.max(Math.abs(start_mid_y_dist), Math.abs(start_end_y_dist), Math.abs(mid_end_y_dist));\n  let voteVertical = 0.0;\n  let voteDiagonal = 0.0;\n  let voteHorizontal = 0.0;\n  const start_end_x_y_dist_ratio = max_dist_y / (max_dist_x + 0.00001);\n  if (start_end_x_y_dist_ratio > 1.5) voteVertical += options.DISTANCE_VOTE_POWER;\n  else if (start_end_x_y_dist_ratio > 0.66) voteDiagonal += options.DISTANCE_VOTE_POWER;\n  else voteHorizontal += options.DISTANCE_VOTE_POWER;\n  const start_mid_dist = Math.sqrt(start_mid_x_dist * start_mid_x_dist + start_mid_y_dist * start_mid_y_dist);\n  const start_end_dist = Math.sqrt(start_end_x_dist * start_end_x_dist + start_end_y_dist * start_end_y_dist);\n  const mid_end_dist = Math.sqrt(mid_end_x_dist * mid_end_x_dist + mid_end_y_dist * mid_end_y_dist);\n  const max_dist = Math.max(start_mid_dist, start_end_dist, mid_end_dist);\n  let calc_start_point_x = startPoint[0];\n  let calc_start_point_y = startPoint[1];\n  let calc_end_point_x = endPoint[0];\n  let calc_end_point_y = endPoint[1];\n  if (max_dist === start_mid_dist) {\n    calc_end_point_x = endPoint[0];\n    calc_end_point_y = endPoint[1];\n  } else if (max_dist === mid_end_dist) {\n    calc_start_point_x = midPoint[0];\n    calc_start_point_y = midPoint[1];\n  }\n  const calcStartPoint = [calc_start_point_x, calc_start_point_y];\n  const calcEndPoint = [calc_end_point_x, calc_end_point_y];\n  const totalAngle = getSlopes(calcStartPoint, calcEndPoint);\n  const votes = angleOrientationAt(totalAngle, options.TOTAL_ANGLE_VOTE_POWER);\n  voteVertical += votes[0];\n  voteDiagonal += votes[1];\n  voteHorizontal += votes[2];\n  for (const fingerSlope of fingerSlopes) {\n    const fingerVotes = angleOrientationAt(fingerSlope, options.SINGLE_ANGLE_VOTE_POWER);\n    voteVertical += fingerVotes[0];\n    voteDiagonal += fingerVotes[1];\n    voteHorizontal += fingerVotes[2];\n  }\n  // in case of tie, highest preference goes to Vertical,\n  // followed by horizontal and then diagonal\n  let estimatedDirection;\n  if (voteVertical === Math.max(voteVertical, voteDiagonal, voteHorizontal)) {\n    estimatedDirection = estimateVerticalDirection(start_end_y_dist, start_mid_y_dist, mid_end_y_dist, max_dist_y);\n  } else if (voteHorizontal === Math.max(voteDiagonal, voteHorizontal)) {\n    estimatedDirection = estimateHorizontalDirection(start_end_x_dist, start_mid_x_dist, mid_end_x_dist, max_dist_x);\n  } else {\n    estimatedDirection = estimateDiagonalDirection(start_end_y_dist, start_mid_y_dist, mid_end_y_dist, max_dist_y, start_end_x_dist, start_mid_x_dist, mid_end_x_dist, max_dist_x);\n  }\n  return estimatedDirection;\n}\n\nfunction estimate(landmarks) {\n  // step 1: calculate slopes\n  const slopesXY: number[][] = [];\n  const slopesYZ: number[][] = [];\n  const fingerCurls: number[] = [];\n  const fingerDirections: number[] = [];\n  if (!landmarks) return { curls: fingerCurls, directions: fingerDirections };\n\n  // step 1: calculate slopes\n  for (const finger of Finger.all) {\n    const points = Finger.getPoints(finger);\n    const slopeAtXY: number[] = [];\n    const slopeAtYZ: number[] = [];\n    for (const point of points) {\n      const point1 = landmarks[point[0]];\n      const point2 = landmarks[point[1]];\n      // calculate single slope\n      const slopes = getSlopes(point1, point2);\n      const slopeXY = slopes[0];\n      const slopeYZ = slopes[1];\n      slopeAtXY.push(slopeXY);\n      slopeAtYZ.push(slopeYZ);\n    }\n    slopesXY.push(slopeAtXY);\n    slopesYZ.push(slopeAtYZ);\n  }\n\n  // step 2: calculate orientations\n  for (const finger of Finger.all) {\n    // start finger predictions from palm - except for thumb\n    const pointIndexAt = (finger === Finger.thumb) ? 1 : 0;\n    const fingerPointsAt = Finger.getPoints(finger);\n    const startPoint = landmarks[fingerPointsAt[pointIndexAt][0]];\n    const midPoint = landmarks[fingerPointsAt[pointIndexAt + 1][1]];\n    const endPoint = landmarks[fingerPointsAt[3][1]];\n    // check if finger is curled\n    const fingerCurled = estimateFingerCurl(startPoint, midPoint, endPoint);\n    const fingerPosition = calculateFingerDirection(startPoint, midPoint, endPoint, slopesXY[finger].slice(pointIndexAt));\n    fingerCurls[finger] = fingerCurled;\n    fingerDirections[finger] = fingerPosition;\n  }\n  return { curls: fingerCurls, directions: fingerDirections };\n}\n\nexport function analyze(keypoints) { // get estimations of curl / direction for each finger\n  if (!keypoints || keypoints.length === 0) return null;\n  const estimatorRes = estimate(keypoints);\n  const landmarks = {};\n  for (const fingerIdx of Finger.all) {\n    landmarks[Finger.getName(fingerIdx)] = {\n      curl: FingerCurl.getName(estimatorRes.curls[fingerIdx]),\n      direction: FingerDirection.getName(estimatorRes.directions[fingerIdx]),\n    };\n  }\n  return landmarks;\n}\n\nexport function match(keypoints) { // compare gesture description to each known gesture\n  const poses: { name: string, confidence: number }[] = [];\n  if (!keypoints || keypoints.length === 0) return poses;\n  const estimatorRes = estimate(keypoints);\n  for (const gesture of Gestures) {\n    const confidence = gesture.matchAgainst(estimatorRes.curls, estimatorRes.directions);\n    if (confidence >= minConfidence) poses.push({ name: gesture.name, confidence });\n  }\n  return poses;\n}\n", "/**\n * HandPose model implementation\n *\n * Based on: [**MediaPipe HandPose**](https://drive.google.com/file/d/1sv4sSb9BSNVZhLzxXJ0jBv9DqD-4jnAz/view)\n */\n\nimport { log } from '../util/util';\nimport * as handdetector from './handposedetector';\nimport * as handpipeline from './handposepipeline';\nimport * as fingerPose from './fingerpose';\nimport { loadModel } from '../tfjs/load';\nimport type { HandResult, Box, Point } from '../result';\nimport type { Tensor, GraphModel } from '../tfjs/types';\nimport type { Config } from '../config';\nimport { env } from '../util/env';\n\nconst meshAnnotations = {\n  thumb: [1, 2, 3, 4],\n  index: [5, 6, 7, 8],\n  middle: [9, 10, 11, 12],\n  ring: [13, 14, 15, 16],\n  pinky: [17, 18, 19, 20],\n  palm: [0],\n};\n\nlet handDetectorModel: GraphModel | null;\nlet handPoseModel: GraphModel | null;\nlet handPipeline: handpipeline.HandPipeline;\n\nexport async function predict(input: Tensor, config: Config): Promise<HandResult[]> {\n  const predictions = await handPipeline.estimateHands(input, config);\n  if (!predictions) return [];\n  const hands: HandResult[] = [];\n  for (let i = 0; i < predictions.length; i++) {\n    const annotations = {};\n    if (predictions[i].landmarks) {\n      for (const key of Object.keys(meshAnnotations)) {\n        annotations[key] = meshAnnotations[key].map((index) => predictions[i].landmarks[index]);\n      }\n    }\n    const keypoints = predictions[i].landmarks as unknown as Point[];\n    let box: Box = [Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, 0, 0]; // maximums so conditionals work\n    let boxRaw: Box = [0, 0, 0, 0];\n    if (keypoints && keypoints.length > 0) { // if we have landmarks, calculate box based on landmarks\n      for (const pt of keypoints) {\n        if (pt[0] < box[0]) box[0] = pt[0];\n        if (pt[1] < box[1]) box[1] = pt[1];\n        if (pt[0] > box[2]) box[2] = pt[0];\n        if (pt[1] > box[3]) box[3] = pt[1];\n      }\n      box[2] -= box[0];\n      box[3] -= box[1];\n      boxRaw = [box[0] / (input.shape[2] || 0), box[1] / (input.shape[1] || 0), box[2] / (input.shape[2] || 0), box[3] / (input.shape[1] || 0)];\n    } else { // otherwise use box from prediction\n      box = predictions[i].box ? [\n        Math.trunc(Math.max(0, predictions[i].box.topLeft[0])),\n        Math.trunc(Math.max(0, predictions[i].box.topLeft[1])),\n        Math.trunc(Math.min((input.shape[2] || 0), predictions[i].box.bottomRight[0]) - Math.max(0, predictions[i].box.topLeft[0])),\n        Math.trunc(Math.min((input.shape[1] || 0), predictions[i].box.bottomRight[1]) - Math.max(0, predictions[i].box.topLeft[1])),\n      ] : [0, 0, 0, 0];\n      boxRaw = [\n        (predictions[i].box.topLeft[0]) / (input.shape[2] || 0),\n        (predictions[i].box.topLeft[1]) / (input.shape[1] || 0),\n        (predictions[i].box.bottomRight[0] - predictions[i].box.topLeft[0]) / (input.shape[2] || 0),\n        (predictions[i].box.bottomRight[1] - predictions[i].box.topLeft[1]) / (input.shape[1] || 0),\n      ];\n    }\n    const landmarks = fingerPose.analyze(keypoints);\n    hands.push({\n      id: i,\n      score: Math.round(100 * predictions[i].confidence) / 100,\n      boxScore: Math.round(100 * predictions[i].boxConfidence) / 100,\n      fingerScore: Math.round(100 * predictions[i].fingerConfidence) / 100,\n      label: 'hand',\n      box,\n      boxRaw,\n      keypoints,\n      annotations: annotations as HandResult['annotations'],\n      landmarks: landmarks as HandResult['landmarks'],\n    });\n  }\n  return hands;\n}\n\nexport async function load(config: Config): Promise<[GraphModel | null, GraphModel | null]> {\n  if (env.initial) {\n    handDetectorModel = null;\n    handPoseModel = null;\n  }\n  if (!handDetectorModel || !handPoseModel) {\n    [handDetectorModel, handPoseModel] = await Promise.all([\n      config.hand.enabled ? loadModel(config.hand.detector?.modelPath) : null,\n      config.hand.landmarks ? loadModel(config.hand.skeleton?.modelPath) : null,\n    ]);\n  } else {\n    if (config.debug) log('cached model:', handDetectorModel['modelUrl']);\n    if (config.debug) log('cached model:', handPoseModel['modelUrl']);\n  }\n  const handDetector = handDetectorModel ? new handdetector.HandDetector(handDetectorModel) : undefined;\n  if (handDetector && handPoseModel) handPipeline = new handpipeline.HandPipeline(handDetector, handPoseModel);\n  return [handDetectorModel, handPoseModel];\n}\n", "/** TFJS custom backend registration */\n\nimport type { Human } from '../human';\nimport { log } from '../util/util';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport * as image from '../image/image';\nimport * as models from '../models';\nimport type { AnyCanvas } from '../exports';\n// import { env } from '../env';\n\nexport const config = {\n  name: 'humangl',\n  priority: 999,\n  canvas: null as null | AnyCanvas,\n  gl: null as null | WebGL2RenderingContext,\n  extensions: [] as string[] | null,\n  webGLattr: { // https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\n    alpha: false,\n    antialias: false,\n    premultipliedAlpha: false,\n    preserveDrawingBuffer: false,\n    depth: false,\n    stencil: false,\n    failIfMajorPerformanceCaveat: false, // default=true\n    desynchronized: true, // default=undefined\n  },\n};\n\nfunction extensions(): void {\n  /*\n  https://www.khronos.org/registry/webgl/extensions/\n  https://webglreport.com/?v=2\n  */\n  const gl = config.gl;\n  if (!gl) return;\n  config.extensions = gl.getSupportedExtensions();\n  // gl.getExtension('KHR_parallel_shader_compile');\n}\n\n/**\n * Registers custom WebGL2 backend to be used by Human library\n *\n * @returns void\n */\nexport function register(instance: Human): void {\n  // force backend reload if gl context is not valid\n  if (instance.config.backend !== 'humangl') return;\n  if ((config.name in tf.engine().registry) && !config?.gl?.getParameter(config.gl.VERSION)) {\n    log('humangl error: backend invalid context');\n    models.reset(instance);\n    /*\n    log('resetting humangl backend');\n    await tf.removeBackend(config.name);\n    await register(instance); // re-register\n    */\n  }\n  if (!tf.findBackend(config.name)) {\n    try {\n      config.canvas = image.canvas(100, 100);\n    } catch (err) {\n      log('humangl error: cannot create canvas:', err);\n      return;\n    }\n    try {\n      config.gl = config.canvas.getContext('webgl2', config.webGLattr);\n      if (!config.gl) {\n        log('humangl error: cannot get webgl context');\n        return;\n      }\n      const glv2 = config.gl.getParameter(config.gl.VERSION).includes('2.0');\n      if (!glv2) {\n        log('backend override: using fallback webgl backend as webgl 2.0 is not detected');\n        instance.config.backend = 'webgl';\n        return;\n      }\n      if (config.canvas) {\n        config.canvas.addEventListener('webglcontextlost', (e) => {\n          log('humangl error:', e.type);\n          log('possible browser memory leak using webgl or conflict with multiple backend registrations');\n          instance.emit('error');\n          throw new Error('backend error: webgl context lost');\n          // log('resetting humangl backend');\n          // env.initial = true;\n          // models.reset(instance);\n          // await tf.removeBackend(config.name);\n          // await register(instance); // re-register\n        });\n        config.canvas.addEventListener('webglcontextrestored', (e) => {\n          log('humangl error: context restored:', e);\n        });\n        config.canvas.addEventListener('webglcontextcreationerror', (e) => {\n          log('humangl error: context create:', e);\n        });\n      }\n    } catch (err) {\n      log('humangl error: cannot get webgl context:', err);\n      return;\n    }\n    try {\n      tf.setWebGLContext(2, config.gl);\n    } catch (err) {\n      log('humangl error: cannot set webgl context:', err);\n      return;\n    }\n    try {\n      const ctx = new tf.GPGPUContext(config.gl);\n      tf.registerBackend(config.name, () => new tf.MathBackendWebGL(ctx), config.priority);\n    } catch (err) {\n      log('humangl error: cannot register webgl backend:', err);\n      return;\n    }\n    try {\n      const kernels = tf.getKernelsForBackend('webgl');\n      kernels.forEach((kernelConfig) => {\n        const newKernelConfig = { ...kernelConfig, backendName: config.name };\n        tf.registerKernel(newKernelConfig);\n      });\n    } catch (err) {\n      log('humangl error: cannot update webgl backend registration:', err);\n      return;\n    }\n    try {\n      if (tf.env().flagRegistry.WEBGL_VERSION) tf.env().set('WEBGL_VERSION', 2);\n    } catch (err) {\n      log('humangl error: cannot set WebGL backend flags:', err);\n      return;\n    }\n    extensions();\n    const current = tf.backend().getGPGPUContext ? tf.backend().getGPGPUContext().gl : null;\n    if (current) {\n      if (instance.config.debug) log('humangl backend registered:', { webgl: current.getParameter(current.VERSION) as string, renderer: current.getParameter(current.RENDERER) as string });\n    } else {\n      log('humangl error: no current gl context:', current, config.gl);\n    }\n  }\n}\n", "/** TFJS backend initialization and customization */\n\nimport type { Human, Config } from '../human';\nimport { log, now } from '../util/util';\nimport { env } from '../util/env';\nimport * as humangl from './humangl';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport * as constants from './constants';\n\nfunction registerCustomOps(config: Config) {\n  const newKernels: string[] = [];\n  if (!env.kernels.includes('mod')) {\n    const kernelMod = {\n      kernelName: 'Mod',\n      backendName: tf.getBackend(),\n      kernelFunc: (op) => tf.tidy(() => tf.sub(op.inputs.a, tf.mul(tf.div(op.inputs.a, op.inputs.b), op.inputs.b))),\n    };\n    tf.registerKernel(kernelMod);\n    env.kernels.push('mod');\n    newKernels.push('mod');\n  }\n  if (!env.kernels.includes('floormod')) {\n    const kernelFloorMod = {\n      kernelName: 'FloorMod',\n      backendName: tf.getBackend(),\n      kernelFunc: (op) => tf.tidy(() => tf.add(tf.mul(tf.floorDiv(op.inputs.a / op.inputs.b), op.inputs.b), tf.mod(op.inputs.a, op.inputs.b))),\n    };\n    tf.registerKernel(kernelFloorMod);\n    env.kernels.push('floormod');\n    newKernels.push('floormod');\n  }\n  /*\n  if (!env.kernels.includes('atan2') && config.softwareKernels) {\n    const kernelAtan2 = {\n      kernelName: 'Atan2',\n      backendName: tf.getBackend(),\n      kernelFunc: (op) => tf.tidy(() => {\n        const backend = tf.getBackend();\n        tf.setBackend('cpu');\n        const t = tf.atan2(op.inputs.a, op.inputs.b);\n        tf.setBackend(backend);\n        return t;\n      }),\n    };\n    if (config.debug) log('registered kernel:', 'atan2');\n    log('registered kernel:', 'atan2');\n    tf.registerKernel(kernelAtan2);\n    env.kernels.push('atan2');\n    newKernels.push('atan2');\n  }\n  */\n  if (!env.kernels.includes('rotatewithoffset') && config.softwareKernels) {\n    const kernelRotateWithOffset = {\n      kernelName: 'RotateWithOffset',\n      backendName: tf.getBackend(),\n      kernelFunc: (op) => tf.tidy(() => {\n        const backend = tf.getBackend();\n        tf.setBackend('cpu');\n        const t = tf.image.rotateWithOffset(op.inputs.image, op.attrs.radians, op.attrs.fillValue, op.attrs.center);\n        tf.setBackend(backend);\n        return t;\n      }),\n    };\n    tf.registerKernel(kernelRotateWithOffset);\n    env.kernels.push('rotatewithoffset');\n    newKernels.push('rotatewithoffset');\n  }\n  if ((newKernels.length > 0) && config.debug) log('registered kernels:', newKernels);\n}\n\nlet defaultFlags: Record<string, unknown> = {};\n\nexport async function check(instance: Human, force = false) {\n  instance.state = 'backend';\n  if (force || env.initial || (instance.config.backend && (instance.config.backend.length > 0) && (tf.getBackend() !== instance.config.backend))) {\n    const timeStamp = now();\n\n    if (instance.config.backend && instance.config.backend.length > 0) {\n      // detect web worker\n      // @ts-ignore ignore missing type for WorkerGlobalScope as that is the point\n      if (typeof window === 'undefined' && typeof WorkerGlobalScope !== 'undefined' && instance.config.debug) {\n        if (instance.config.debug) log('running inside web worker');\n      }\n\n      // force browser vs node backend\n      if (env.browser && instance.config.backend === 'tensorflow') {\n        if (instance.config.debug) log('override: backend set to tensorflow while running in browser');\n        instance.config.backend = 'webgl';\n      }\n      if (env.node && (instance.config.backend === 'webgl' || instance.config.backend === 'humangl')) {\n        if (instance.config.debug) log(`override: backend set to ${instance.config.backend} while running in nodejs`);\n        instance.config.backend = 'tensorflow';\n      }\n\n      // handle webgpu\n      if (env.browser && instance.config.backend === 'webgpu') {\n        if (typeof navigator === 'undefined' || typeof navigator.gpu === 'undefined') {\n          log('override: backend set to webgpu but browser does not support webgpu');\n          instance.config.backend = 'webgl';\n        } else {\n          const adapter = await navigator.gpu.requestAdapter();\n          if (instance.config.debug) log('enumerated webgpu adapter:', adapter);\n          if (!adapter) {\n            log('override: backend set to webgpu but browser reports no available gpu');\n            instance.config.backend = 'webgl';\n          } else {\n            // @ts-ignore requestAdapterInfo is not in tslib\n            const adapterInfo = 'requestAdapterInfo' in adapter ? await (adapter as GPUAdapter).requestAdapterInfo() : undefined;\n            // if (adapter.features) adapter.features.forEach((feature) => log('webgpu features:', feature));\n            log('webgpu adapter info:', adapterInfo);\n          }\n        }\n      }\n\n      // check available backends\n      let available = Object.keys(tf.engine().registryFactory as Record<string, unknown>);\n      if (instance.config.backend === 'humangl' && !available.includes('humangl')) {\n        humangl.register(instance);\n        available = Object.keys(tf.engine().registryFactory as Record<string, unknown>);\n      }\n      if (instance.config.debug) log('available backends:', available);\n\n      if (!available.includes(instance.config.backend)) {\n        log(`error: backend ${instance.config.backend} not found in registry`);\n        instance.config.backend = env.node ? 'tensorflow' : 'webgl';\n        if (instance.config.debug) log(`override: setting backend ${instance.config.backend}`);\n      }\n\n      if (instance.config.debug) log('setting backend:', [instance.config.backend]);\n\n      // customize wasm\n      if (instance.config.backend === 'wasm') {\n        if (tf.env().flagRegistry.CANVAS2D_WILL_READ_FREQUENTLY) tf.env().set('CANVAS2D_WILL_READ_FREQUENTLY', true);\n        if (instance.config.debug) log('wasm path:', instance.config.wasmPath);\n        if (typeof tf.setWasmPaths !== 'undefined') tf.setWasmPaths(instance.config.wasmPath, instance.config.wasmPlatformFetch);\n        else throw new Error('backend error: attempting to use wasm backend but wasm path is not set');\n        let mt = false;\n        let simd = false;\n        try {\n          mt = await tf.env().getAsync('WASM_HAS_MULTITHREAD_SUPPORT');\n          simd = await tf.env().getAsync('WASM_HAS_SIMD_SUPPORT');\n          if (instance.config.debug) log(`wasm execution: ${simd ? 'simd' : 'no simd'} ${mt ? 'multithreaded' : 'singlethreaded'}`);\n          if (instance.config.debug && !simd) log('warning: wasm simd support is not enabled');\n        } catch {\n          log('wasm detection failed');\n        }\n      }\n\n      try {\n        await tf.setBackend(instance.config.backend);\n        await tf.ready();\n      } catch (err) {\n        log('error: cannot set backend:', instance.config.backend, err);\n        return false;\n      }\n      if (instance.config.debug) defaultFlags = JSON.parse(JSON.stringify(tf.env().flags));\n    }\n\n    // customize humangl\n    if (tf.getBackend() === 'humangl' || tf.getBackend() === 'webgl') {\n      if (tf.env().flagRegistry.WEBGL_USE_SHAPES_UNIFORMS) tf.env().set('WEBGL_USE_SHAPES_UNIFORMS', true); // default=false <https://github.com/tensorflow/tfjs/issues/5205>\n      if (tf.env().flagRegistry.WEBGL_EXP_CONV) tf.env().set('WEBGL_EXP_CONV', true); // default=false <https://github.com/tensorflow/tfjs/issues/6678>\n      // if (tf.env().flagRegistry['WEBGL_PACK_DEPTHWISECONV'])  tf.env().set('WEBGL_PACK_DEPTHWISECONV', false); // default=true <https://github.com/tensorflow/tfjs/pull/4909>\n      // if (tf.env().flagRegistry.USE_SETTIMEOUTCUSTOM) tf.env().set('USE_SETTIMEOUTCUSTOM', true); // default=false <https://github.com/tensorflow/tfjs/issues/6687>\n      // if (tf.env().flagRegistry.CPU_HANDOFF_SIZE_THRESHOLD) tf.env().set('CPU_HANDOFF_SIZE_THRESHOLD', 1024); // default=1000\n      // if (tf.env().flagRegistry['WEBGL_FORCE_F16_TEXTURES'] && !instance.config.object.enabled) tf.env().set('WEBGL_FORCE_F16_TEXTURES', true); // safe to use 16bit precision\n      if (instance.config.debug && typeof instance.config.deallocate !== 'undefined' && instance.config.deallocate) { // hidden param\n        log('changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:', true);\n        tf.env().set('WEBGL_DELETE_TEXTURE_THRESHOLD', 0);\n      }\n    }\n\n    // customize webgpu\n    if (tf.getBackend() === 'webgpu') {\n      // if (tf.env().flagRegistry['WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD']) tf.env().set('WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD', 512);\n      // if (tf.env().flagRegistry['WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE']) tf.env().set('WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE', 0);\n      // if (tf.env().flagRegistry['WEBGPU_CPU_FORWARD']) tf.env().set('WEBGPU_CPU_FORWARD', true);\n    }\n\n    if (instance.config.debug) {\n      const newFlags = tf.env().flags;\n      const updatedFlags = {};\n      for (const key of Object.keys(newFlags)) {\n        if (defaultFlags[key] === newFlags[key]) continue;\n        updatedFlags[key] = newFlags[key];\n      }\n      if (instance.config.debug && Object.keys(updatedFlags).length > 0) log('backend:', tf.getBackend(), 'flags:', updatedFlags);\n    }\n\n    if (instance.config.flags && Object.keys(instance.config.flags).length > 0) {\n      if (instance.config.debug) log('flags:', instance.config['flags']);\n      for (const [key, val] of Object.entries(instance.config.flags)) {\n        tf.env().set(key, val);\n      }\n    }\n\n    tf.enableProdMode();\n    constants.init();\n    instance.performance.initBackend = Math.trunc(now() - timeStamp);\n    instance.config.backend = tf.getBackend();\n    await env.updateBackend(); // update env on backend init\n    registerCustomOps(instance.config);\n    // await env.updateBackend(); // update env on backend init\n    env.initial = false;\n  }\n  return true;\n}\n\n// register fake missing tfjs ops\nexport function fakeOps(kernelNames: string[], config) {\n  // if (config.debug) log('registerKernel:', kernelNames);\n  for (const kernelName of kernelNames) {\n    const kernelConfig = {\n      kernelName,\n      backendName: config.backend,\n      kernelFunc: () => { if (config.debug) log('kernelFunc', kernelName, config.backend); },\n      // setupFunc: () => { if (config.debug) log('kernelFunc', kernelName, config.backend); },\n      // disposeFunc: () => { if (config.debug) log('kernelFunc', kernelName, config.backend); },\n    };\n    tf.registerKernel(kernelConfig);\n  }\n  env.kernels = tf.getKernelsForBackend(tf.getBackend()).map((kernel) => (kernel.kernelName as string).toLowerCase()); // re-scan registered ops\n}\n", "/**\n * HandTrack model implementation\n *\n * Based on:\n * - Hand Detection & Skeleton: [**MediaPipe HandPose**](https://drive.google.com/file/d/1sv4sSb9BSNVZhLzxXJ0jBv9DqD-4jnAz/view)\n * - Hand Tracking: [**HandTracking**](https://github.com/victordibia/handtracking)\n */\n\nimport { log, now } from '../util/util';\nimport * as box from '../util/box';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport type { HandResult, HandType, Box, Point } from '../result';\nimport type { GraphModel, Tensor } from '../tfjs/types';\nimport type { Config } from '../config';\nimport { env } from '../util/env';\nimport * as fingerPose from './fingerpose';\nimport { fakeOps } from '../tfjs/backend';\nimport { constants } from '../tfjs/constants';\n\nconst models: [GraphModel | null, GraphModel | null] = [null, null];\nconst modelOutputNodes = ['StatefulPartitionedCall/Postprocessor/Slice', 'StatefulPartitionedCall/Postprocessor/ExpandDims_1'];\n\nconst inputSize = [[0, 0], [0, 0]];\n\nconst classes = ['hand', 'fist', 'pinch', 'point', 'face', 'tip', 'pinchtip'];\nconst faceIndex = 4;\n\nconst boxExpandFact = 1.6;\nconst maxDetectorResolution = 512;\nconst detectorExpandFact = 1.4;\n\nlet skipped = Number.MAX_SAFE_INTEGER;\nlet lastTime = 0;\nlet outputSize: [number, number] = [0, 0];\n\ninterface HandDetectResult {\n  id: number,\n  score: number,\n  box: Box,\n  boxRaw: Box,\n  label: HandType,\n}\n\nconst cache: {\n  boxes: HandDetectResult[],\n  hands: HandResult[];\n} = {\n  boxes: [],\n  hands: [],\n};\n\nconst fingerMap = {\n  /*\n  thumb: [0, 1, 2, 3, 4],\n  index: [0, 5, 6, 7, 8],\n  middle: [0, 9, 10, 11, 12],\n  ring: [0, 13, 14, 15, 16],\n  pinky: [0, 17, 18, 19, 20],\n  palm: [0],\n  */\n  thumb: [1, 2, 3, 4],\n  index: [5, 6, 7, 8],\n  middle: [9, 10, 11, 12],\n  ring: [13, 14, 15, 16],\n  pinky: [17, 18, 19, 20],\n  base: [0],\n  palm: [0, 17, 13, 9, 5, 1, 0],\n};\n\nexport async function loadDetect(config: Config): Promise<GraphModel> {\n  // HandTrack Model: Original: <https://github.com/victordibia/handtracking> TFJS Port: <https://github.com/victordibia/handtrack.js/>\n  if (env.initial) models[0] = null;\n  if (!models[0]) {\n    // handtrack model has some kernel ops defined in model but those are never referenced and non-existent in tfjs\n    // ideally need to prune the model itself\n    fakeOps(['tensorlistreserve', 'enter', 'tensorlistfromtensor', 'merge', 'loopcond', 'switch', 'exit', 'tensorliststack', 'nextiteration', 'tensorlistsetitem', 'tensorlistgetitem', 'reciprocal', 'shape', 'split', 'where'], config);\n    models[0] = await loadModel(config.hand.detector?.modelPath);\n    const inputs = models[0]['executor'] ? Object.values(models[0].modelSignature['inputs']) : undefined;\n    inputSize[0][0] = Array.isArray(inputs) ? parseInt(inputs[0].tensorShape.dim[1].size) : 0;\n    inputSize[0][1] = Array.isArray(inputs) ? parseInt(inputs[0].tensorShape.dim[2].size) : 0;\n  } else if (config.debug) log('cached model:', models[0]['modelUrl']);\n  return models[0];\n}\n\nexport async function loadSkeleton(config: Config): Promise<GraphModel> {\n  if (env.initial) models[1] = null;\n  if (!models[1]) {\n    models[1] = await loadModel(config.hand.skeleton?.modelPath);\n    const inputs = models[1]['executor'] ? Object.values(models[1].modelSignature['inputs']) : undefined;\n    inputSize[1][0] = Array.isArray(inputs) ? parseInt(inputs[0].tensorShape.dim[1].size) : 0;\n    inputSize[1][1] = Array.isArray(inputs) ? parseInt(inputs[0].tensorShape.dim[2].size) : 0;\n  } else if (config.debug) log('cached model:', models[1]['modelUrl']);\n  return models[1];\n}\n\nexport async function load(config: Config): Promise<[GraphModel | null, GraphModel | null]> {\n  if (!models[0]) await loadDetect(config);\n  if (!models[1]) await loadSkeleton(config);\n  return models;\n}\n\nasync function detectHands(input: Tensor, config: Config): Promise<HandDetectResult[]> {\n  const hands: HandDetectResult[] = [];\n  if (!input || !models[0]) return hands;\n  const t: Record<string, Tensor> = {};\n  const ratio = (input.shape[2] || 1) / (input.shape[1] || 1);\n  const height = Math.min(Math.round((input.shape[1] || 0) / 8) * 8, maxDetectorResolution); // use dynamic input size but cap at 512\n  const width = Math.round(height * ratio / 8) * 8;\n  t.resize = tf.image.resizeBilinear(input, [height, width]); // todo: resize with padding\n  t.cast = tf.cast(t.resize, 'int32');\n  [t.rawScores, t.rawBoxes] = await models[0].executeAsync(t.cast, modelOutputNodes) as Tensor[];\n  t.boxes = tf.squeeze(t.rawBoxes, [0, 2]);\n  t.scores = tf.squeeze(t.rawScores, [0]);\n  const classScores: Tensor[] = tf.unstack(t.scores, 1); // unstack scores based on classes\n  tf.dispose(classScores[faceIndex]);\n  classScores.splice(faceIndex, 1); // remove faces\n  t.filtered = tf.stack(classScores, 1); // restack\n  tf.dispose(classScores);\n  // t.filtered = t.scores;\n  t.max = tf.max(t.filtered, 1); // max overall score\n  t.argmax = tf.argMax(t.filtered, 1); // class index of max overall score\n  let id = 0;\n  t.nms = await tf.image.nonMaxSuppressionAsync(t.boxes, t.max, (config.hand.maxDetected || 0) + 1, config.hand.iouThreshold || 0, config.hand.minConfidence || 1);\n  const nms = await t.nms.data();\n  const scores = await t.max.data();\n  const classNum = await t.argmax.data();\n  for (const nmsIndex of Array.from(nms)) { // generates results for each class\n    const boxSlice = tf.slice(t.boxes, nmsIndex, 1);\n    const boxYX = await boxSlice.data();\n    tf.dispose(boxSlice);\n    const boxData: Box = [boxYX[1], boxYX[0], boxYX[3] - boxYX[1], boxYX[2] - boxYX[0]]; // yx box reshaped to standard box\n    const boxRaw: Box = box.scale(boxData, detectorExpandFact);\n    const boxFull: Box = [Math.trunc(boxData[0] * outputSize[0]), Math.trunc(boxData[1] * outputSize[1]), Math.trunc(boxData[2] * outputSize[0]), Math.trunc(boxData[3] * outputSize[1])];\n    const score = scores[nmsIndex];\n    const label = classes[classNum[nmsIndex]] as HandType;\n    const hand: HandDetectResult = { id: id++, score, box: boxFull, boxRaw, label };\n    hands.push(hand);\n  }\n  Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n  hands.sort((a, b) => b.score - a.score);\n  if (hands.length > (config.hand.maxDetected || 1)) hands.length = (config.hand.maxDetected || 1);\n  return hands;\n}\n\nasync function detectFingers(input: Tensor, h: HandDetectResult, config: Config): Promise<HandResult> {\n  const hand: HandResult = { // initial values inherited from hand detect\n    id: h.id,\n    score: Math.round(100 * h.score) / 100,\n    boxScore: Math.round(100 * h.score) / 100,\n    fingerScore: 0,\n    box: h.box,\n    boxRaw: h.boxRaw,\n    label: h.label,\n    keypoints: [],\n    landmarks: {} as HandResult['landmarks'],\n    annotations: {} as HandResult['annotations'],\n  };\n  if (input && models[1] && config.hand.landmarks && h.score > (config.hand.minConfidence || 0)) {\n    const t: Record<string, Tensor> = {};\n    const boxCrop = [h.boxRaw[1], h.boxRaw[0], h.boxRaw[3] + h.boxRaw[1], h.boxRaw[2] + h.boxRaw[0]] as Box;\n    t.crop = tf.image.cropAndResize(input, [boxCrop], [0], [inputSize[1][0], inputSize[1][1]], 'bilinear');\n    t.div = tf.div(t.crop, constants.tf255);\n    [t.score, t.keypoints] = models[1].execute(t.div, ['Identity_1', 'Identity']) as Tensor[];\n    const rawScore = (await t.score.data())[0];\n    const score = (100 - Math.trunc(100 / (1 + Math.exp(rawScore)))) / 100; // reverse sigmoid value\n    if (score >= (config.hand.minConfidence || 0)) {\n      hand.fingerScore = score;\n      t.reshaped = tf.reshape(t.keypoints, [-1, 3]);\n      const coordsData: Point[] = await t.reshaped.array() as Point[];\n      const coordsRaw: Point[] = coordsData.map((kpt) => [kpt[0] / inputSize[1][1], kpt[1] / inputSize[1][0], (kpt[2] || 0)]);\n      const coordsNorm: Point[] = coordsRaw.map((kpt) => [kpt[0] * h.boxRaw[2], kpt[1] * h.boxRaw[3], (kpt[2] || 0)]);\n      hand.keypoints = (coordsNorm).map((kpt) => [outputSize[0] * (kpt[0] + h.boxRaw[0]), outputSize[1] * (kpt[1] + h.boxRaw[1]), (kpt[2] || 0)]);\n      hand.landmarks = fingerPose.analyze(hand.keypoints) as HandResult['landmarks']; // calculate finger gestures\n      for (const key of Object.keys(fingerMap)) { // map keypoints to per-finger annotations\n        hand.annotations[key] = fingerMap[key].map((index: number) => (hand.landmarks && hand.keypoints[index] ? hand.keypoints[index] : null));\n      }\n    }\n    Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n  }\n  return hand;\n}\n\nexport async function predict(input: Tensor, config: Config): Promise<HandResult[]> {\n  if (!models[0]?.['executor'] || !models[1]?.['executor'] || !models[0].inputs[0].shape || !models[1].inputs[0].shape) return []; // something is wrong with the model\n  outputSize = [input.shape[2] || 0, input.shape[1] || 0];\n  skipped++; // increment skip frames\n  const skipTime = (config.hand.skipTime || 0) > (now() - lastTime);\n  const skipFrame = skipped < (config.hand.skipFrames || 0);\n  if (config.skipAllowed && skipTime && skipFrame) {\n    return cache.hands; // return cached results without running anything\n  }\n  return new Promise(async (resolve) => {\n    const skipTimeExtended = 3 * (config.hand.skipTime || 0) > (now() - lastTime);\n    const skipFrameExtended = skipped < 3 * (config.hand.skipFrames || 0);\n    if (config.skipAllowed && cache.hands.length === config.hand.maxDetected) { // we have all detected hands so we're definitely skipping\n      cache.hands = await Promise.all(cache.boxes.map((handBox) => detectFingers(input, handBox, config)));\n    } else if (config.skipAllowed && skipTimeExtended && skipFrameExtended && cache.hands.length > 0) { // we have some cached results: maybe not enough but anyhow continue for bit longer\n      cache.hands = await Promise.all(cache.boxes.map((handBox) => detectFingers(input, handBox, config)));\n    } else { // finally rerun detector\n      cache.boxes = await detectHands(input, config);\n      lastTime = now();\n      cache.hands = await Promise.all(cache.boxes.map((handBox) => detectFingers(input, handBox, config)));\n      skipped = 0;\n    }\n\n    const oldCache = [...cache.boxes];\n    cache.boxes.length = 0; // reset cache\n    if (config.cacheSensitivity > 0) {\n      for (let i = 0; i < cache.hands.length; i++) {\n        const boxKpt = box.square(cache.hands[i].keypoints, outputSize);\n        if (boxKpt.box[2] / (input.shape[2] || 1) > 0.05 && boxKpt.box[3] / (input.shape[1] || 1) > 0.05 && cache.hands[i].fingerScore && cache.hands[i].fingerScore > (config.hand.minConfidence || 0)) {\n          const boxScale = box.scale(boxKpt.box, boxExpandFact);\n          const boxScaleRaw = box.scale(boxKpt.boxRaw, boxExpandFact);\n          // const boxCrop = box.crop(boxScaleRaw);\n          cache.boxes.push({ ...oldCache[i], box: boxScale, boxRaw: boxScaleRaw });\n        }\n      }\n    }\n    for (let i = 0; i < cache.hands.length; i++) { // replace detected boxes with calculated boxes in final output\n      const bbox = box.calc(cache.hands[i].keypoints, outputSize);\n      cache.hands[i].box = bbox.box;\n      cache.hands[i].boxRaw = bbox.boxRaw;\n    }\n    resolve(cache.hands);\n  });\n}\n", "/**\n * Anti-spoofing model implementation\n */\n\nimport { log, now } from '../util/util';\nimport { loadModel } from '../tfjs/load';\nimport type { Config } from '../config';\nimport type { GraphModel, Tensor } from '../tfjs/types';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { env } from '../util/env';\n\nlet model: GraphModel | null;\nconst cached: number[] = [];\nlet skipped = Number.MAX_SAFE_INTEGER;\nlet lastCount = 0;\nlet lastTime = 0;\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (env.initial) model = null;\n  if (!model) model = await loadModel(config.face.liveness?.modelPath);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n\nexport async function predict(image: Tensor, config: Config, idx: number, count: number): Promise<number> {\n  if (!model?.['executor']) return 0;\n  const skipTime = (config.face.liveness?.skipTime || 0) > (now() - lastTime);\n  const skipFrame = skipped < (config.face.liveness?.skipFrames || 0);\n  if (config.skipAllowed && skipTime && skipFrame && (lastCount === count) && cached[idx]) {\n    skipped++;\n    return cached[idx];\n  }\n  skipped = 0;\n  return new Promise(async (resolve) => {\n    const resize = tf.image.resizeBilinear(image, [model?.inputs[0].shape ? model.inputs[0].shape[2] : 0, model?.inputs[0].shape ? model.inputs[0].shape[1] : 0], false);\n    const res = model?.execute(resize) as Tensor;\n    const num = (await res.data())[0];\n    cached[idx] = Math.round(100 * num) / 100;\n    lastCount = count;\n    lastTime = now();\n    tf.dispose([resize, res]);\n    resolve(cached[idx]);\n  });\n}\n", "export const kpt: string[] = [ // used to create part labels\n  'nose',\n  'leftEye',\n  'rightEye',\n  'leftEar',\n  'rightEar',\n  'leftShoulder',\n  'rightShoulder',\n  'leftElbow',\n  'rightElbow',\n  'leftWrist',\n  'rightWrist',\n  'leftHip',\n  'rightHip',\n  'leftKnee',\n  'rightKnee',\n  'leftAnkle',\n  'rightAnkle',\n];\n\nexport const horizontal: string[][] = [ // used to fix left vs right\n  ['leftEye', 'rightEye'],\n  ['leftEar', 'rightEar'],\n  ['leftShoulder', 'rightShoulder'],\n  ['leftElbow', 'rightElbow'],\n  ['leftWrist', 'rightWrist'],\n  ['leftHip', 'rightHip'],\n  ['leftKnee', 'rightKnee'],\n  ['leftAnkle', 'rightAnkle'],\n];\n\nexport const vertical: string[][] = [ // used to remove unlikely keypoint positions\n  ['leftKnee', 'leftShoulder'],\n  ['rightKnee', 'rightShoulder'],\n  ['leftAnkle', 'leftKnee'],\n  ['rightAnkle', 'rightKnee'],\n];\n\nexport const relative: string[][][] = [ // used to match relative body parts\n  [['leftHip', 'rightHip'], ['leftShoulder', 'rightShoulder']],\n  [['leftElbow', 'rightElbow'], ['leftShoulder', 'rightShoulder']],\n];\n\nexport const connected: Record<string, string[]> = { // used to create body outline in annotations\n  leftLeg: ['leftHip', 'leftKnee', 'leftAnkle'],\n  rightLeg: ['rightHip', 'rightKnee', 'rightAnkle'],\n  torso: ['leftShoulder', 'rightShoulder', 'rightHip', 'leftHip', 'leftShoulder'],\n  leftArm: ['leftShoulder', 'leftElbow', 'leftWrist'],\n  rightArm: ['rightShoulder', 'rightElbow', 'rightWrist'],\n  head: [],\n};\n", "import type { BodyKeypoint, BodyResult } from '../result';\nimport * as box from '../util/box';\nimport * as coords from './movenetcoords';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport type { Tensor } from '../tfjs/types';\n\nconst maxJitter = 0.005; // default allowed jitter is within 0.5%\n\nconst cache: {\n  keypoints: BodyKeypoint[],\n  padding: [number, number][];\n} = {\n  keypoints: [],\n  padding: [[0, 0], [0, 0], [0, 0], [0, 0]],\n};\n\nexport function bodyParts(body: BodyResult) { // model sometimes mixes up left vs right keypoints so we fix them\n  for (const pair of coords.horizontal) { // fix body parts left vs right\n    const left = body.keypoints.findIndex((kp) => kp.part === pair[0]);\n    const right = body.keypoints.findIndex((kp) => kp.part === pair[1]);\n    if (body.keypoints[left] && body.keypoints[right]) {\n      if (body.keypoints[left].position[0] < body.keypoints[right].position[0]) {\n        const tmp = body.keypoints[left];\n        body.keypoints[left] = body.keypoints[right];\n        body.keypoints[right] = tmp;\n      }\n    }\n  }\n  for (const pair of coords.vertical) { // remove body parts with improbable vertical position\n    const lower = body.keypoints.findIndex((kp) => (kp && kp.part === pair[0]));\n    const higher = body.keypoints.findIndex((kp) => (kp && kp.part === pair[1]));\n    if (body.keypoints[lower] && body.keypoints[higher]) {\n      if (body.keypoints[lower].position[1] < body.keypoints[higher].position[1]) {\n        body.keypoints.splice(lower, 1);\n      }\n    }\n  }\n  for (const [pair, compare] of coords.relative) { // rearrange body parts according to their relative position\n    const left = body.keypoints.findIndex((kp) => (kp && kp.part === pair[0]));\n    const right = body.keypoints.findIndex((kp) => (kp && kp.part === pair[1]));\n    const leftTo = body.keypoints.findIndex((kp) => (kp && kp.part === compare[0]));\n    const rightTo = body.keypoints.findIndex((kp) => (kp && kp.part === compare[1]));\n    if (!body.keypoints[leftTo] || !body.keypoints[rightTo]) continue; // only if we have both compare points\n    const distanceLeft = body.keypoints[left] ? [\n      Math.abs(body.keypoints[leftTo].position[0] - body.keypoints[left].position[0]),\n      Math.abs(body.keypoints[rightTo].position[0] - body.keypoints[left].position[0]),\n    ] : [0, 0];\n    const distanceRight = body.keypoints[right] ? [\n      Math.abs(body.keypoints[rightTo].position[0] - body.keypoints[right].position[0]),\n      Math.abs(body.keypoints[leftTo].position[0] - body.keypoints[right].position[0]),\n    ] : [0, 0];\n    if (distanceLeft[0] > distanceLeft[1] || distanceRight[0] > distanceRight[1]) { // should flip keypoints\n      const tmp = body.keypoints[left];\n      body.keypoints[left] = body.keypoints[right];\n      body.keypoints[right] = tmp;\n    }\n  }\n}\n\nexport function jitter(keypoints: BodyKeypoint[]): BodyKeypoint[] {\n  for (let i = 0; i < keypoints.length; i++) {\n    if (keypoints[i] && cache.keypoints[i]) {\n      const diff = [Math.abs(keypoints[i].positionRaw[0] - cache.keypoints[i].positionRaw[0]), Math.abs(keypoints[i].positionRaw[1] - cache.keypoints[i].positionRaw[1])];\n      if (diff[0] < maxJitter && diff[1] < maxJitter) {\n        keypoints[i] = cache.keypoints[i]; // below jitter so replace keypoint\n      } else {\n        cache.keypoints[i] = keypoints[i]; // above jitter so update cache\n      }\n    } else {\n      cache.keypoints[i] = keypoints[i]; // cache for keypoint doesnt exist so create it here\n    }\n  }\n  return keypoints;\n}\n\nexport function padInput(input: Tensor, inputSize: number): Tensor {\n  const t: Record<string, Tensor> = {};\n  if (!input?.shape?.[1] || !input?.shape?.[2]) return input;\n  cache.padding = [\n    [0, 0], // dont touch batch\n    [input.shape[2] > input.shape[1] ? Math.trunc((input.shape[2] - input.shape[1]) / 2) : 0, input.shape[2] > input.shape[1] ? Math.trunc((input.shape[2] - input.shape[1]) / 2) : 0], // height before&after\n    [input.shape[1] > input.shape[2] ? Math.trunc((input.shape[1] - input.shape[2]) / 2) : 0, input.shape[1] > input.shape[2] ? Math.trunc((input.shape[1] - input.shape[2]) / 2) : 0], // width before&after\n    [0, 0], // dont touch rbg\n  ];\n  t.pad = tf.pad(input, cache.padding);\n  t.resize = tf.image.resizeBilinear(t.pad, [inputSize, inputSize]);\n  const final = tf.cast(t.resize, 'int32');\n  Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n  return final;\n}\n\nexport function rescaleBody(body: BodyResult, outputSize: [number, number]): BodyResult {\n  body.keypoints = body.keypoints.filter((kpt) => kpt?.position); // filter invalid keypoints\n  for (const kpt of body.keypoints) {\n    kpt.position = [\n      kpt.position[0] * (outputSize[0] + cache.padding[2][0] + cache.padding[2][1]) / outputSize[0] - cache.padding[2][0],\n      kpt.position[1] * (outputSize[1] + cache.padding[1][0] + cache.padding[1][1]) / outputSize[1] - cache.padding[1][0],\n    ];\n    kpt.positionRaw = [\n      kpt.position[0] / outputSize[0], kpt.position[1] / outputSize[1],\n    ];\n  }\n  const rescaledBoxes = box.calc(body.keypoints.map((pt) => pt.position), outputSize);\n  body.box = rescaledBoxes.box;\n  body.boxRaw = rescaledBoxes.boxRaw;\n  return body;\n}\n", "/**\n * MoveNet model implementation\n *\n * Based on: [**MoveNet**](https://blog.tensorflow.org/2021/05/next-generation-pose-detection-with-movenet-and-tensorflowjs.html)\n */\n\nimport { log, now } from '../util/util';\nimport * as box from '../util/box';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport * as coords from './movenetcoords';\nimport * as fix from './movenetfix';\nimport { loadModel } from '../tfjs/load';\nimport type { BodyKeypoint, BodyResult, BodyLandmark, BodyAnnotation, Box, Point } from '../result';\nimport type { GraphModel, Tensor } from '../tfjs/types';\nimport type { Config } from '../config';\nimport { fakeOps } from '../tfjs/backend';\nimport { env } from '../util/env';\n\nlet model: GraphModel | null;\nlet inputSize = 0;\nlet skipped = Number.MAX_SAFE_INTEGER;\n// const boxExpandFact = 1.5; // increase to 150%\n\nconst cache: {\n  boxes: Box[], // unused\n  bodies: BodyResult[];\n  last: number,\n} = {\n  boxes: [],\n  bodies: [],\n  last: 0,\n};\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (env.initial) model = null;\n  if (!model) {\n    fakeOps(['size'], config);\n    model = await loadModel(config.body.modelPath);\n  } else if (config.debug) log('cached model:', model['modelUrl']);\n  inputSize = (model?.['executor'] && model?.inputs?.[0].shape) ? model.inputs[0].shape[2] : 0;\n  if (inputSize < 64) inputSize = 256;\n  return model;\n}\n\nfunction parseSinglePose(res, config, image) {\n  const kpt = res[0][0];\n  const keypoints: BodyKeypoint[] = [];\n  let score = 0;\n  for (let id = 0; id < kpt.length; id++) {\n    score = kpt[id][2];\n    if (score > config.body.minConfidence) {\n      const positionRaw: Point = [kpt[id][1], kpt[id][0]];\n      keypoints.push({\n        score: Math.round(100 * score) / 100,\n        part: coords.kpt[id] as BodyLandmark,\n        positionRaw,\n        position: [ // normalized to input image size\n          Math.round((image.shape[2] || 0) * positionRaw[0]),\n          Math.round((image.shape[1] || 0) * positionRaw[1]),\n        ],\n      });\n    }\n  }\n  score = keypoints.reduce((prev, curr) => (curr.score > prev ? curr.score : prev), 0);\n  const bodies: BodyResult[] = [];\n  const newBox = box.calc(keypoints.map((pt) => pt.position), [image.shape[2], image.shape[1]]);\n  const annotations: Record<string, Point[][]> = {};\n  for (const [name, indexes] of Object.entries(coords.connected)) {\n    const pt: Point[][] = [];\n    for (let i = 0; i < indexes.length - 1; i++) {\n      const pt0 = keypoints.find((kp) => kp.part === indexes[i]);\n      const pt1 = keypoints.find((kp) => kp.part === indexes[i + 1]);\n      if (pt0 && pt1 && pt0.score > (config.body.minConfidence || 0) && pt1.score > (config.body.minConfidence || 0)) pt.push([pt0.position, pt1.position]);\n    }\n    annotations[name] = pt;\n  }\n  const body: BodyResult = { id: 0, score, box: newBox.box, boxRaw: newBox.boxRaw, keypoints, annotations };\n  fix.bodyParts(body);\n  bodies.push(body);\n  return bodies;\n}\n\nfunction parseMultiPose(res, config, image) {\n  const bodies: BodyResult[] = [];\n  for (let id = 0; id < res[0].length; id++) {\n    const kpt = res[0][id];\n    const totalScore = Math.round(100 * kpt[51 + 4]) / 100;\n    if (totalScore > config.body.minConfidence) {\n      const keypoints: BodyKeypoint[] = [];\n      for (let i = 0; i < 17; i++) {\n        const score = kpt[3 * i + 2];\n        if (score > config.body.minConfidence) {\n          const positionRaw: Point = [kpt[3 * i + 1], kpt[3 * i + 0]];\n          keypoints.push({\n            part: coords.kpt[i] as BodyLandmark,\n            score: Math.round(100 * score) / 100,\n            positionRaw,\n            position: [Math.round((image.shape[2] || 0) * positionRaw[0]), Math.round((image.shape[1] || 0) * positionRaw[1])],\n          });\n        }\n      }\n      const newBox = box.calc(keypoints.map((pt) => pt.position), [image.shape[2], image.shape[1]]);\n      // movenet-multipose has built-in box details\n      // const boxRaw: Box = [kpt[51 + 1], kpt[51 + 0], kpt[51 + 3] - kpt[51 + 1], kpt[51 + 2] - kpt[51 + 0]];\n      // const box: Box = [Math.trunc(boxRaw[0] * (image.shape[2] || 0)), Math.trunc(boxRaw[1] * (image.shape[1] || 0)), Math.trunc(boxRaw[2] * (image.shape[2] || 0)), Math.trunc(boxRaw[3] * (image.shape[1] || 0))];\n      const annotations: Record<BodyAnnotation, Point[][]> = {} as Record<BodyAnnotation, Point[][]>;\n      for (const [name, indexes] of Object.entries(coords.connected)) {\n        const pt: Point[][] = [];\n        for (let i = 0; i < indexes.length - 1; i++) {\n          const pt0 = keypoints.find((kp) => kp.part === indexes[i]);\n          const pt1 = keypoints.find((kp) => kp.part === indexes[i + 1]);\n          if (pt0 && pt1 && pt0.score > (config.body.minConfidence || 0) && pt1.score > (config.body.minConfidence || 0)) pt.push([pt0.position, pt1.position]);\n        }\n        annotations[name] = pt;\n      }\n      const body: BodyResult = { id, score: totalScore, box: newBox.box, boxRaw: newBox.boxRaw, keypoints: [...keypoints], annotations };\n      fix.bodyParts(body);\n      bodies.push(body);\n    }\n  }\n  bodies.sort((a, b) => b.score - a.score);\n  if (bodies.length > config.body.maxDetected) bodies.length = config.body.maxDetected;\n  return bodies;\n}\n\nexport async function predict(input: Tensor, config: Config): Promise<BodyResult[]> {\n  if (!model?.['executor'] || !model?.inputs?.[0].shape) return []; // something is wrong with the model\n  if (!config.skipAllowed) cache.boxes.length = 0; // allowed to use cache or not\n  skipped++; // increment skip frames\n  const skipTime = (config.body.skipTime || 0) > (now() - cache.last);\n  const skipFrame = skipped < (config.body.skipFrames || 0);\n  if (config.skipAllowed && skipTime && skipFrame) {\n    return cache.bodies; // return cached results without running anything\n  }\n  return new Promise(async (resolve) => {\n    const t: Record<string, Tensor> = {};\n    skipped = 0;\n    // run detection on squared input and cached boxes\n    /*\n    cache.bodies = []; // reset bodies result\n    if (cache.boxes.length >= (config.body.maxDetected || 0)) { // if we have enough cached boxes run detection using cache\n      for (let i = 0; i < cache.boxes.length; i++) { // run detection based on cached boxes\n        t.crop = tf.image.cropAndResize(input, [cache.boxes[i]], [0], [inputSize, inputSize], 'bilinear');\n        t.cast = tf.cast(t.crop, 'int32');\n        // t.input = prepareImage(input);\n        t.res = model?.execute(t.cast) as Tensor;\n        const res = await t.res.array();\n        const newBodies = (t.res.shape[2] === 17) ? await parseSinglePose(res, config, input, cache.boxes[i]) : await parseMultiPose(res, config, input, cache.boxes[i]);\n        cache.bodies = cache.bodies.concat(newBodies);\n        Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n      }\n    }\n    if (cache.bodies.length !== config.body.maxDetected) { // did not find enough bodies based on cached boxes so run detection on full frame\n      t.input = prepareImage(input);\n      t.res = model?.execute(t.input) as Tensor;\n      const res = await t.res.array();\n      cache.bodies = (t.res.shape[2] === 17) ? await parseSinglePose(res, config, input, [0, 0, 1, 1]) : await parseMultiPose(res, config, input, [0, 0, 1, 1]);\n      for (const body of cache.bodies) rescaleBody(body, [input.shape[2] || 1, input.shape[1] || 1]);\n      Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n    }\n    cache.boxes.length = 0; // reset cache\n    for (let i = 0; i < cache.bodies.length; i++) {\n      if (cache.bodies[i].keypoints.length > (coords.kpt.length / 2)) { // only update cache if we detected at least half keypoints\n        const scaledBox = box.scale(cache.bodies[i].boxRaw, boxExpandFact);\n        const cropBox = box.crop(scaledBox);\n        cache.boxes.push(cropBox);\n      }\n    }\n    */\n\n    // run detection on squared input and no cached boxes\n    t.input = fix.padInput(input, inputSize);\n    t.res = model?.execute(t.input) as Tensor;\n    cache.last = now();\n    const res = await t.res.array();\n    cache.bodies = (t.res.shape[2] === 17)\n      ? parseSinglePose(res, config, input)\n      : parseMultiPose(res, config, input);\n    for (const body of cache.bodies) {\n      fix.rescaleBody(body, [input.shape[2] || 1, input.shape[1] || 1]);\n      fix.jitter(body.keypoints);\n    }\n    Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n\n    resolve(cache.bodies);\n  });\n}\n", "/**\n * NanoDet object detection model implementation\n *\n * Based on: [**MB3-CenterNet**](https://github.com/610265158/mobilenetv3_centernet)\n */\n\nimport { log, now } from '../util/util';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport { constants } from '../tfjs/constants';\nimport { labels } from './labels';\nimport type { ObjectResult, ObjectType, Box } from '../result';\nimport type { GraphModel, Tensor } from '../tfjs/types';\nimport type { Config } from '../config';\nimport { env } from '../util/env';\n\nlet model: GraphModel;\nlet last: ObjectResult[] = [];\nlet lastTime = 0;\nlet skipped = Number.MAX_SAFE_INTEGER;\nlet inputSize = 0;\n\nconst scaleBox = 2.5; // increase box size\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (!model || env.initial) {\n    model = await loadModel(config.object.modelPath);\n    const inputs = model?.['executor'] ? Object.values(model.modelSignature['inputs']) : undefined;\n    inputSize = Array.isArray(inputs) ? parseInt(inputs[0].tensorShape.dim[2].size) : 416;\n  } else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n\nasync function process(res: Tensor[], outputShape: [number, number], config: Config) {\n  let id = 0;\n  let results: ObjectResult[] = [];\n  const size = inputSize;\n  for (const strideSize of [1, 2, 4]) { // try each stride size as it detects large/medium/small objects\n    // find scores, boxes, classes\n    const baseSize = strideSize * 13; // 13x13=169, 26x26=676, 52x52=2704\n    // find boxes and scores output depending on stride\n    const scoresT = tf.squeeze(res.find((a: Tensor) => (a.shape[1] === (baseSize ** 2) && (a.shape[2] || 0) === labels.length)));\n    const scores = await scoresT.array(); // optionally use exponential scores or just as-is\n    const featuresT = tf.squeeze(res.find((a: Tensor) => (a.shape[1] === (baseSize ** 2) && (a.shape[2] || 0) < labels.length)));\n    const boxesMaxT = featuresT.reshape([-1, 4, featuresT.shape[1] / 4]); // reshape [output] to [4, output / 4] where number is number of different features inside each stride\n    const boxIdxT = boxesMaxT.argMax(2); // what we need is indexes of features with highest scores, not values itself\n    const boxIdx = await boxIdxT.array(); // what we need is indexes of features with highest scores, not values itself\n    for (let i = 0; i < scoresT.shape[0]; i++) { // total strides (x * y matrix)\n      for (let j = 0; j < scoresT.shape[1]; j++) { // one score for each class\n        const score = scores[i][j]; // get score for current position\n        if (score > (config.object.minConfidence || 0) && j !== 61) {\n          const cx = (0.5 + Math.trunc(i % baseSize)) / baseSize; // center.x normalized to range 0..1\n          const cy = (0.5 + Math.trunc(i / baseSize)) / baseSize; // center.y normalized to range 0..1\n          const boxOffset = boxIdx[i].map((a: number) => a * (baseSize / strideSize / (size))); // just grab indexes of features with highest scores\n          const [x, y] = [\n            cx - (scaleBox / strideSize * boxOffset[0]),\n            cy - (scaleBox / strideSize * boxOffset[1]),\n          ];\n          const [w, h] = [\n            cx + (scaleBox / strideSize * boxOffset[2]) - x,\n            cy + (scaleBox / strideSize * boxOffset[3]) - y,\n          ];\n          let boxRaw: Box = [x, y, w, h]; // results normalized to range 0..1\n          boxRaw = boxRaw.map((a) => Math.max(0, Math.min(a, 1))) as Box; // fix out-of-bounds coords\n          const box = [ // results normalized to input image pixels\n            boxRaw[0] * outputShape[0],\n            boxRaw[1] * outputShape[1],\n            boxRaw[2] * outputShape[0],\n            boxRaw[3] * outputShape[1],\n          ];\n          const result = {\n            id: id++,\n            // strideSize,\n            score: Math.round(100 * score) / 100,\n            class: j + 1,\n            label: labels[j].label as ObjectType,\n            // center: [Math.trunc(outputShape[0] * cx), Math.trunc(outputShape[1] * cy)],\n            // centerRaw: [cx, cy],\n            box: box.map((a) => Math.trunc(a)) as Box,\n            boxRaw,\n          };\n          results.push(result);\n        }\n      }\n    }\n    tf.dispose([scoresT, featuresT, boxesMaxT, boxIdxT]);\n  }\n\n  // normally nms is run on raw results, but since boxes need to be calculated this way we skip calulcation of\n  // unnecessary boxes and run nms only on good candidates (basically it just does IOU analysis as scores are already filtered)\n  const nmsBoxes = results.map((a) => [a.boxRaw[1], a.boxRaw[0], a.boxRaw[3], a.boxRaw[2]]); // switches coordinates from x,y to y,x as expected by tf.nms\n  const nmsScores = results.map((a) => a.score);\n  let nmsIdx: number[] = [];\n  if (nmsBoxes && nmsBoxes.length > 0) {\n    const nms = await tf.image.nonMaxSuppressionAsync(nmsBoxes, nmsScores, config.object.maxDetected, config.object.iouThreshold, config.object.minConfidence);\n    nmsIdx = await nms.data();\n    tf.dispose(nms);\n  }\n\n  // filter & sort results\n  results = results\n    .filter((_val, idx) => nmsIdx.includes(idx))\n    .sort((a, b) => (b.score - a.score));\n\n  return results;\n}\n\nexport async function predict(image: Tensor, config: Config): Promise<ObjectResult[]> {\n  if (!model?.['executor']) return [];\n  const skipTime = (config.object.skipTime || 0) > (now() - lastTime);\n  const skipFrame = skipped < (config.object.skipFrames || 0);\n  if (config.skipAllowed && skipTime && skipFrame && (last.length > 0)) {\n    skipped++;\n    return last;\n  }\n  skipped = 0;\n  if (!env.kernels.includes('mod') || !env.kernels.includes('sparsetodense')) return last;\n  return new Promise(async (resolve) => {\n    const outputSize = [image.shape[2] || 0, image.shape[1] || 0];\n    const resizeT = tf.image.resizeBilinear(image, [inputSize, inputSize], false);\n    const normT = tf.div(resizeT, constants.tf255);\n    const transposeT = tf.transpose(normT, [0, 3, 1, 2]);\n\n    let objectT;\n    if (config.object.enabled) objectT = model.execute(transposeT);\n    lastTime = now();\n\n    const obj = await process(objectT as Tensor[], outputSize as [number, number], config);\n    last = obj;\n    tf.dispose([resizeT, normT, transposeT, ...objectT]);\n    resolve(obj);\n  });\n}\n", "/**\n * PoseNet body detection model implementation constants\n * See `posenet.ts` for entry point\n */\n\nimport type { Point, BodyResult, BodyAnnotation, BodyLandmark } from '../result';\n\nexport const partNames = [\n  'nose', 'leftEye', 'rightEye', 'leftEar', 'rightEar', 'leftShoulder',\n  'rightShoulder', 'leftElbow', 'rightElbow', 'leftWrist', 'rightWrist',\n  'leftHip', 'rightHip', 'leftKnee', 'rightKnee', 'leftAnkle', 'rightAnkle',\n];\n\nexport const count = partNames.length; // 17 keypoints\n\nexport const partIds = partNames.reduce((result, jointName, i) => {\n  result[jointName] = i;\n  return result;\n}, {});\n\nconst connectedPartNames = [\n  ['leftHip', 'leftShoulder'], ['leftElbow', 'leftShoulder'],\n  ['leftElbow', 'leftWrist'], ['leftHip', 'leftKnee'],\n  ['leftKnee', 'leftAnkle'], ['rightHip', 'rightShoulder'],\n  ['rightElbow', 'rightShoulder'], ['rightElbow', 'rightWrist'],\n  ['rightHip', 'rightKnee'], ['rightKnee', 'rightAnkle'],\n  ['leftShoulder', 'rightShoulder'], ['leftHip', 'rightHip'],\n];\nexport const connectedPartIndices = connectedPartNames.map(([jointNameA, jointNameB]) => ([partIds[jointNameA], partIds[jointNameB]]));\n\nexport const poseChain = [\n  ['nose', 'leftEye'], ['leftEye', 'leftEar'], ['nose', 'rightEye'],\n  ['rightEye', 'rightEar'], ['nose', 'leftShoulder'],\n  ['leftShoulder', 'leftElbow'], ['leftElbow', 'leftWrist'],\n  ['leftShoulder', 'leftHip'], ['leftHip', 'leftKnee'],\n  ['leftKnee', 'leftAnkle'], ['nose', 'rightShoulder'],\n  ['rightShoulder', 'rightElbow'], ['rightElbow', 'rightWrist'],\n  ['rightShoulder', 'rightHip'], ['rightHip', 'rightKnee'],\n  ['rightKnee', 'rightAnkle'],\n];\n\nexport function eitherPointDoesntMeetConfidence(a: number, b: number, minConfidence: number) {\n  return (a < minConfidence || b < minConfidence);\n}\n\nexport function getAdjacentKeyPoints(keypoints, minConfidence: number) {\n  return connectedPartIndices.reduce((result, [leftJoint, rightJoint]) => {\n    if (eitherPointDoesntMeetConfidence(keypoints[leftJoint].score, keypoints[rightJoint].score, minConfidence)) {\n      return result;\n    }\n    result.push([keypoints[leftJoint], keypoints[rightJoint]]);\n    return result;\n  }, []);\n}\n\nexport function getBoundingBox(keypoints): [number, number, number, number] {\n  const coord = keypoints.reduce(({ maxX, maxY, minX, minY }, { position: { x, y } }) => ({\n    maxX: Math.max(maxX, x),\n    maxY: Math.max(maxY, y),\n    minX: Math.min(minX, x),\n    minY: Math.min(minY, y),\n  }), {\n    maxX: Number.NEGATIVE_INFINITY,\n    maxY: Number.NEGATIVE_INFINITY,\n    minX: Number.POSITIVE_INFINITY,\n    minY: Number.POSITIVE_INFINITY,\n  });\n  return [coord.minX, coord.minY, coord.maxX - coord.minX, coord.maxY - coord.minY];\n}\n\nexport function scalePoses(poses, [height, width], [inputResolutionHeight, inputResolutionWidth]): BodyResult[] {\n  const scaleY = height / inputResolutionHeight;\n  const scaleX = width / inputResolutionWidth;\n  const scalePose = (pose, i): BodyResult => ({\n    id: i,\n    score: pose.score,\n    boxRaw: [pose.box[0] / inputResolutionWidth, pose.box[1] / inputResolutionHeight, pose.box[2] / inputResolutionWidth, pose.box[3] / inputResolutionHeight],\n    box: [Math.trunc(pose.box[0] * scaleX), Math.trunc(pose.box[1] * scaleY), Math.trunc(pose.box[2] * scaleX), Math.trunc(pose.box[3] * scaleY)],\n    keypoints: pose.keypoints.map(({ score, part, position }) => ({\n      score: score as number,\n      part: part as BodyLandmark,\n      position: [Math.trunc(position.x * scaleX), Math.trunc(position.y * scaleY)] as Point,\n      positionRaw: [position.x / inputResolutionHeight, position.y / inputResolutionHeight] as Point,\n    })),\n    annotations: {} as Record<BodyAnnotation, Point[][]>,\n  });\n  const scaledPoses = poses.map((pose, i) => scalePose(pose, i));\n  return scaledPoses;\n}\n\n// algorithm based on Coursera Lecture from Algorithms, Part 1: https://www.coursera.org/learn/algorithms-part1/lecture/ZjoSM/heapsort\nexport class MaxHeap {\n  priorityQueue: unknown[]; // don't touch\n  numberOfElements: number;\n  getElementValue: unknown; // function call\n\n  constructor(maxSize, getElementValue) {\n    this.priorityQueue = new Array(maxSize);\n    this.numberOfElements = -1;\n    this.getElementValue = getElementValue;\n  }\n\n  enqueue(x) {\n    this.priorityQueue[++this.numberOfElements] = x;\n    this.swim(this.numberOfElements);\n  }\n\n  dequeue() {\n    const max = this.priorityQueue[0];\n    this.exchange(0, this.numberOfElements--);\n    this.sink(0);\n    this.priorityQueue[this.numberOfElements + 1] = null;\n    return max;\n  }\n\n  empty() { return this.numberOfElements === -1; }\n\n  size() { return this.numberOfElements + 1; }\n\n  all() { return this.priorityQueue.slice(0, this.numberOfElements + 1); }\n\n  max() { return this.priorityQueue[0]; }\n\n  swim(k) {\n    while (k > 0 && this.less(Math.floor(k / 2), k)) {\n      this.exchange(k, Math.floor(k / 2));\n      k = Math.floor(k / 2);\n    }\n  }\n\n  sink(k) {\n    while (2 * k <= this.numberOfElements) {\n      let j = 2 * k;\n      if (j < this.numberOfElements && this.less(j, j + 1)) j++;\n      if (!this.less(k, j)) break;\n      this.exchange(k, j);\n      k = j;\n    }\n  }\n\n  getValueAt(i) {\n    // @ts-ignore getter is of unknown type\n    return this.getElementValue(this.priorityQueue[i]);\n  }\n\n  less(i, j) {\n    return this.getValueAt(i) < this.getValueAt(j);\n  }\n\n  exchange(i, j) {\n    const t = this.priorityQueue[i];\n    this.priorityQueue[i] = this.priorityQueue[j];\n    this.priorityQueue[j] = t;\n  }\n}\n\nexport function getOffsetPoint(y, x, keypoint: number, offsets) {\n  return {\n    y: offsets.get(y, x, keypoint),\n    x: offsets.get(y, x, keypoint + count),\n  };\n}\n\nexport function getImageCoords(part, outputStride: number, offsets) {\n  const { heatmapY, heatmapX, id: keypoint } = part;\n  const { y, x } = getOffsetPoint(heatmapY, heatmapX, keypoint, offsets);\n  return {\n    x: part.heatmapX * outputStride + x,\n    y: part.heatmapY * outputStride + y,\n  };\n}\n\nexport function fillArray(element, size) {\n  const result = new Array(size);\n  for (let i = 0; i < size; i++) {\n    result[i] = element;\n  }\n  return result;\n}\n\nexport function clamp(a, min, max) {\n  if (a < min) return min;\n  if (a > max) return max;\n  return a;\n}\n\nexport function squaredDistance(y1, x1, y2, x2) {\n  const dy = y2 - y1;\n  const dx = x2 - x1;\n  return dy * dy + dx * dx;\n}\n\nexport function addVectors(a: { x: number, y: number }, b: { x: number, y: number }) {\n  return { x: a.x + b.x, y: a.y + b.y };\n}\n\nexport function clampVector(a, min, max) {\n  return { y: clamp(a.y, min, max), x: clamp(a.x, min, max) };\n}\n", "/**\n * PoseNet body detection model implementation\n *\n * Based on: [**PoseNet**](https://medium.com/tensorflow/real-time-human-pose-estimation-in-the-browser-with-tensorflow-js-7dd0bc881cd5)\n */\n\nimport { log } from '../util/util';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport type { BodyResult, BodyLandmark, Box } from '../result';\nimport type { Tensor, GraphModel } from '../tfjs/types';\nimport type { Config } from '../config';\nimport { env } from '../util/env';\nimport * as utils from './posenetutils';\n\nlet model: GraphModel;\nconst poseNetOutputs = ['MobilenetV1/offset_2/BiasAdd'/* offsets */, 'MobilenetV1/heatmap_2/BiasAdd'/* heatmapScores */, 'MobilenetV1/displacement_fwd_2/BiasAdd'/* displacementFwd */, 'MobilenetV1/displacement_bwd_2/BiasAdd'/* displacementBwd */];\nconst localMaximumRadius = 1;\nconst outputStride = 16;\nconst squaredNmsRadius = 50 ** 2;\n\nfunction traverse(edgeId: number, sourceKeypoint, targetId, scores, offsets, displacements, offsetRefineStep = 2) {\n  const getDisplacement = (point) => ({\n    y: displacements.get(point.y, point.x, edgeId),\n    x: displacements.get(point.y, point.x, (displacements.shape[2] / 2) + edgeId),\n  });\n  const getStridedIndexNearPoint = (point, height, width) => ({\n    y: utils.clamp(Math.round(point.y / outputStride), 0, height - 1),\n    x: utils.clamp(Math.round(point.x / outputStride), 0, width - 1),\n  });\n\n  const [height, width] = scores.shape;\n  // Nearest neighbor interpolation for the source->target displacements.\n  const sourceKeypointIndices = getStridedIndexNearPoint(sourceKeypoint.position, height, width);\n  const displacement = getDisplacement(sourceKeypointIndices);\n  const displacedPoint = utils.addVectors(sourceKeypoint.position, displacement);\n  let targetKeypoint = displacedPoint;\n  for (let i = 0; i < offsetRefineStep; i++) {\n    const targetKeypointIndices = getStridedIndexNearPoint(targetKeypoint, height, width);\n    const offsetPoint = utils.getOffsetPoint(targetKeypointIndices.y, targetKeypointIndices.x, targetId, offsets);\n    targetKeypoint = utils.addVectors(\n      { x: targetKeypointIndices.x * outputStride, y: targetKeypointIndices.y * outputStride },\n      { x: offsetPoint.x, y: offsetPoint.y },\n    );\n  }\n  const targetKeyPointIndices = getStridedIndexNearPoint(targetKeypoint, height, width);\n  const score = scores.get(targetKeyPointIndices.y, targetKeyPointIndices.x, targetId);\n  return { position: targetKeypoint, part: utils.partNames[targetId], score };\n}\n\nexport function decodePose(root, scores, offsets, displacementsFwd, displacementsBwd) {\n  const tuples = utils.poseChain.map(([parentJoinName, childJoinName]) => ([utils.partIds[parentJoinName], utils.partIds[childJoinName]]));\n  const edgesFwd = tuples.map(([, childJointId]) => childJointId);\n  const edgesBwd = tuples.map(([parentJointId]) => parentJointId);\n  const numParts = scores.shape[2]; // [21,21,17]\n  const numEdges = edgesFwd.length;\n  const keypoints = new Array(numParts);\n  // Start a new detection instance at the position of the root.\n  const rootPoint = utils.getImageCoords(root.part, outputStride, offsets);\n  keypoints[root.part.id] = {\n    score: root.score,\n    part: utils.partNames[root.part.id] as BodyLandmark,\n    position: rootPoint,\n  };\n  // Decode the part positions upwards in the tree, following the backward displacements.\n  for (let edge = numEdges - 1; edge >= 0; --edge) {\n    const sourceId = edgesFwd[edge];\n    const targetId = edgesBwd[edge];\n    if (keypoints[sourceId] && !keypoints[targetId]) {\n      keypoints[targetId] = traverse(edge, keypoints[sourceId], targetId, scores, offsets, displacementsBwd);\n    }\n  }\n  // Decode the part positions downwards in the tree, following the forward displacements.\n  for (let edge = 0; edge < numEdges; ++edge) {\n    const sourceId = edgesBwd[edge];\n    const targetId = edgesFwd[edge];\n    if (keypoints[sourceId] && !keypoints[targetId]) {\n      keypoints[targetId] = traverse(edge, keypoints[sourceId], targetId, scores, offsets, displacementsFwd);\n    }\n  }\n  return keypoints;\n}\n\nfunction scoreIsMaximumInLocalWindow(keypointId, score: number, heatmapY: number, heatmapX: number, scores) {\n  const [height, width]: [number, number] = scores.shape;\n  let localMaximum = true;\n  const yStart = Math.max(heatmapY - localMaximumRadius, 0);\n  const yEnd = Math.min(heatmapY + localMaximumRadius + 1, height);\n  for (let yCurrent = yStart; yCurrent < yEnd; ++yCurrent) {\n    const xStart = Math.max(heatmapX - localMaximumRadius, 0);\n    const xEnd = Math.min(heatmapX + localMaximumRadius + 1, width);\n    for (let xCurrent = xStart; xCurrent < xEnd; ++xCurrent) {\n      if (scores.get(yCurrent, xCurrent, keypointId) > score) {\n        localMaximum = false;\n        break;\n      }\n    }\n    if (!localMaximum) break;\n  }\n  return localMaximum;\n}\n\nexport function buildPartWithScoreQueue(minConfidence, scores) {\n  const [height, width, numKeypoints] = scores.shape;\n  const queue = new utils.MaxHeap(height * width * numKeypoints, ({ score }) => score);\n  for (let heatmapY = 0; heatmapY < height; ++heatmapY) {\n    for (let heatmapX = 0; heatmapX < width; ++heatmapX) {\n      for (let keypointId = 0; keypointId < numKeypoints; ++keypointId) {\n        const score = scores.get(heatmapY, heatmapX, keypointId);\n        // Only consider parts with score greater or equal to threshold as root candidates.\n        if (score < minConfidence) continue;\n        // Only consider keypoints whose score is maximum in a local window.\n        if (scoreIsMaximumInLocalWindow(keypointId, score, heatmapY, heatmapX, scores)) queue.enqueue({ score, part: { heatmapY, heatmapX, id: keypointId } });\n      }\n    }\n  }\n  return queue;\n}\n\nfunction withinRadius(poses, { x, y }, keypointId) {\n  return poses.some(({ keypoints }) => {\n    const correspondingKeypoint = keypoints[keypointId]?.position;\n    if (!correspondingKeypoint) return false;\n    return utils.squaredDistance(y, x, correspondingKeypoint.y, correspondingKeypoint.x) <= squaredNmsRadius;\n  });\n}\n\nfunction getInstanceScore(existingPoses, keypoints) {\n  const notOverlappedKeypointScores = keypoints.reduce((result, { position, score }, keypointId) => {\n    if (!withinRadius(existingPoses, position, keypointId)) result += score;\n    return result;\n  }, 0.0);\n  return notOverlappedKeypointScores / keypoints.length;\n}\n\nexport function decode(offsets, scores, displacementsFwd, displacementsBwd, maxDetected, minConfidence) {\n  const poses: { keypoints, box: Box, score: number }[] = [];\n  const queue = buildPartWithScoreQueue(minConfidence, scores);\n  // Generate at most maxDetected object instances per image in decreasing root part score order.\n  while (poses.length < maxDetected && !queue.empty()) {\n    // The top element in the queue is the next root candidate.\n    const root = queue.dequeue();\n    // Part-based non-maximum suppression: We reject a root candidate if it is within a disk of `nmsRadius` pixels from the corresponding part of a previously detected instance.\n    // @ts-ignore this one is tree walk\n    const rootImageCoords = utils.getImageCoords(root.part, outputStride, offsets);\n    // @ts-ignore this one is tree walk\n    if (withinRadius(poses, rootImageCoords, root.part.id)) continue;\n    // Else start a new detection instance at the position of the root.\n    let keypoints = decodePose(root, scores, offsets, displacementsFwd, displacementsBwd);\n    keypoints = keypoints.filter((a) => a.score > minConfidence);\n    const score = getInstanceScore(poses, keypoints);\n    const box = utils.getBoundingBox(keypoints);\n    if (score > minConfidence) poses.push({ keypoints, box, score: Math.round(100 * score) / 100 });\n  }\n  return poses;\n}\n\nexport async function predict(input: Tensor, config: Config): Promise<BodyResult[]> {\n  /** posenet is mostly obsolete\n   * caching is not implemented\n   */\n  if (!model?.['executor']) return [];\n  const res = tf.tidy(() => {\n    if (!model.inputs[0].shape) return [];\n    const resized = tf.image.resizeBilinear(input, [model.inputs[0].shape[2], model.inputs[0].shape[1]]);\n    const normalized = tf.sub(tf.div(tf.cast(resized, 'float32'), 127.5), 1.0);\n    const results: Tensor[] = model.execute(normalized, poseNetOutputs) as Tensor[];\n    const results3d = results.map((y) => tf.squeeze(y, [0]));\n    results3d[1] = tf.sigmoid(results3d[1]); // apply sigmoid on scores\n    return results3d;\n  });\n\n  const buffers = await Promise.all(res.map((tensor: Tensor) => tensor.buffer()));\n  for (const t of res) tf.dispose(t);\n\n  const decoded = decode(buffers[0], buffers[1], buffers[2], buffers[3], config.body.maxDetected, config.body.minConfidence);\n  if (!model.inputs[0].shape) return [];\n  const scaled = utils.scalePoses(decoded, [input.shape[1], input.shape[2]], [model.inputs[0].shape[2], model.inputs[0].shape[1]]);\n  return scaled;\n}\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (!model || env.initial) model = await loadModel(config.body.modelPath);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n", "/**\n * Image segmentation for body detection model\n *\n * Based on:\n * - [**MediaPipe Meet**](https://drive.google.com/file/d/1lnP1bRi9CSqQQXUHa13159vLELYDgDu0/preview)\n * - [**MediaPipe Selfie**](https://drive.google.com/file/d/1dCfozqknMa068vVsO2j_1FgZkW_e3VWv/preview)\n */\n\nimport { log } from '../util/util';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { loadModel } from '../tfjs/load';\nimport * as image from '../image/image';\nimport { constants } from '../tfjs/constants';\nimport type { GraphModel, Tensor } from '../tfjs/types';\nimport type { Config } from '../config';\nimport { env } from '../util/env';\nimport type { Input, AnyCanvas } from '../exports';\n\nlet model: GraphModel;\nlet busy = false;\n\nexport async function load(config: Config): Promise<GraphModel> {\n  if (!model || env.initial) model = await loadModel(config.segmentation.modelPath);\n  else if (config.debug) log('cached model:', model['modelUrl']);\n  return model;\n}\n\nexport async function process(input: Input, background: Input | undefined, config: Config)\n: Promise<{ data: number[] | Tensor, canvas: AnyCanvas | null, alpha: AnyCanvas | null }> {\n  if (busy) return { data: [], canvas: null, alpha: null };\n  busy = true;\n  if (!model) await load(config);\n  const inputImage = await image.process(input, config);\n  const width = inputImage.tensor?.shape[2] || 0;\n  const height = inputImage.tensor?.shape[1] || 0;\n  if (!inputImage.tensor) return { data: [], canvas: null, alpha: null };\n  const t: Record<string, Tensor> = {};\n\n  t.resize = tf.image.resizeBilinear(inputImage.tensor, [model.inputs[0].shape ? model.inputs[0].shape[1] : 0, model.inputs[0].shape ? model.inputs[0].shape[2] : 0], false);\n  tf.dispose(inputImage.tensor);\n  t.norm = tf.div(t.resize, constants.tf255);\n  t.res = model.execute(t.norm) as Tensor;\n\n  t.squeeze = tf.squeeze(t.res, 0); // meet.shape:[1,256,256,1], selfie.shape:[1,144,256,2]\n  if (t.squeeze.shape[2] === 2) {\n    t.softmax = tf.softmax(t.squeeze); // model meet has two channels for fg and bg\n    [t.bg, t.fg] = tf.unstack(t.softmax, 2);\n    t.expand = tf.expandDims(t.fg, 2);\n    t.pad = tf.expandDims(t.expand, 0);\n    t.crop = tf.image.cropAndResize(t.pad, [[0, 0, 0.5, 0.5]], [0], [width, height]);\n    // running sofmax before unstack creates 2x2 matrix so we only take upper-left quadrant\n    // otherwise run softmax after unstack and use standard resize\n    // resizeOutput = tf.image.resizeBilinear(expand, [input.tensor?.shape[1], input.tensor?.shape[2]]);\n    t.data = tf.squeeze(t.crop, 0);\n  } else {\n    t.data = tf.image.resizeBilinear(t.squeeze, [height, width]); // model selfie has a single channel that we can use directly\n  }\n  const data = Array.from(await t.data.data());\n\n  if (env.node && !env.Canvas && (typeof ImageData === 'undefined')) {\n    if (config.debug) log('canvas support missing');\n    Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n    return { data, canvas: null, alpha: null }; // running in nodejs so return alpha array as-is\n  }\n\n  const alphaCanvas = image.canvas(width, height);\n  if (tf.browser) await tf.browser.toPixels(t.data, alphaCanvas);\n  const alphaCtx = alphaCanvas.getContext('2d') as CanvasRenderingContext2D;\n  if (config.segmentation.blur && config.segmentation.blur > 0) alphaCtx.filter = `blur(${config.segmentation.blur}px)`; // use css filter for bluring, can be done with gaussian blur manually instead\n  const alphaData = alphaCtx.getImageData(0, 0, width, height);\n\n  const compositeCanvas = image.canvas(width, height);\n  const compositeCtx = compositeCanvas.getContext('2d') as CanvasRenderingContext2D;\n  if (inputImage.canvas) compositeCtx.drawImage(inputImage.canvas, 0, 0);\n  compositeCtx.globalCompositeOperation = 'darken'; // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation // best options are: darken, color-burn, multiply\n  if (config.segmentation.blur && config.segmentation.blur > 0) compositeCtx.filter = `blur(${config.segmentation.blur}px)`; // use css filter for bluring, can be done with gaussian blur manually instead\n  compositeCtx.drawImage(alphaCanvas, 0, 0);\n  compositeCtx.globalCompositeOperation = 'source-over'; // reset composite operation\n  compositeCtx.filter = 'none'; // reset css filter\n  const compositeData = compositeCtx.getImageData(0, 0, width, height);\n  for (let i = 0; i < width * height; i++) compositeData.data[4 * i + 3] = alphaData.data[4 * i + 0]; // copy original alpha value to new composite canvas\n  compositeCtx.putImageData(compositeData, 0, 0);\n\n  let mergedCanvas: AnyCanvas | null = null;\n  if (background && compositeCanvas) { // draw background with segmentation as overlay if background is present\n    mergedCanvas = image.canvas(width, height);\n    const bgImage = await image.process(background, config);\n    tf.dispose(bgImage.tensor);\n    const ctxMerge = mergedCanvas.getContext('2d') as CanvasRenderingContext2D;\n    ctxMerge.drawImage(bgImage.canvas as HTMLCanvasElement, 0, 0, mergedCanvas.width, mergedCanvas.height);\n    ctxMerge.drawImage(compositeCanvas, 0, 0);\n  }\n\n  Object.keys(t).forEach((tensor) => tf.dispose(t[tensor]));\n  busy = false;\n  // return { data, canvas: mergedCanvas || compositeCanvas, alpha: alphaCanvas };\n  return { data, canvas: compositeCanvas, alpha: alphaCanvas };\n}\n", "import { log, join } from '../util/util';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport type { GraphModel } from './types';\nimport type { Config } from '../config';\nimport * as modelsDefs from '../../models/models.json';\nimport { validateModel } from '../models';\n\nconst options = {\n  cacheModels: true,\n  cacheSupported: true,\n  verbose: true,\n  debug: false,\n  modelBasePath: '',\n};\n\nexport interface ModelInfo {\n  name: string,\n  inCache: boolean,\n  sizeDesired: number,\n  sizeFromManifest: number,\n  sizeLoadedWeights: number,\n}\n\nexport const modelStats: Record<string, ModelInfo> = {};\n\nasync function httpHandler(url: string, init?: RequestInit): Promise<Response | null> {\n  if (options.debug) log('load model fetch:', url, init);\n  return fetch(url, init);\n}\n\nexport function setModelLoadOptions(config: Config) {\n  options.cacheModels = config.cacheModels;\n  options.verbose = config.debug;\n  options.modelBasePath = config.modelBasePath;\n}\n\nexport async function loadModel(modelPath: string | undefined): Promise<GraphModel> {\n  let modelUrl = join(options.modelBasePath, modelPath || '');\n  if (!modelUrl.toLowerCase().endsWith('.json')) modelUrl += '.json';\n  const modelPathSegments = modelUrl.includes('/') ? modelUrl.split('/') : modelUrl.split('\\\\');\n  const shortModelName = modelPathSegments[modelPathSegments.length - 1].replace('.json', '');\n  const cachedModelName = 'indexeddb://' + shortModelName; // generate short model name for cache\n  modelStats[shortModelName] = {\n    name: shortModelName,\n    sizeFromManifest: 0,\n    sizeLoadedWeights: 0,\n    sizeDesired: modelsDefs[shortModelName],\n    inCache: false,\n  };\n  options.cacheSupported = (typeof indexedDB !== 'undefined'); // check if localStorage and indexedb are available\n  let cachedModels = {};\n  try {\n    cachedModels = (options.cacheSupported && options.cacheModels) ? await tf.io.listModels() : {}; // list all models already in cache // this fails for webview although localStorage is defined\n  } catch {\n    options.cacheSupported = false;\n  }\n  modelStats[shortModelName].inCache = (options.cacheSupported && options.cacheModels) && Object.keys(cachedModels).includes(cachedModelName); // is model found in cache\n  const tfLoadOptions = typeof fetch === 'undefined' ? {} : { fetchFunc: (url: string, init?: RequestInit) => httpHandler(url, init) };\n  const model: GraphModel = new tf.GraphModel(modelStats[shortModelName].inCache ? cachedModelName : modelUrl, tfLoadOptions) as unknown as GraphModel; // create model prototype and decide if load from cache or from original modelurl\n  let loaded = false;\n  try {\n    // @ts-ignore private function\n    model.findIOHandler(); // decide how to actually load a model\n    if (options.debug) log('model load handler:', model['handler']);\n    // @ts-ignore private property\n    const artifacts = await model.handler.load(); // load manifest\n    modelStats[shortModelName].sizeFromManifest = artifacts?.weightData?.byteLength || 0;\n    model.loadSync(artifacts); // load weights\n    // @ts-ignore private property\n    modelStats[shortModelName].sizeLoadedWeights = model.artifacts?.weightData?.byteLength || 0;\n    if (options.verbose) log('load:', { model: shortModelName, url: model['modelUrl'], bytes: modelStats[shortModelName].sizeLoadedWeights });\n    loaded = true;\n  } catch (err) {\n    log('error loading model:', modelUrl, err);\n  }\n  if (loaded && options.cacheModels && options.cacheSupported && !modelStats[shortModelName].inCache) { // save model to cache\n    try {\n      const saveResult = await model.save(cachedModelName);\n      if (options.debug) log('model saved:', cachedModelName, saveResult);\n    } catch (err) {\n      log('error saving model:', modelUrl, err);\n    }\n  }\n  validateModel(null, model, `${modelPath || ''}`);\n  return model;\n}\n", "/**\n * Module that implements helper draw functions, exposed as human.draw\n */\n\nimport { mergeDeep, now } from '../util/util';\nimport { env } from '../util/env';\nimport { getCanvasContext, rect } from './primitives';\nimport { options } from './options';\nimport { face } from './face';\nimport { body } from './body';\nimport { hand } from './hand';\nimport { object } from './object';\nimport { gesture } from './gesture';\nimport type { Result, PersonResult } from '../result';\nimport type { AnyCanvas, DrawOptions } from '../exports';\n\nlet drawTime = 0;\n\nexport { options } from './options';\nexport { face } from './face';\nexport { body } from './body';\nexport { hand } from './hand';\nexport { object } from './object';\nexport { gesture } from './gesture';\n\n/** draw combined person results instead of individual detection result objects */\nexport function person(inCanvas: AnyCanvas, result: PersonResult[], drawOptions?: Partial<DrawOptions>) {\n  const localOptions: DrawOptions = mergeDeep(options, drawOptions);\n  if (!result || !inCanvas) return;\n  const ctx = getCanvasContext(inCanvas);\n  if (!ctx) return;\n  ctx.lineJoin = 'round';\n  ctx.font = localOptions.font;\n\n  for (let i = 0; i < result.length; i++) {\n    if (localOptions.drawBoxes) {\n      ctx.strokeStyle = localOptions.color;\n      ctx.fillStyle = localOptions.color;\n      rect(ctx, result[i].box[0], result[i].box[1], result[i].box[2], result[i].box[3], localOptions);\n      if (localOptions.drawLabels) {\n        const label = `person #${i}`;\n        if (localOptions.shadowColor && localOptions.shadowColor !== '') {\n          ctx.fillStyle = localOptions.shadowColor;\n          ctx.fillText(label, result[i].box[0] + 3, 1 + result[i].box[1] + localOptions.lineHeight, result[i].box[2]);\n        }\n        ctx.fillStyle = localOptions.labelColor;\n        ctx.fillText(label, result[i].box[0] + 2, 0 + result[i].box[1] + localOptions.lineHeight, result[i].box[2]);\n      }\n      ctx.stroke();\n    }\n  }\n}\n\n/** draw processed canvas */\nexport function canvas(input: AnyCanvas | HTMLImageElement | HTMLVideoElement, output: AnyCanvas) {\n  if (!input || !output) return;\n  const ctx = getCanvasContext(output);\n  if (!ctx) return;\n  ctx.drawImage(input, 0, 0);\n}\n\n/** meta-function that performs draw for: canvas, face, body, hand */\nexport async function all(inCanvas: AnyCanvas, result: Result, drawOptions?: Partial<DrawOptions>) {\n  if (!result?.performance || !inCanvas) return null;\n  const timeStamp = now();\n  const localOptions = mergeDeep(options, drawOptions);\n  const promise = Promise.all([\n    face(inCanvas, result.face, localOptions),\n    body(inCanvas, result.body, localOptions),\n    hand(inCanvas, result.hand, localOptions),\n    object(inCanvas, result.object, localOptions),\n    gesture(inCanvas, result.gesture, localOptions), // gestures do not have buffering\n    // person(inCanvas, result.persons, localOptions); // already included above\n  ]);\n  drawTime = env.perfadd ? drawTime + Math.round(now() - timeStamp) : Math.round(now() - timeStamp);\n  result.performance.draw = drawTime;\n  return promise;\n}\n", "import { log } from '../util/util';\nimport type { AnyCanvas } from '../exports';\nimport type { Point } from '../result';\nimport type { DrawOptions } from './options';\n\nexport const getCanvasContext = (input: AnyCanvas) => {\n  if (!input) log('draw error: invalid canvas');\n  else if (!input.getContext) log('draw error: canvas context not defined');\n  else {\n    const ctx = input.getContext('2d');\n    if (!ctx) log('draw error: cannot get canvas context');\n    else return ctx;\n  }\n  return null;\n};\n\nexport const rad2deg = (theta: number) => Math.round((theta * 180) / Math.PI);\n\nexport const colorDepth = (z: number | undefined, opt: DrawOptions): string => { // performance optimization needed\n  if (!opt.useDepth || typeof z === 'undefined') return opt.color;\n  const rgb = Uint8ClampedArray.from([127 + (2 * z), 127 - (2 * z), 255]);\n  return `rgba(${rgb[0]}, ${rgb[1]}, ${rgb[2]}, ${opt.alpha})`;\n};\n\nexport function point(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, x: number, y: number, z: number | undefined, localOptions: DrawOptions) {\n  ctx.fillStyle = colorDepth(z, localOptions);\n  ctx.beginPath();\n  ctx.arc(x, y, localOptions.pointSize, 0, 2 * Math.PI);\n  ctx.fill();\n}\n\nexport function rect(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, x: number, y: number, width: number, height: number, localOptions: DrawOptions) {\n  ctx.beginPath();\n  ctx.lineWidth = localOptions.lineWidth;\n  if (localOptions.useCurves) {\n    const cx = (x + x + width) / 2;\n    const cy = (y + y + height) / 2;\n    ctx.ellipse(cx, cy, width / 2, height / 2, 0, 0, 2 * Math.PI);\n  } else {\n    ctx.moveTo(x + localOptions.roundRect, y);\n    ctx.lineTo(x + width - localOptions.roundRect, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + localOptions.roundRect);\n    ctx.lineTo(x + width, y + height - localOptions.roundRect);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - localOptions.roundRect, y + height);\n    ctx.lineTo(x + localOptions.roundRect, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - localOptions.roundRect);\n    ctx.lineTo(x, y + localOptions.roundRect);\n    ctx.quadraticCurveTo(x, y, x + localOptions.roundRect, y);\n    ctx.closePath();\n  }\n  ctx.stroke();\n}\n\nexport function lines(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, points: Point[], localOptions: DrawOptions) {\n  if (points.length < 2) return;\n  ctx.beginPath();\n  ctx.moveTo(points[0][0], points[0][1]);\n  for (const pt of points) {\n    ctx.strokeStyle = colorDepth(pt[2] || 0, localOptions);\n    ctx.lineTo(Math.trunc(pt[0]), Math.trunc(pt[1]));\n  }\n  ctx.stroke();\n  if (localOptions.fillPolygons) {\n    ctx.closePath();\n    ctx.fill();\n  }\n}\n\nexport function curves(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, points: Point[], localOptions: DrawOptions) {\n  if (points.length < 2) return;\n  ctx.lineWidth = localOptions.lineWidth;\n  if (!localOptions.useCurves || points.length <= 2) {\n    lines(ctx, points, localOptions);\n    return;\n  }\n  ctx.moveTo(points[0][0], points[0][1]);\n  for (let i = 0; i < points.length - 2; i++) {\n    const xc = (points[i][0] + points[i + 1][0]) / 2;\n    const yc = (points[i][1] + points[i + 1][1]) / 2;\n    ctx.quadraticCurveTo(points[i][0], points[i][1], xc, yc);\n  }\n  ctx.quadraticCurveTo(points[points.length - 2][0], points[points.length - 2][1], points[points.length - 1][0], points[points.length - 1][1]);\n  ctx.stroke();\n  if (localOptions.fillPolygons) {\n    ctx.closePath();\n    ctx.fill();\n  }\n}\n\nexport function arrow(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, from: Point, to: Point, radius = 5) {\n  let angle;\n  let x;\n  let y;\n  ctx.beginPath();\n  ctx.moveTo(from[0], from[1]);\n  ctx.lineTo(to[0], to[1]);\n  angle = Math.atan2(to[1] - from[1], to[0] - from[0]);\n  x = radius * Math.cos(angle) + to[0];\n  y = radius * Math.sin(angle) + to[1];\n  ctx.moveTo(x, y);\n  angle += (1.0 / 3.0) * (2 * Math.PI);\n  x = radius * Math.cos(angle) + to[0];\n  y = radius * Math.sin(angle) + to[1];\n  ctx.lineTo(x, y);\n  angle += (1.0 / 3.0) * (2 * Math.PI);\n  x = radius * Math.cos(angle) + to[0];\n  y = radius * Math.sin(angle) + to[1];\n  ctx.lineTo(x, y);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.fill();\n}\n", "/** Draw Options\n * - Accessed via `human.draw.options` or provided per each draw method as the drawOptions optional parameter\n */\nexport interface DrawOptions {\n  /** draw line color */\n  color: string,\n  /** alpha value used for lines */\n  alpha: number,\n  /** label color */\n  labelColor: string,\n  /** label shadow color */\n  shadowColor: string,\n  /** label font */\n  font: string,\n  /** line spacing between labels */\n  lineHeight: number,\n  /** line width for drawn lines */\n  lineWidth: number,\n  /** size of drawn points */\n  pointSize: number,\n  /** draw rounded boxes by n pixels */\n  roundRect: number,\n  /** should points be drawn? */\n  drawPoints: boolean,\n  /** should labels be drawn? */\n  drawLabels: boolean,\n  /** should face attention keypoints be highlighted */\n  drawAttention: boolean;\n  /** should detected gestures be drawn? */\n  drawGestures: boolean,\n  /** should draw boxes around detection results? */\n  drawBoxes: boolean,\n  /** should draw polygons from detection points? */\n  drawPolygons: boolean,\n  /** should draw gaze arrows? */\n  drawGaze: boolean,\n  /** should fill polygons? */\n  fillPolygons: boolean,\n  /** use z-coordinate when available */\n  useDepth: boolean,\n  /** should lines be curved? */\n  useCurves: boolean,\n}\n\n/** currently set draw options {@link DrawOptions} */\nexport const options: DrawOptions = {\n  color: 'rgba(173, 216, 230, 0.6)' as string, // 'lightblue' with light alpha channel\n  labelColor: 'rgba(173, 216, 230, 1)' as string, // 'lightblue' with dark alpha channel\n  shadowColor: 'black' as string,\n  alpha: 0.5 as number,\n  font: 'small-caps 16px \"Segoe UI\"' as string,\n  lineHeight: 18 as number,\n  lineWidth: 4 as number,\n  pointSize: 2 as number,\n  roundRect: 8 as number,\n  drawPoints: false as boolean,\n  drawLabels: true as boolean,\n  drawBoxes: true as boolean,\n  drawAttention: true as boolean,\n  drawGestures: true as boolean,\n  drawPolygons: true as boolean,\n  drawGaze: true as boolean,\n  fillPolygons: false as boolean,\n  useDepth: true as boolean,\n  useCurves: false as boolean,\n};\n", "import { TRI468 as triangulation } from '../face/facemeshcoords';\nimport { mergeDeep } from '../util/util';\nimport { getCanvasContext, rad2deg, rect, point, lines, arrow } from './primitives';\nimport { options } from './options';\nimport * as facemeshConstants from '../face/constants';\nimport type { FaceResult } from '../result';\nimport type { AnyCanvas, DrawOptions } from '../exports';\n\nlet opt: DrawOptions;\n\nfunction drawLabels(f: FaceResult, ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n  if (opt.drawLabels) {\n    // silly hack since fillText does not suport new line\n    const labels:string[] = [];\n    labels.push(`face: ${Math.trunc(100 * f.score)}%`);\n    if (f.genderScore) labels.push(`${f.gender || ''} ${Math.trunc(100 * f.genderScore)}%`);\n    if (f.age) labels.push(`age: ${f.age || ''}`);\n    if (f.iris) labels.push(`distance: ${f.iris}`);\n    if (f.real) labels.push(`real: ${Math.trunc(100 * f.real)}%`);\n    if (f.live) labels.push(`live: ${Math.trunc(100 * f.live)}%`);\n    if (f.emotion && f.emotion.length > 0) {\n      const emotion = f.emotion.map((a) => `${Math.trunc(100 * a.score)}% ${a.emotion}`);\n      if (emotion.length > 3) emotion.length = 3;\n      labels.push(emotion.join(' '));\n    }\n    if (f.rotation?.angle && f.rotation?.gaze) {\n      if (f.rotation.angle.roll) labels.push(`roll: ${rad2deg(f.rotation.angle.roll)}\u00B0 yaw:${rad2deg(f.rotation.angle.yaw)}\u00B0 pitch:${rad2deg(f.rotation.angle.pitch)}\u00B0`);\n      if (f.rotation.gaze.bearing) labels.push(`gaze: ${rad2deg(f.rotation.gaze.bearing)}\u00B0`);\n    }\n    if (labels.length === 0) labels.push('face');\n    ctx.fillStyle = opt.color;\n    for (let i = labels.length - 1; i >= 0; i--) {\n      const x = Math.max(f.box[0], 0);\n      const y = i * opt.lineHeight + f.box[1];\n      if (opt.shadowColor && opt.shadowColor !== '') {\n        ctx.fillStyle = opt.shadowColor;\n        ctx.fillText(labels[i], x + 5, y + 16);\n      }\n      ctx.fillStyle = opt.labelColor;\n      ctx.fillText(labels[i], x + 4, y + 15);\n    }\n  }\n}\n\nfunction drawIrisElipse(f: FaceResult, ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n  // iris: array[center, left, top, right, bottom]\n  if (f.annotations?.leftEyeIris && f.annotations?.leftEyeIris[0]) {\n    ctx.strokeStyle = opt.useDepth ? 'rgba(255, 200, 255, 0.3)' : opt.color;\n    ctx.beginPath();\n    const sizeX = Math.abs(f.annotations.leftEyeIris[3][0] - f.annotations.leftEyeIris[1][0]) / 2;\n    const sizeY = Math.abs(f.annotations.leftEyeIris[4][1] - f.annotations.leftEyeIris[2][1]) / 2;\n    ctx.ellipse(f.annotations.leftEyeIris[0][0], f.annotations.leftEyeIris[0][1], sizeX, sizeY, 0, 0, 2 * Math.PI);\n    ctx.stroke();\n    if (opt.fillPolygons) {\n      ctx.fillStyle = opt.useDepth ? 'rgba(255, 255, 200, 0.3)' : opt.color;\n      ctx.fill();\n    }\n  }\n  if (f.annotations?.rightEyeIris && f.annotations?.rightEyeIris[0]) {\n    ctx.strokeStyle = opt.useDepth ? 'rgba(255, 200, 255, 0.3)' : opt.color;\n    ctx.beginPath();\n    const sizeX = Math.abs(f.annotations.rightEyeIris[3][0] - f.annotations.rightEyeIris[1][0]) / 2;\n    const sizeY = Math.abs(f.annotations.rightEyeIris[4][1] - f.annotations.rightEyeIris[2][1]) / 2;\n    ctx.ellipse(f.annotations.rightEyeIris[0][0], f.annotations.rightEyeIris[0][1], sizeX, sizeY, 0, 0, 2 * Math.PI);\n    ctx.stroke();\n    if (opt.fillPolygons) {\n      ctx.fillStyle = opt.useDepth ? 'rgba(255, 255, 200, 0.3)' : opt.color;\n      ctx.fill();\n    }\n  }\n}\n\nfunction drawGazeSpheres(f: FaceResult, ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n  if (opt.drawGaze && f.rotation?.angle && typeof Path2D !== 'undefined') {\n    ctx.strokeStyle = 'pink';\n    const valX = (f.box[0] + f.box[2] / 2) - (f.box[3] * rad2deg(f.rotation.angle.yaw) / 90);\n    const valY = (f.box[1] + f.box[3] / 2) + (f.box[2] * rad2deg(f.rotation.angle.pitch) / 90);\n    const pathV = new Path2D(`\n      M ${f.box[0] + f.box[2] / 2} ${f.box[1]}\n      C\n        ${valX} ${f.box[1]},\n        ${valX} ${f.box[1] + f.box[3]},\n        ${f.box[0] + f.box[2] / 2} ${f.box[1] + f.box[3]}\n    `);\n    const pathH = new Path2D(`\n      M ${f.box[0]} ${f.box[1] + f.box[3] / 2}\n      C \n        ${f.box[0]} ${valY},\n        ${f.box[0] + f.box[2]} ${valY},\n        ${f.box[0] + f.box[2]} ${f.box[1] + f.box[3] / 2}\n    `);\n    ctx.stroke(pathH);\n    ctx.stroke(pathV);\n  }\n}\n\nfunction drawGazeArrows(f: FaceResult, ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n  if (opt.drawGaze && f.rotation?.gaze.strength && f.rotation.gaze.bearing && f.annotations.leftEyeIris && f.annotations.rightEyeIris && f.annotations.leftEyeIris[0] && f.annotations.rightEyeIris[0]) {\n    ctx.strokeStyle = 'pink';\n    ctx.fillStyle = 'pink';\n    const leftGaze = [\n      f.annotations.leftEyeIris[0][0] + (Math.sin(f.rotation.gaze.bearing) * f.rotation.gaze.strength * f.box[3]),\n      f.annotations.leftEyeIris[0][1] + (Math.cos(f.rotation.gaze.bearing) * f.rotation.gaze.strength * f.box[2]),\n    ];\n    arrow(ctx, [f.annotations.leftEyeIris[0][0], f.annotations.leftEyeIris[0][1]], [leftGaze[0], leftGaze[1]], 4);\n    const rightGaze = [\n      f.annotations.rightEyeIris[0][0] + (Math.sin(f.rotation.gaze.bearing) * f.rotation.gaze.strength * f.box[3]),\n      f.annotations.rightEyeIris[0][1] + (Math.cos(f.rotation.gaze.bearing) * f.rotation.gaze.strength * f.box[2]),\n    ];\n    arrow(ctx, [f.annotations.rightEyeIris[0][0], f.annotations.rightEyeIris[0][1]], [rightGaze[0], rightGaze[1]], 4);\n  }\n}\n\nfunction drawFacePolygons(f: FaceResult, ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n  if (opt.drawPolygons && f.mesh.length >= 468) {\n    ctx.lineWidth = 1;\n    for (let i = 0; i < triangulation.length / 3; i++) {\n      const points = [triangulation[i * 3 + 0], triangulation[i * 3 + 1], triangulation[i * 3 + 2]].map((index) => f.mesh[index]);\n      lines(ctx, points, opt);\n    }\n    drawIrisElipse(f, ctx);\n  }\n  /*\n  if (opt.drawPolygons && f.contours.length > 1) {\n    ctx.lineWidth = 5;\n    lines(ctx, f.contours, opt);\n  }\n  ctx.lineWidth = 1;\n  */\n}\n\nfunction drawFacePoints(f: FaceResult, ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n  if (opt.drawPoints && f.mesh.length >= 468) {\n    for (let i = 0; i < f.mesh.length; i++) {\n      point(ctx, f.mesh[i][0], f.mesh[i][1], f.mesh[i][2], opt);\n      if (opt.drawAttention) {\n        if (facemeshConstants.LANDMARKS_REFINEMENT_LIPS_CONFIG.includes(i)) point(ctx, f.mesh[i][0], f.mesh[i][1], (f.mesh[i][2] as number) + 127, opt);\n        if (facemeshConstants.LANDMARKS_REFINEMENT_LEFT_EYE_CONFIG.includes(i)) point(ctx, f.mesh[i][0], f.mesh[i][1], (f.mesh[i][2] as number) - 127, opt);\n        if (facemeshConstants.LANDMARKS_REFINEMENT_RIGHT_EYE_CONFIG.includes(i)) point(ctx, f.mesh[i][0], f.mesh[i][1], (f.mesh[i][2] as number) - 127, opt);\n      }\n    }\n  }\n}\n\nfunction drawFaceBoxes(f: FaceResult, ctx) {\n  if (opt.drawBoxes) {\n    rect(ctx, f.box[0], f.box[1], f.box[2], f.box[3], opt);\n  }\n}\n\n/** draw detected faces */\nexport function face(inCanvas: AnyCanvas, result: FaceResult[], drawOptions?: Partial<DrawOptions>) {\n  opt = mergeDeep(options, drawOptions);\n  if (!result || !inCanvas) return;\n  const ctx = getCanvasContext(inCanvas);\n  if (!ctx) return;\n  ctx.font = opt.font;\n  ctx.strokeStyle = opt.color;\n  ctx.fillStyle = opt.color;\n  for (const f of result) {\n    drawFaceBoxes(f, ctx);\n    drawLabels(f, ctx);\n    if (f.mesh && f.mesh.length > 0) {\n      drawFacePoints(f, ctx);\n      drawFacePolygons(f, ctx);\n      drawGazeSpheres(f, ctx);\n      drawGazeArrows(f, ctx);\n    }\n  }\n}\n", "import { mergeDeep } from '../util/util';\nimport { getCanvasContext, rect, point, curves, colorDepth } from './primitives';\nimport { options } from './options';\nimport type { BodyResult } from '../result';\nimport type { AnyCanvas, DrawOptions } from '../exports';\n\n/** draw detected bodies */\nexport function body(inCanvas: AnyCanvas, result: BodyResult[], drawOptions?: Partial<DrawOptions>) {\n  const localOptions: DrawOptions = mergeDeep(options, drawOptions);\n  if (!result || !inCanvas) return;\n  const ctx = getCanvasContext(inCanvas);\n  if (!ctx) return;\n  ctx.lineJoin = 'round';\n  for (let i = 0; i < result.length; i++) {\n    ctx.strokeStyle = localOptions.color;\n    ctx.fillStyle = localOptions.color;\n    ctx.lineWidth = localOptions.lineWidth;\n    ctx.font = localOptions.font;\n    if (localOptions.drawBoxes && result[i].box && result[i].box.length === 4) {\n      rect(ctx, result[i].box[0], result[i].box[1], result[i].box[2], result[i].box[3], localOptions);\n      if (localOptions.drawLabels) {\n        if (localOptions.shadowColor && localOptions.shadowColor !== '') {\n          ctx.fillStyle = localOptions.shadowColor;\n          ctx.fillText(`body ${100 * result[i].score}%`, result[i].box[0] + 3, 1 + result[i].box[1] + localOptions.lineHeight, result[i].box[2]);\n        }\n        ctx.fillStyle = localOptions.labelColor;\n        ctx.fillText(`body ${100 * result[i].score}%`, result[i].box[0] + 2, 0 + result[i].box[1] + localOptions.lineHeight, result[i].box[2]);\n      }\n    }\n    if (localOptions.drawPoints && result[i].keypoints) {\n      for (let pt = 0; pt < result[i].keypoints.length; pt++) {\n        if (!result[i].keypoints[pt].score || (result[i].keypoints[pt].score === 0)) continue;\n        ctx.fillStyle = colorDepth(result[i].keypoints[pt].position[2], localOptions);\n        point(ctx, result[i].keypoints[pt].position[0], result[i].keypoints[pt].position[1], 0, localOptions);\n      }\n    }\n    if (localOptions.drawLabels && result[i].keypoints) {\n      ctx.font = localOptions.font;\n      for (const pt of result[i].keypoints) {\n        if (!pt.score || (pt.score === 0)) continue;\n        ctx.fillStyle = colorDepth(pt.position[2], localOptions);\n        ctx.fillText(`${pt.part} ${Math.trunc(100 * pt.score)}%`, pt.position[0] + 4, pt.position[1] + 4);\n      }\n    }\n    if (localOptions.drawPolygons && result[i].keypoints && result[i].annotations) {\n      for (const part of Object.values(result[i].annotations)) {\n        for (const connected of part) curves(ctx, connected, localOptions);\n      }\n    }\n  }\n}\n", "import { mergeDeep } from '../util/util';\nimport { getCanvasContext, rect, point, colorDepth } from './primitives';\nimport { options } from './options';\nimport type { HandResult } from '../result';\nimport type { AnyCanvas, DrawOptions, Point } from '../exports';\n\n/** draw detected hands */\nexport function hand(inCanvas: AnyCanvas, result: HandResult[], drawOptions?: Partial<DrawOptions>) {\n  const localOptions: DrawOptions = mergeDeep(options, drawOptions);\n  if (!result || !inCanvas) return;\n  const ctx = getCanvasContext(inCanvas);\n  if (!ctx) return;\n  ctx.lineJoin = 'round';\n  ctx.font = localOptions.font;\n  for (const h of result) {\n    if (localOptions.drawBoxes) {\n      ctx.strokeStyle = localOptions.color;\n      ctx.fillStyle = localOptions.color;\n      rect(ctx, h.box[0], h.box[1], h.box[2], h.box[3], localOptions);\n      if (localOptions.drawLabels) {\n        if (localOptions.shadowColor && localOptions.shadowColor !== '') {\n          ctx.fillStyle = localOptions.shadowColor;\n          ctx.fillText(`hand:${Math.trunc(100 * h.score)}%`, h.box[0] + 3, 1 + h.box[1] + localOptions.lineHeight, h.box[2]); // can use h.label\n        }\n        ctx.fillStyle = localOptions.labelColor;\n        ctx.fillText(`hand:${Math.trunc(100 * h.score)}%`, h.box[0] + 2, 0 + h.box[1] + localOptions.lineHeight, h.box[2]); // can use h.label\n      }\n      ctx.stroke();\n    }\n    if (localOptions.drawPoints) {\n      if (h.keypoints && h.keypoints.length > 0) {\n        for (const pt of h.keypoints) {\n          ctx.fillStyle = colorDepth(pt[2], localOptions);\n          point(ctx, pt[0], pt[1], 0, localOptions);\n        }\n      }\n    }\n    if (localOptions.drawLabels && h.annotations) {\n      const addHandLabel = (part: Point[], title: string) => {\n        if (!part || part.length === 0 || !part[0]) return;\n        const z = part[part.length - 1][2] || -256;\n        ctx.fillStyle = colorDepth(z, localOptions);\n        ctx.fillText(title, part[part.length - 1][0] + 4, part[part.length - 1][1] + 4);\n      };\n      ctx.font = localOptions.font;\n      addHandLabel(h.annotations.index, 'index');\n      addHandLabel(h.annotations.middle, 'middle');\n      addHandLabel(h.annotations.ring, 'ring');\n      addHandLabel(h.annotations.pinky, 'pinky');\n      addHandLabel(h.annotations.thumb, 'thumb');\n      addHandLabel(h.annotations.palm, 'palm');\n    }\n    if (localOptions.drawPolygons && h.annotations) {\n      const addHandLine = (part: Point[]) => {\n        if (!part || part.length === 0 || !part[0]) return;\n        for (let i = 0; i < part.length; i++) {\n          ctx.beginPath();\n          const z = part[i][2] || 0;\n          ctx.strokeStyle = colorDepth(i * z, localOptions);\n          ctx.moveTo(part[i > 0 ? i - 1 : 0][0], part[i > 0 ? i - 1 : 0][1]);\n          ctx.lineTo(part[i][0], part[i][1]);\n          ctx.stroke();\n        }\n      };\n      ctx.lineWidth = localOptions.lineWidth;\n      addHandLine(h.annotations.index);\n      addHandLine(h.annotations.middle);\n      addHandLine(h.annotations.ring);\n      addHandLine(h.annotations.pinky);\n      addHandLine(h.annotations.thumb);\n      // addPart(h.annotations.palm);\n    }\n  }\n}\n", "import { mergeDeep } from '../util/util';\nimport { getCanvasContext, rect } from './primitives';\nimport { options } from './options';\nimport type { ObjectResult } from '../result';\nimport type { AnyCanvas, DrawOptions } from '../exports';\n\n/** draw detected objects */\nexport function object(inCanvas: AnyCanvas, result: ObjectResult[], drawOptions?: Partial<DrawOptions>) {\n  const localOptions: DrawOptions = mergeDeep(options, drawOptions);\n  if (!result || !inCanvas) return;\n  const ctx = getCanvasContext(inCanvas);\n  if (!ctx) return;\n  ctx.lineJoin = 'round';\n  ctx.font = localOptions.font;\n  for (const h of result) {\n    if (localOptions.drawBoxes) {\n      ctx.strokeStyle = localOptions.color;\n      ctx.fillStyle = localOptions.color;\n      rect(ctx, h.box[0], h.box[1], h.box[2], h.box[3], localOptions);\n      if (localOptions.drawLabels) {\n        const label = `${h.label} ${Math.round(100 * h.score)}%`;\n        if (localOptions.shadowColor && localOptions.shadowColor !== '') {\n          ctx.fillStyle = localOptions.shadowColor;\n          ctx.fillText(label, h.box[0] + 3, 1 + h.box[1] + localOptions.lineHeight, h.box[2]);\n        }\n        ctx.fillStyle = localOptions.labelColor;\n        ctx.fillText(label, h.box[0] + 2, 0 + h.box[1] + localOptions.lineHeight, h.box[2]);\n      }\n      ctx.stroke();\n    }\n  }\n}\n", "import { mergeDeep } from '../util/util';\nimport { getCanvasContext } from './primitives';\nimport { options } from './options';\nimport type { GestureResult } from '../result';\nimport type { AnyCanvas, DrawOptions } from '../exports';\n\n/** draw detected gestures */\nexport function gesture(inCanvas: AnyCanvas, result: GestureResult[], drawOptions?: Partial<DrawOptions>) {\n  const localOptions: DrawOptions = mergeDeep(options, drawOptions);\n  if (!result || !inCanvas) return;\n  if (localOptions.drawGestures) {\n    const ctx = getCanvasContext(inCanvas);\n    if (!ctx) return;\n    ctx.font = localOptions.font;\n    ctx.fillStyle = localOptions.color;\n    let i = 1;\n    for (let j = 0; j < result.length; j++) {\n      let where: unknown[] = []; // what&where is a record\n      let what: unknown[] = []; // what&where is a record\n      [where, what] = Object.entries(result[j]);\n      if ((what.length > 1) && ((what[1] as string).length > 0)) {\n        const who = where[1] as number > 0 ? `#${where[1]}` : '';\n        const label = `${where[0]} ${who}: ${what[1]}`;\n        if (localOptions.shadowColor && localOptions.shadowColor !== '') {\n          ctx.fillStyle = localOptions.shadowColor;\n          ctx.fillText(label, 8, 2 + (i * localOptions.lineHeight));\n        }\n        ctx.fillStyle = localOptions.labelColor;\n        ctx.fillText(label, 6, 0 + (i * localOptions.lineHeight));\n        i += 1;\n      }\n    }\n  }\n}\n", "import type { Tensor } from '../tfjs/types';\nimport type { FaceResult } from '../result';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport { meshAnnotations } from './facemeshcoords';\n\nconst expandFact = 0.1;\nconst alpha = 0.5;\n\n// point inclusion in polygon based on https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nfunction insidePoly(x: number, y: number, polygon: { x: number, y: number }[]): boolean {\n  let inside = false;\n  let j = polygon.length - 1;\n  for (let i = 0; i < polygon.length; j = i++) {\n    if (((polygon[i].y > y) !== (polygon[j].y > y)) && (x < (polygon[j].x - polygon[i].x) * (y - polygon[i].y) / (polygon[j].y - polygon[i].y) + polygon[i].x)) inside = !inside;\n  }\n  return inside;\n}\n\nexport async function mask(face: FaceResult): Promise<Tensor | undefined> {\n  if (!face.tensor) return face.tensor;\n  if (!face.mesh || face.mesh.length < 100) return face.tensor;\n  const width = face.tensor.shape[2] || 0;\n  const height = face.tensor.shape[1] || 0;\n  const buffer = await face.tensor.buffer();\n  let silhouette: { x: number, y: number }[] = [];\n  for (const pt of meshAnnotations.silhouette) silhouette.push({ x: (face.mesh[pt][0] - face.box[0]) / face.box[2], y: (face.mesh[pt][1] - face.box[1]) / face.box[3] }); // add all silhouette points scaled to local box\n  if (expandFact && expandFact > 0) silhouette = silhouette.map((pt) => ({ x: pt.x > 0.5 ? pt.x + expandFact : pt.x - expandFact, y: pt.y > 0.5 ? pt.y + expandFact : pt.y - expandFact })); // expand silhouette\n  for (let x = 0; x < width; x++) {\n    for (let y = 0; y < height; y++) {\n      const inside = insidePoly(x / width, y / width, silhouette);\n      if (!inside) {\n        buffer.set(alpha * buffer.get(0, y, x, 0), 0, y, x, 0);\n        buffer.set(alpha * buffer.get(0, y, x, 1), 0, y, x, 1);\n        buffer.set(alpha * buffer.get(0, y, x, 2), 0, y, x, 2);\n      }\n    }\n  }\n  const output = buffer.toTensor();\n  tf.dispose(buffer);\n  return output;\n}\n", "import type { Point, FaceResult } from '../result';\n\ntype Vector = [number, number, number];\n\nconst calculateGaze = (face: FaceResult): { bearing: number, strength: number } => {\n  const radians = (pt1: Point, pt2: Point) => Math.atan2(pt1[1] - pt2[1], pt1[0] - pt2[0]); // function to calculate angle between any two points\n  if (!face.annotations.rightEyeIris || !face.annotations.leftEyeIris) return { bearing: 0, strength: 0 };\n\n  const offsetIris = [0, -0.1]; // iris center may not align with average of eye extremes\n  const eyeRatio = 1; // factor to normalize changes x vs y\n\n  const left = (face.mesh[33][2] || 0) > (face.mesh[263][2] || 0); // pick left or right eye depending which one is closer bazed on outsize point z axis\n  const irisCenter = left ? face.mesh[473] : face.mesh[468];\n  const eyeCenter = left // eye center is average of extreme points on x axis for both x and y, ignoring y extreme points as eyelids naturally open/close more when gazing up/down so relative point is less precise\n    ? [(face.mesh[133][0] + face.mesh[33][0]) / 2, (face.mesh[133][1] + face.mesh[33][1]) / 2]\n    : [(face.mesh[263][0] + face.mesh[362][0]) / 2, (face.mesh[263][1] + face.mesh[362][1]) / 2];\n  const eyeSize = left // eye size is difference between extreme points for both x and y, used to normalize & squarify eye dimensions\n    ? [face.mesh[133][0] - face.mesh[33][0], face.mesh[23][1] - face.mesh[27][1]]\n    : [face.mesh[263][0] - face.mesh[362][0], face.mesh[253][1] - face.mesh[257][1]];\n  const eyeDiff: Point = [ // x distance between extreme point and center point normalized with eye size\n    (eyeCenter[0] - irisCenter[0]) / eyeSize[0] - offsetIris[0],\n    eyeRatio * (irisCenter[1] - eyeCenter[1]) / eyeSize[1] - offsetIris[1],\n  ];\n  let strength = Math.sqrt((eyeDiff[0] * eyeDiff[0]) + (eyeDiff[1] * eyeDiff[1])); // vector length is a diagonal between two differences\n  strength = Math.min(strength, face.boxRaw[2] / 2, face.boxRaw[3] / 2); // limit strength to half of box size to avoid clipping due to low precision\n  const bearing = (radians([0, 0], eyeDiff) + (Math.PI / 2)) % Math.PI; // using eyeDiff instead eyeCenter/irisCenter combo due to manual adjustments and rotate clockwise 90degrees\n  return { bearing, strength };\n};\n\nexport const calculateFaceAngle = (face: FaceResult, imageSize: [number, number]): {\n  angle: { pitch: number, yaw: number, roll: number },\n  matrix: [number, number, number, number, number, number, number, number, number],\n  gaze: { bearing: number, strength: number },\n} => {\n  // const degrees = (theta) => Math.abs(((theta * 180) / Math.PI) % 360);\n  const normalize = (v: Vector): Vector => { // normalize vector\n    const length = Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    v[0] /= length;\n    v[1] /= length;\n    v[2] /= length;\n    return v;\n  };\n  const subVectors = (a: Vector, b: Vector): Vector => { // vector subtraction (a - b)\n    const x = a[0] - b[0];\n    const y = a[1] - b[1];\n    const z = a[2] - b[2];\n    return [x, y, z];\n  };\n  const crossVectors = (a: Vector, b: Vector): Vector => { // vector cross product (a x b)\n    const x = a[1] * b[2] - a[2] * b[1];\n    const y = a[2] * b[0] - a[0] * b[2];\n    const z = a[0] * b[1] - a[1] * b[0];\n    return [x, y, z];\n  };\n  // 3x3 rotation matrix to Euler angles based on https://www.geometrictools.com/Documentation/EulerAngles.pdf\n  const rotationMatrixToEulerAngle = (r: number[]): { pitch: number, yaw: number, roll: number } => {\n    const [r00, _r01, _r02, r10, r11, r12, r20, r21, r22] = r; // eslint-disable-line @typescript-eslint/no-unused-vars\n    let thetaX: number;\n    let thetaY: number;\n    let thetaZ: number;\n    if (r10 < 1) { // YZX calculation\n      if (r10 > -1) {\n        thetaZ = Math.asin(r10);\n        thetaY = Math.atan2(-r20, r00);\n        thetaX = Math.atan2(-r12, r11);\n      } else {\n        thetaZ = -Math.PI / 2;\n        thetaY = -Math.atan2(r21, r22);\n        thetaX = 0;\n      }\n    } else {\n      thetaZ = Math.PI / 2;\n      thetaY = Math.atan2(r21, r22);\n      thetaX = 0;\n    }\n    if (Number.isNaN(thetaX)) thetaX = 0;\n    if (Number.isNaN(thetaY)) thetaY = 0;\n    if (Number.isNaN(thetaZ)) thetaZ = 0;\n    return { pitch: 2 * -thetaX, yaw: 2 * -thetaY, roll: 2 * -thetaZ };\n  };\n\n  /*\n  const meshToEulerAngle = (mesh) => { // simple Euler angle calculation based existing 3D mesh\n    const radians = (a1, a2, b1, b2) => Math.atan2(b2 - a2, b1 - a1);\n    return { // values are in radians in range of -pi/2 to pi/2 which is -90 to +90 degrees, value of 0 means center\n      pitch: radians(mesh[10][1], mesh[10][2], mesh[152][1], mesh[152][2]), // looking at y,z of top and bottom points of the face // pitch is face move up/down\n      yaw: radians(mesh[33][0], mesh[33][2], mesh[263][0], mesh[263][2]), // looking at x,z of outside corners of leftEye and rightEye // yaw is face turn left/right\n      roll: radians(mesh[33][0], mesh[33][1], mesh[263][0], mesh[263][1]), // looking at x,y of outside corners of leftEye and rightEye // roll is face lean left/right\n    };\n  };\n  */\n\n  // initialize gaze and mesh\n  const mesh = face.meshRaw;\n  if (!mesh || mesh.length < 300) return { angle: { pitch: 0, yaw: 0, roll: 0 }, matrix: [1, 0, 0, 0, 1, 0, 0, 0, 1], gaze: { bearing: 0, strength: 0 } };\n\n  const size = Math.max(face.boxRaw[2] * imageSize[0], face.boxRaw[3] * imageSize[1]) / 1.5;\n  // top, bottom, left, right\n  const pts: Point[] = [mesh[10], mesh[152], mesh[234], mesh[454]].map((pt) => [pt[0] * imageSize[0] / size, pt[1] * imageSize[1] / size, pt[2]] as Point); // make the xyz coordinates proportional, independent of the image/box size\n\n  const yAxis = normalize(subVectors(pts[1] as Vector, pts[0] as Vector));\n  let xAxis = normalize(subVectors(pts[3] as Vector, pts[2] as Vector));\n  const zAxis = normalize(crossVectors(xAxis, yAxis));\n  // adjust xAxis to make sure that all axes are perpendicular to each other\n  xAxis = crossVectors(yAxis, zAxis);\n\n  // Rotation Matrix from Axis Vectors - http://renderdan.blogspot.com/2006/05/rotation-matrix-from-axis-vectors.html\n  // 3x3 rotation matrix is flatten to array in row-major order. Note that the rotation represented by this matrix is inverted.\n  const matrix: [number, number, number, number, number, number, number, number, number] = [\n    xAxis[0], xAxis[1], xAxis[2],\n    yAxis[0], yAxis[1], yAxis[2],\n    zAxis[0], zAxis[1], zAxis[2],\n  ];\n  const angle = rotationMatrixToEulerAngle(matrix);\n  // const angle = meshToEulerAngle(mesh);\n\n  // we have iris keypoints so we can calculate gaze direction\n  const gaze = mesh.length === 478 ? calculateGaze(face) : { bearing: 0, strength: 0 };\n\n  return { angle, matrix, gaze };\n};\n", "/**\n * Face algorithm implementation\n * Uses FaceMesh, Emotion and FaceRes models to create a unified pipeline\n */\n\nimport { log, now } from '../util/util';\nimport { env } from '../util/env';\nimport * as tf from '../../dist/tfjs.esm.js';\nimport * as facemesh from './facemesh';\nimport * as emotion from '../gear/emotion';\nimport * as faceres from './faceres';\nimport * as mask from './mask';\nimport * as antispoof from './antispoof';\nimport * as liveness from './liveness';\nimport * as gear from '../gear/gear';\nimport * as ssrnetAge from '../gear/ssrnet-age';\nimport * as ssrnetGender from '../gear/ssrnet-gender';\nimport * as mobilefacenet from './mobilefacenet';\nimport * as insightface from './insightface';\nimport type { FaceResult, Emotion, Gender, Race } from '../result';\nimport type { Tensor } from '../tfjs/types';\nimport type { Human } from '../human';\nimport { calculateFaceAngle } from './angles';\n\ninterface DescRes { age: number, gender: Gender, genderScore: number, descriptor: number[], race?: { score: number, race: Race }[] }\n\nexport const detectFace = async (instance: Human /* instance of human */, input: Tensor): Promise<FaceResult[]> => {\n  // run facemesh, includes blazeface and iris\n  let timeStamp: number = now();\n  let ageRes: { age: number } | Promise<{ age: number }> | null;\n  let gearRes: gear.GearType | Promise<gear.GearType> | null;\n  let genderRes: { gender: string, genderScore: number } | Promise<{ gender: string, genderScore: number }> | null;\n  let emotionRes: { score: number, emotion: Emotion }[] | Promise<{ score: number, emotion: Emotion }[]>;\n  let mobilefacenetRes: number[] | Promise<number[]> | null;\n  let insightfaceRes: number[] | Promise<number[]> | null;\n  let antispoofRes: number | Promise<number> | null;\n  let livenessRes: number | Promise<number> | null;\n  let descRes: DescRes | Promise<DescRes> | null;\n\n  const faceRes: FaceResult[] = [];\n  instance.state = 'run:face';\n\n  const faces = await facemesh.predict(input, instance.config);\n  instance.performance.face = env.perfadd ? (instance.performance.face || 0) + Math.trunc(now() - timeStamp) : Math.trunc(now() - timeStamp);\n  if (!input.shape || input.shape.length !== 4) return [];\n  if (!faces) return [];\n  // for (const face of faces) {\n  for (let i = 0; i < faces.length; i++) {\n    instance.analyze('Get Face');\n\n    // is something went wrong, skip the face\n    // @ts-ignore possibly undefied\n    if (!faces[i].tensor || faces[i].tensor.isDisposedInternal) {\n      log('Face object is disposed:', faces[i].tensor);\n      continue;\n    }\n\n    // optional face mask\n    if (instance.config.face.detector?.mask) {\n      const masked = await mask.mask(faces[i]);\n      tf.dispose(faces[i].tensor);\n      if (masked) faces[i].tensor = masked;\n    }\n\n    // calculate face angles\n    const rotation = faces[i].mesh && (faces[i].mesh.length > 200) ? calculateFaceAngle(faces[i], [input.shape[2], input.shape[1]]) : null;\n\n    // run emotion, inherits face from blazeface\n    instance.analyze('Start Emotion:');\n    if (instance.config.async) {\n      emotionRes = instance.config.face.emotion?.enabled ? emotion.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : [];\n    } else {\n      instance.state = 'run:emotion';\n      timeStamp = now();\n      emotionRes = instance.config.face.emotion?.enabled ? await emotion.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : [];\n      instance.performance.emotion = env.perfadd ? (instance.performance.emotion || 0) + Math.trunc(now() - timeStamp) : Math.trunc(now() - timeStamp);\n    }\n    instance.analyze('End Emotion:');\n\n    // run antispoof, inherits face from blazeface\n    instance.analyze('Start AntiSpoof:');\n    if (instance.config.async) {\n      antispoofRes = instance.config.face.antispoof?.enabled ? antispoof.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : 0;\n    } else {\n      instance.state = 'run:antispoof';\n      timeStamp = now();\n      antispoofRes = instance.config.face.antispoof?.enabled ? await antispoof.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : 0;\n      instance.performance.antispoof = env.perfadd ? (instance.performance.antispoof || 0) + Math.trunc(now() - timeStamp) : Math.trunc(now() - timeStamp);\n    }\n    instance.analyze('End AntiSpoof:');\n\n    // run liveness, inherits face from blazeface\n    instance.analyze('Start Liveness:');\n    if (instance.config.async) {\n      livenessRes = instance.config.face.liveness?.enabled ? liveness.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : 0;\n    } else {\n      instance.state = 'run:liveness';\n      timeStamp = now();\n      livenessRes = instance.config.face.liveness?.enabled ? await liveness.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : 0;\n      instance.performance.liveness = env.perfadd ? (instance.performance.antispoof || 0) + Math.trunc(now() - timeStamp) : Math.trunc(now() - timeStamp);\n    }\n    instance.analyze('End Liveness:');\n\n    // run gear, inherits face from blazeface\n    instance.analyze('Start GEAR:');\n    if (instance.config.async) {\n      gearRes = instance.config.face.gear?.enabled ? gear.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : null;\n    } else {\n      instance.state = 'run:gear';\n      timeStamp = now();\n      gearRes = instance.config.face.gear?.enabled ? await gear.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : null;\n      instance.performance.gear = Math.trunc(now() - timeStamp);\n    }\n    instance.analyze('End GEAR:');\n\n    // run gear, inherits face from blazeface\n    instance.analyze('Start SSRNet:');\n    if (instance.config.async) {\n      ageRes = instance.config.face['ssrnet']?.enabled ? ssrnetAge.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : null;\n      genderRes = instance.config.face['ssrnet']?.enabled ? ssrnetGender.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : null;\n    } else {\n      instance.state = 'run:ssrnet';\n      timeStamp = now();\n      ageRes = instance.config.face['ssrnet']?.enabled ? await ssrnetAge.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : null;\n      genderRes = instance.config.face['ssrnet']?.enabled ? await ssrnetGender.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : null;\n      instance.performance.ssrnet = Math.trunc(now() - timeStamp);\n    }\n    instance.analyze('End SSRNet:');\n\n    // run mobilefacenet alternative, inherits face from blazeface\n    instance.analyze('Start MobileFaceNet:');\n    if (instance.config.async) {\n      mobilefacenetRes = instance.config.face['mobilefacenet']?.enabled ? mobilefacenet.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : null;\n    } else {\n      instance.state = 'run:mobilefacenet';\n      timeStamp = now();\n      mobilefacenetRes = instance.config.face['mobilefacenet']?.enabled ? await mobilefacenet.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : null;\n      instance.performance.mobilefacenet = Math.trunc(now() - timeStamp);\n    }\n    instance.analyze('End MobileFaceNet:');\n\n    // run insightface alternative, inherits face from blazeface\n    instance.analyze('Start InsightFace:');\n    if (instance.config.async) {\n      insightfaceRes = instance.config.face['insightface']?.enabled ? insightface.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : null;\n    } else {\n      instance.state = 'run:mobilefacenet';\n      timeStamp = now();\n      insightfaceRes = instance.config.face['insightface']?.enabled ? await insightface.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length) : null;\n      instance.performance.mobilefacenet = Math.trunc(now() - timeStamp);\n    }\n    instance.analyze('End InsightFace:');\n\n    // run faceres, inherits face from blazeface\n    instance.analyze('Start Description:');\n    if (instance.config.async) {\n      descRes = faceres.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length);\n    } else {\n      instance.state = 'run:description';\n      timeStamp = now();\n      descRes = await faceres.predict(faces[i].tensor || tf.tensor([]), instance.config, i, faces.length);\n      instance.performance.description = env.perfadd ? (instance.performance.description || 0) + Math.trunc(now() - timeStamp) : Math.trunc(now() - timeStamp);\n    }\n    instance.analyze('End Description:');\n\n    // if async wait for results\n    if (instance.config.async) {\n      [ageRes, genderRes, emotionRes, mobilefacenetRes, insightfaceRes, descRes, gearRes, antispoofRes, livenessRes] = await Promise.all([ageRes, genderRes, emotionRes, mobilefacenetRes, insightfaceRes, descRes, gearRes, antispoofRes, livenessRes]);\n    }\n    instance.analyze('Finish Face:');\n\n    if (instance.config.face['ssrnet']?.enabled && ageRes && genderRes) { // override age/gender if ssrnet model is used\n      descRes = {\n        ...(descRes as DescRes),\n        age: (ageRes as { age: number}).age,\n        gender: (genderRes as { gender: Gender, genderScore: number }).gender,\n        genderScore: (genderRes as { gender: Gender, genderScore: number }).genderScore,\n      };\n    }\n    if (instance.config.face.gear?.enabled && gearRes) { // override age/gender/race if gear model is used\n      descRes = {\n        ...(descRes as DescRes),\n        age: (gearRes as gear.GearType).age,\n        gender: (gearRes as gear.GearType).gender,\n        genderScore: (gearRes as gear.GearType).genderScore,\n        race: (gearRes as gear.GearType).race,\n      };\n    }\n    if (instance.config.face['mobilefacenet']?.enabled && mobilefacenetRes) { // override descriptor if mobilefacenet model is used\n      (descRes as DescRes).descriptor = mobilefacenetRes as number[];\n    }\n\n    if (instance.config.face['insightface']?.enabled && insightfaceRes) { // override descriptor if insightface model is used\n      (descRes as DescRes).descriptor = insightfaceRes as number[];\n    }\n\n    // calculate iris distance\n    // iris: array[ center, left, top, right, bottom]\n    if (!instance.config.face.iris?.enabled) {\n      // if (faces[i]?.annotations?.leftEyeIris) delete faces[i].annotations.leftEyeIris;\n      // if (faces[i]?.annotations?.rightEyeIris) delete faces[i].annotations.rightEyeIris;\n    }\n    const irisSize = (faces[i]?.annotations?.leftEyeIris?.[0] && faces[i]?.annotations?.rightEyeIris?.[0]\n      && (faces[i].annotations.leftEyeIris.length > 0) && (faces[i].annotations.rightEyeIris.length > 0)\n      && (faces[i].annotations.leftEyeIris[0] !== null) && (faces[i].annotations.rightEyeIris[0] !== null))\n      ? Math.max(Math.abs(faces[i].annotations.leftEyeIris[3][0] - faces[i].annotations.leftEyeIris[1][0]), Math.abs(faces[i].annotations.rightEyeIris[4][1] - faces[i].annotations.rightEyeIris[2][1])) / input.shape[2]\n      : 0; // note: average human iris size is 11.7mm\n\n    // optionally return tensor\n    const tensor = instance.config.face.detector?.return ? tf.squeeze(faces[i].tensor) : null;\n    // dispose original face tensor\n    tf.dispose(faces[i].tensor);\n    // delete temp face image\n    if (faces[i].tensor) delete faces[i].tensor;\n    // combine results\n    const res: FaceResult = {\n      ...faces[i],\n      id: i,\n    };\n    if ((descRes as DescRes).age) res.age = (descRes as DescRes).age;\n    if ((descRes as DescRes).gender) res.gender = (descRes as DescRes).gender;\n    if ((descRes as DescRes).genderScore) res.genderScore = (descRes as DescRes).genderScore;\n    if ((descRes as DescRes).descriptor) res.embedding = (descRes as DescRes).descriptor;\n    if ((descRes as DescRes).race) res.race = (descRes as DescRes).race as { score: number, race: Race }[];\n    if (emotionRes) res.emotion = emotionRes as { score: number, emotion: Emotion }[];\n    if (antispoofRes) res.real = antispoofRes as number;\n    if (livenessRes) res.live = livenessRes as number;\n    if (irisSize && irisSize !== 0) res.iris = Math.trunc(500 / irisSize / 11.7) / 100;\n    if (rotation) res.rotation = rotation;\n    if (tensor) res.tensor = tensor;\n    faceRes.push(res);\n    instance.analyze('End Face');\n  }\n  instance.analyze('End FaceMesh:');\n  if (instance.config.async) {\n    if (instance.performance.face) delete instance.performance.face;\n    if (instance.performance.age) delete instance.performance.age;\n    if (instance.performance.gender) delete instance.performance.gender;\n    if (instance.performance.emotion) delete instance.performance.emotion;\n  }\n  return faceRes;\n};\n", "/**\n * Gesture detection algorithm\n */\n\nimport type { GestureResult, BodyResult, FaceResult, HandResult, Point } from '../result';\nimport * as fingerPose from '../hand/fingerpose';\n\n/** face gesture type */\nexport type FaceGesture =\n  `facing ${'left' | 'center' | 'right'}`\n  | `blink ${'left' | 'right'} eye`\n  | `mouth ${number}% open`\n  | `head ${'up' | 'down'}`;\n\n/** iris gesture type */\nexport type IrisGesture =\n  'facing center'\n  | `looking ${'left' | 'right' | 'up' | 'down'}`\n  | 'looking center';\n\n/** body gesture type */\nexport type BodyGesture =\n  `leaning ${'left' | 'right'}`\n  | `raise ${'left' | 'right'} hand`\n  | 'i give up';\n\n/** hand gesture type */\nexport type HandGesture =\n  `${'thumb' | 'index' | 'middle' | 'ring' | 'pinky'} forward`\n  | `${'thumb' | 'index' | 'middle' | 'ring' | 'pinky'} up`\n  | 'victory'\n  | 'thumbs up';\n\nexport const body = (res: BodyResult[]): GestureResult[] => {\n  if (!res) return [];\n  const gestures: { body: number, gesture: BodyGesture }[] = [];\n  for (let i = 0; i < res.length; i++) {\n    // raising hands\n    const leftWrist = res[i].keypoints.find((a) => (a.part === 'leftWrist'));\n    const rightWrist = res[i].keypoints.find((a) => (a.part === 'rightWrist'));\n    const nose = res[i].keypoints.find((a) => (a.part === 'nose'));\n    if (nose && leftWrist && rightWrist && (leftWrist.position[1] < nose.position[1]) && (rightWrist.position[1] < nose.position[1])) gestures.push({ body: i, gesture: 'i give up' });\n    else if (nose && leftWrist && (leftWrist.position[1] < nose.position[1])) gestures.push({ body: i, gesture: 'raise left hand' });\n    else if (nose && rightWrist && (rightWrist.position[1] < nose.position[1])) gestures.push({ body: i, gesture: 'raise right hand' });\n\n    // leaning\n    const leftShoulder = res[i].keypoints.find((a) => (a.part === 'leftShoulder'));\n    const rightShoulder = res[i].keypoints.find((a) => (a.part === 'rightShoulder'));\n    if (leftShoulder && rightShoulder && Math.abs(leftShoulder.positionRaw[1] - rightShoulder.positionRaw[1]) > 0.1) {\n      gestures.push({ body: i, gesture: `leaning ${(leftShoulder.position[1] > rightShoulder.position[1]) ? 'left' : 'right'}` });\n    }\n  }\n  return gestures;\n};\n\nexport const face = (res: FaceResult[]): GestureResult[] => {\n  if (!res) return [];\n  const gestures: { face: number, gesture: FaceGesture }[] = [];\n  for (let i = 0; i < res.length; i++) {\n    if (res[i].mesh && res[i].mesh.length > 450) {\n      const zDiff = (res[i].mesh[33][2] || 0) - (res[i].mesh[263][2] || 0);\n      const xDiff = res[i].mesh[33][0] - res[i].mesh[263][0];\n      if (Math.abs(zDiff / xDiff) <= 0.15) gestures.push({ face: i, gesture: 'facing center' });\n      else gestures.push({ face: i, gesture: `facing ${zDiff < 0 ? 'left' : 'right'}` });\n      const openLeft = Math.abs(res[i].mesh[374][1] - res[i].mesh[386][1]) / Math.abs(res[i].mesh[443][1] - res[i].mesh[450][1]); // center of eye inner lid y coord div center of wider eye border y coord\n      if (openLeft < 0.2) gestures.push({ face: i, gesture: 'blink left eye' });\n      const openRight = Math.abs(res[i].mesh[145][1] - res[i].mesh[159][1]) / Math.abs(res[i].mesh[223][1] - res[i].mesh[230][1]); // center of eye inner lid y coord div center of wider eye border y coord\n      if (openRight < 0.2) gestures.push({ face: i, gesture: 'blink right eye' });\n      const mouthOpen = Math.min(100, 500 * Math.abs(res[i].mesh[13][1] - res[i].mesh[14][1]) / Math.abs(res[i].mesh[10][1] - res[i].mesh[152][1]));\n      if (mouthOpen > 10) gestures.push({ face: i, gesture: `mouth ${Math.trunc(mouthOpen)}% open` });\n      const chinDepth = res[i].mesh[152][2] || 0;\n      if (Math.abs(chinDepth) > 10) gestures.push({ face: i, gesture: `head ${chinDepth < 0 ? 'up' : 'down'}` });\n    }\n  }\n  return gestures;\n};\n\nexport const iris = (res: FaceResult[]): GestureResult[] => {\n  if (!res) return [];\n  const gestures: { iris: number, gesture: IrisGesture }[] = [];\n  for (let i = 0; i < res.length; i++) {\n    if (!res[i].annotations?.leftEyeIris?.[0] || !res[i].annotations?.rightEyeIris?.[0]) continue;\n    const sizeXLeft = res[i].annotations.leftEyeIris[3][0] - res[i].annotations.leftEyeIris[1][0];\n    const sizeYLeft = res[i].annotations.leftEyeIris[4][1] - res[i].annotations.leftEyeIris[2][1];\n    const areaLeft = Math.abs(sizeXLeft * sizeYLeft);\n\n    const sizeXRight = res[i].annotations.rightEyeIris[3][0] - res[i].annotations.rightEyeIris[1][0];\n    const sizeYRight = res[i].annotations.rightEyeIris[4][1] - res[i].annotations.rightEyeIris[2][1];\n    const areaRight = Math.abs(sizeXRight * sizeYRight);\n\n    let center = false;\n    const difference = Math.abs(areaLeft - areaRight) / Math.max(areaLeft, areaRight);\n    if (difference < 0.25) {\n      center = true;\n      gestures.push({ iris: i, gesture: 'facing center' });\n    }\n\n    const leftIrisCenterX = Math.abs(res[i].mesh[263][0] - res[i].annotations.leftEyeIris[0][0]) / res[i].box[2];\n    const rightIrisCenterX = Math.abs(res[i].mesh[33][0] - res[i].annotations.rightEyeIris[0][0]) / res[i].box[2];\n    if (leftIrisCenterX > 0.06 || rightIrisCenterX > 0.06) center = false;\n    if (leftIrisCenterX > rightIrisCenterX) { // check eye with bigger offset\n      if (leftIrisCenterX > 0.05) gestures.push({ iris: i, gesture: 'looking right' });\n    } else {\n      if (rightIrisCenterX > 0.05) gestures.push({ iris: i, gesture: 'looking left' });\n    }\n\n    const rightIrisCenterY = Math.abs(res[i].mesh[145][1] - res[i].annotations.rightEyeIris[0][1]) / res[i].box[3];\n    const leftIrisCenterY = Math.abs(res[i].mesh[374][1] - res[i].annotations.leftEyeIris[0][1]) / res[i].box[3];\n    if (leftIrisCenterY < 0.01 || rightIrisCenterY < 0.01 || leftIrisCenterY > 0.022 || rightIrisCenterY > 0.022) center = false;\n    if (leftIrisCenterY < 0.01 || rightIrisCenterY < 0.01) gestures.push({ iris: i, gesture: 'looking down' });\n    if (leftIrisCenterY > 0.022 || rightIrisCenterY > 0.022) gestures.push({ iris: i, gesture: 'looking up' });\n\n    // still center;\n    if (center) gestures.push({ iris: i, gesture: 'looking center' });\n  }\n  return gestures;\n};\n\nexport const hand = (res: HandResult[]): GestureResult[] => {\n  if (!res) return [];\n  const gestures: { hand: number, gesture: HandGesture }[] = [];\n  for (let i = 0; i < res.length; i++) {\n    const fingers: { name: string, position: Point }[] = [];\n    if (res[i].annotations) {\n      for (const [finger, pos] of Object.entries(res[i].annotations)) {\n        if (finger !== 'palmBase' && Array.isArray(pos) && pos[0]) fingers.push({ name: finger.toLowerCase(), position: pos[0] }); // get tip of each finger\n      }\n    }\n    if (fingers && fingers.length > 0) {\n      const closest = fingers.reduce((best, a) => ((best.position[2] || 0) < (a.position[2] || 0) ? best : a));\n      gestures.push({ hand: i, gesture: `${closest.name} forward` as HandGesture });\n      const highest = fingers.reduce((best, a) => (best.position[1] < a.position[1] ? best : a));\n      gestures.push({ hand: i, gesture: `${highest.name} up` as HandGesture });\n    }\n    if (res[i].keypoints) {\n      const poses = fingerPose.match(res[i].keypoints);\n      for (const pose of poses) gestures.push({ hand: i, gesture: pose.name as HandGesture });\n    }\n  }\n  return gestures;\n};\n", "/**\n * Results interpolation for smoothening of video detection results inbetween detected frames\n */\n\nimport type { Result, FaceResult, BodyResult, HandResult, ObjectResult, PersonResult, Box, Point, BodyLandmark, BodyAnnotation } from '../result';\nimport type { Config } from '../config';\n\nimport * as moveNetCoords from '../body/movenetcoords';\nimport * as blazePoseCoords from '../body/blazeposecoords';\nimport * as efficientPoseCoords from '../body/efficientposecoords';\nimport { now } from './util';\nimport { env } from './env';\n\nconst bufferedResult: Result = { face: [], body: [], hand: [], gesture: [], object: [], persons: [], performance: {}, timestamp: 0, error: null };\nlet interpolateTime = 0;\n\nexport function calc(newResult: Result, config: Config): Result {\n  const t0 = now();\n  if (!newResult) return { face: [], body: [], hand: [], gesture: [], object: [], persons: [], performance: {}, timestamp: 0, error: null };\n  // each record is only updated using deep clone when number of detected record changes, otherwise it will converge by itself\n  // otherwise bufferedResult is a shallow clone of result plus updated local calculated values\n  // thus mixing by-reference and by-value assignments to minimize memory operations\n\n  const elapsed = Date.now() - newResult.timestamp;\n  // curve fitted: buffer = 8 - ln(delay)\n  // interpolation formula: current = ((buffer - 1) * previous + live) / buffer\n  // - at  50ms delay buffer = ~4.1 => 28% towards live data\n  // - at 250ms delay buffer = ~2.5 => 40% towards live data\n  // - at 500ms delay buffer = ~1.8 => 55% towards live data\n  // - at 750ms delay buffer = ~1.4 => 71% towards live data\n  // - at  1sec delay buffer = 1 which means live data is used\n  const bufferedFactor = elapsed < 1000 ? 8 - Math.log(elapsed + 1) : 1;\n\n  if (newResult.canvas) bufferedResult.canvas = newResult.canvas;\n  if (newResult.error) bufferedResult.error = newResult.error;\n\n  // interpolate body results\n  if (!bufferedResult.body || (newResult.body.length !== bufferedResult.body.length)) {\n    bufferedResult.body = JSON.parse(JSON.stringify(newResult.body)) as BodyResult[]; // deep clone once\n  } else {\n    for (let i = 0; i < newResult.body.length; i++) {\n      const box = newResult.body[i].box // update box\n        .map((newBoxCoord, j) => ((bufferedFactor - 1) * bufferedResult.body[i].box[j] + newBoxCoord) / bufferedFactor) as Box;\n      const boxRaw = newResult.body[i].boxRaw // update boxRaw\n        .map((newBoxCoord, j) => ((bufferedFactor - 1) * bufferedResult.body[i].boxRaw[j] + newBoxCoord) / bufferedFactor) as Box;\n      const keypoints = (newResult.body[i].keypoints // update keypoints\n        .map((newKpt, j) => ({\n          score: newKpt.score,\n          part: newKpt.part,\n          position: [\n            bufferedResult.body[i].keypoints[j] ? ((bufferedFactor - 1) * (bufferedResult.body[i].keypoints[j].position[0] || 0) + (newKpt.position[0] || 0)) / bufferedFactor : newKpt.position[0],\n            bufferedResult.body[i].keypoints[j] ? ((bufferedFactor - 1) * (bufferedResult.body[i].keypoints[j].position[1] || 0) + (newKpt.position[1] || 0)) / bufferedFactor : newKpt.position[1],\n            bufferedResult.body[i].keypoints[j] ? ((bufferedFactor - 1) * (bufferedResult.body[i].keypoints[j].position[2] || 0) + (newKpt.position[2] || 0)) / bufferedFactor : newKpt.position[2],\n          ],\n          positionRaw: [\n            bufferedResult.body[i].keypoints[j] ? ((bufferedFactor - 1) * (bufferedResult.body[i].keypoints[j].positionRaw[0] || 0) + (newKpt.positionRaw[0] || 0)) / bufferedFactor : newKpt.positionRaw[0],\n            bufferedResult.body[i].keypoints[j] ? ((bufferedFactor - 1) * (bufferedResult.body[i].keypoints[j].positionRaw[1] || 0) + (newKpt.positionRaw[1] || 0)) / bufferedFactor : newKpt.positionRaw[1],\n            bufferedResult.body[i].keypoints[j] ? ((bufferedFactor - 1) * (bufferedResult.body[i].keypoints[j].positionRaw[2] || 0) + (newKpt.positionRaw[2] || 0)) / bufferedFactor : newKpt.positionRaw[2],\n          ],\n          distance: [\n            bufferedResult.body[i].keypoints[j] ? ((bufferedFactor - 1) * (bufferedResult.body[i].keypoints[j].distance?.[0] || 0) + (newKpt.distance?.[0] || 0)) / bufferedFactor : newKpt.distance?.[0],\n            bufferedResult.body[i].keypoints[j] ? ((bufferedFactor - 1) * (bufferedResult.body[i].keypoints[j].distance?.[1] || 0) + (newKpt.distance?.[1] || 0)) / bufferedFactor : newKpt.distance?.[1],\n            bufferedResult.body[i].keypoints[j] ? ((bufferedFactor - 1) * (bufferedResult.body[i].keypoints[j].distance?.[2] || 0) + (newKpt.distance?.[2] || 0)) / bufferedFactor : newKpt.distance?.[2],\n          ],\n        }))) as { score: number, part: BodyLandmark, position: [number, number, number?], positionRaw: [number, number, number?] }[];\n\n      const annotations: Record<BodyAnnotation, Point[][]> = {} as Record<BodyAnnotation, Point[][]>; // recreate annotations\n      let coords = { connected: {} };\n      if (config.body.modelPath?.includes('efficientpose')) coords = efficientPoseCoords;\n      else if (config.body.modelPath?.includes('blazepose')) coords = blazePoseCoords;\n      else if (config.body.modelPath?.includes('movenet')) coords = moveNetCoords;\n      for (const [name, indexes] of Object.entries(coords.connected as Record<string, string[]>)) {\n        const pt: Point[][] = [];\n        for (let j = 0; j < indexes.length - 1; j++) {\n          const pt0 = keypoints.find((kp) => kp.part === indexes[j]);\n          const pt1 = keypoints.find((kp) => kp.part === indexes[j + 1]);\n          // if (pt0 && pt1 && pt0.score > (config.body.minConfidence || 0) && pt1.score > (config.body.minConfidence || 0)) pt.push([pt0.position, pt1.position]);\n          if (pt0 && pt1) pt.push([pt0.position, pt1.position]);\n        }\n        annotations[name] = pt;\n      }\n      bufferedResult.body[i] = { ...newResult.body[i], box, boxRaw, keypoints, annotations }; // shallow clone plus updated values\n    }\n  }\n\n  // interpolate hand results\n  if (!bufferedResult.hand || (newResult.hand.length !== bufferedResult.hand.length)) {\n    bufferedResult.hand = JSON.parse(JSON.stringify(newResult.hand)); // deep clone once\n  } else {\n    for (let i = 0; i < newResult.hand.length; i++) {\n      const box = (newResult.hand[i].box// update box\n        .map((b, j) => ((bufferedFactor - 1) * bufferedResult.hand[i].box[j] + b) / bufferedFactor)) as Box;\n      const boxRaw = (newResult.hand[i].boxRaw // update boxRaw\n        .map((b, j) => ((bufferedFactor - 1) * bufferedResult.hand[i].boxRaw[j] + b) / bufferedFactor)) as Box;\n      if (bufferedResult.hand[i].keypoints.length !== newResult.hand[i].keypoints.length) bufferedResult.hand[i].keypoints = newResult.hand[i].keypoints; // reset keypoints as previous frame did not have them\n      const keypoints = newResult.hand[i].keypoints && newResult.hand[i].keypoints.length > 0 ? newResult.hand[i].keypoints // update landmarks\n        .map((landmark, j) => landmark\n          .map((coord, k) => (((bufferedFactor - 1) * (bufferedResult.hand[i].keypoints[j][k] || 1) + (coord || 0)) / bufferedFactor)) as Point)\n        : [];\n      let annotations = {};\n      if (Object.keys(bufferedResult.hand[i].annotations).length !== Object.keys(newResult.hand[i].annotations).length) {\n        bufferedResult.hand[i].annotations = newResult.hand[i].annotations; // reset annotations as previous frame did not have them\n        annotations = bufferedResult.hand[i].annotations;\n      } else if (newResult.hand[i].annotations) {\n        for (const key of Object.keys(newResult.hand[i].annotations)) { // update annotations\n          annotations[key] = newResult.hand[i]?.annotations?.[key]?.[0]\n            ? newResult.hand[i].annotations[key]\n              .map((val, j: number) => val\n                .map((coord: number, k: number) => ((bufferedFactor - 1) * bufferedResult.hand[i].annotations[key][j][k] + coord) / bufferedFactor))\n            : null;\n        }\n      }\n      bufferedResult.hand[i] = { ...newResult.hand[i], box, boxRaw, keypoints, annotations: annotations as HandResult['annotations'] }; // shallow clone plus updated values\n    }\n  }\n\n  // interpolate face results\n  if (!bufferedResult.face || (newResult.face.length !== bufferedResult.face.length)) {\n    bufferedResult.face = JSON.parse(JSON.stringify(newResult.face)) as FaceResult[]; // deep clone once\n  } else {\n    for (let i = 0; i < newResult.face.length; i++) {\n      const box = (newResult.face[i].box // update box\n        .map((b, j) => ((bufferedFactor - 1) * bufferedResult.face[i].box[j] + b) / bufferedFactor)) as Box;\n      const boxRaw = (newResult.face[i].boxRaw // update boxRaw\n        .map((b, j) => ((bufferedFactor - 1) * bufferedResult.face[i].boxRaw[j] + b) / bufferedFactor)) as Box;\n      if (newResult.face[i].rotation) {\n        const rotation: {\n          matrix: [number, number, number, number, number, number, number, number, number],\n          angle: { roll: number, yaw: number, pitch: number },\n          gaze: { bearing: number, strength: number }\n        } = { matrix: [0, 0, 0, 0, 0, 0, 0, 0, 0], angle: { roll: 0, yaw: 0, pitch: 0 }, gaze: { bearing: 0, strength: 0 } };\n        rotation.matrix = newResult.face[i].rotation?.matrix as [number, number, number, number, number, number, number, number, number];\n        rotation.angle = {\n          roll: ((bufferedFactor - 1) * (bufferedResult.face[i].rotation?.angle.roll || 0) + (newResult.face[i].rotation?.angle.roll || 0)) / bufferedFactor,\n          yaw: ((bufferedFactor - 1) * (bufferedResult.face[i].rotation?.angle.yaw || 0) + (newResult.face[i].rotation?.angle.yaw || 0)) / bufferedFactor,\n          pitch: ((bufferedFactor - 1) * (bufferedResult.face[i].rotation?.angle.pitch || 0) + (newResult.face[i].rotation?.angle.pitch || 0)) / bufferedFactor,\n        };\n        rotation.gaze = {\n          // not fully correct due projection on circle, also causes wrap-around draw on jump from negative to positive\n          bearing: ((bufferedFactor - 1) * (bufferedResult.face[i].rotation?.gaze.bearing || 0) + (newResult.face[i].rotation?.gaze.bearing || 0)) / bufferedFactor,\n          strength: ((bufferedFactor - 1) * (bufferedResult.face[i].rotation?.gaze.strength || 0) + (newResult.face[i].rotation?.gaze.strength || 0)) / bufferedFactor,\n        };\n        bufferedResult.face[i] = { ...newResult.face[i], rotation, box, boxRaw }; // shallow clone plus updated values\n      }\n      bufferedResult.face[i] = { ...newResult.face[i], box, boxRaw }; // shallow clone plus updated values\n    }\n  }\n\n  // interpolate object detection results\n  if (!bufferedResult.object || (newResult.object.length !== bufferedResult.object.length)) {\n    bufferedResult.object = JSON.parse(JSON.stringify(newResult.object)) as ObjectResult[]; // deep clone once\n  } else {\n    for (let i = 0; i < newResult.object.length; i++) {\n      const box = (newResult.object[i].box // update box\n        .map((b, j) => ((bufferedFactor - 1) * bufferedResult.object[i].box[j] + b) / bufferedFactor)) as Box;\n      const boxRaw = (newResult.object[i].boxRaw // update boxRaw\n        .map((b, j) => ((bufferedFactor - 1) * bufferedResult.object[i].boxRaw[j] + b) / bufferedFactor)) as Box;\n      bufferedResult.object[i] = { ...newResult.object[i], box, boxRaw }; // shallow clone plus updated values\n    }\n  }\n\n  // interpolate person results\n  if (newResult.persons) {\n    const newPersons = newResult.persons; // trigger getter function\n    if (!bufferedResult.persons || (newPersons.length !== bufferedResult.persons.length)) {\n      bufferedResult.persons = JSON.parse(JSON.stringify(newPersons)) as PersonResult[];\n    } else {\n      for (let i = 0; i < newPersons.length; i++) { // update person box, we don't update the rest as it's updated as reference anyhow\n        bufferedResult.persons[i].box = (newPersons[i].box\n          .map((box, j) => ((bufferedFactor - 1) * bufferedResult.persons[i].box[j] + box) / bufferedFactor)) as Box;\n      }\n    }\n  }\n\n  // just copy latest gestures without interpolation\n  if (newResult.gesture) bufferedResult.gesture = newResult.gesture;\n\n  // append interpolation performance data\n  const t1 = now();\n  interpolateTime = env.perfadd ? interpolateTime + Math.round(t1 - t0) : Math.round(t1 - t0);\n  if (newResult.performance) bufferedResult.performance = { ...newResult.performance, interpolate: interpolateTime };\n\n  return bufferedResult;\n}\n", "/** Face descriptor type as number array */\nexport type Descriptor = number[]\nexport type MatchOptions = { order?: number, threshold?: number, multiplier?: number, min?: number, max?: number } | undefined;\n\n/** Calculates distance between two descriptors\n * @param options - calculation options\n * - order - algorithm to use\n *   Euclidean distance if `order` is 2 (default), Minkowski distance algorithm of nth order if `order` is higher than 2\n * - multiplier - by how much to enhance difference analysis in range of 1..100\n *   default is 20 which normalizes results to similarity above 0.5 can be considered a match\n */\nexport function distance(descriptor1: Descriptor, descriptor2: Descriptor, options: MatchOptions = { order: 2, multiplier: 25 }) {\n  // general minkowski distance, euclidean distance is limited case where order is 2\n  if (!descriptor1 || !descriptor1) return Number.MAX_SAFE_INTEGER;\n  let sum = 0;\n  for (let i = 0; i < descriptor1.length; i++) {\n    const diff = (!options.order || options.order === 2) ? (descriptor1[i] - descriptor2[i]) : (Math.abs(descriptor1[i] - descriptor2[i]));\n    sum += (!options.order || options.order === 2) ? (diff * diff) : (diff ** options.order);\n  }\n  return (options.multiplier || 20) * sum;\n}\n\n// invert distance to similarity, normalize to given range and clamp\nconst normalizeDistance = (dist, order, min, max) => {\n  if (dist === 0) return 1; // short circuit for identical inputs\n  const root = order === 2 ? Math.sqrt(dist) : dist ** (1 / order); // take root of distance\n  const norm = (1 - (root / 100) - min) / (max - min); // normalize to range\n  const clamp = Math.max(Math.min(norm, 1), 0); // clamp to 0..1\n  return clamp;\n};\n\n/** Calculates normalized similarity between two face descriptors based on their `distance`\n * @param options - calculation options\n * - order - algorithm to use\n *   Euclidean distance if `order` is 2 (default), Minkowski distance algorithm of nth order if `order` is higher than 2\n * - multiplier - by how much to enhance difference analysis in range of 1..100\n *   default is 20 which normalizes results to similarity above 0.5 can be considered a match\n * - min - normalize similarity result to a given range\n * - max - normalzie similarity resutl to a given range\n *   default is 0.2...0.8\n * Returns similarity between two face descriptors normalized to 0..1 range where 0 is no similarity and 1 is perfect similarity\n */\nexport function similarity(descriptor1: Descriptor, descriptor2: Descriptor, options: MatchOptions = { order: 2, multiplier: 25, min: 0.2, max: 0.8 }) {\n  const dist = distance(descriptor1, descriptor2, options);\n  return normalizeDistance(dist, options.order || 2, options.min || 0, options.max || 1);\n}\n\n/** Matches given descriptor to a closest entry in array of descriptors\n * @param descriptor - face descriptor\n * @param descriptors - array of face descriptors to commpare given descriptor to\n * @param options - see `similarity` method for options description\n * Returns\n * - `index` index array index where best match was found or -1 if no matches\n * - `distance` calculated `distance` of given descriptor to the best match\n * - `similarity` calculated normalized `similarity` of given descriptor to the best match\n*/\nexport function match(descriptor: Descriptor, descriptors: Descriptor[], options: MatchOptions = { order: 2, multiplier: 25, threshold: 0, min: 0.2, max: 0.8 }) {\n  if (!Array.isArray(descriptor) || !Array.isArray(descriptors) || descriptor.length < 64 || descriptors.length === 0) { // validate input\n    return { index: -1, distance: Number.POSITIVE_INFINITY, similarity: 0 };\n  }\n  let lowestDistance = Number.MAX_SAFE_INTEGER;\n  let index = -1;\n  for (let i = 0; i < descriptors.length; i++) {\n    const res = descriptors[i].length === descriptor.length ? distance(descriptor, descriptors[i], options) : Number.MAX_SAFE_INTEGER;\n    if (res < lowestDistance) {\n      lowestDistance = res;\n      index = i;\n    }\n    if (lowestDistance < (options.threshold || 0)) break;\n  }\n  const normalizedSimilarity = normalizeDistance(lowestDistance, options.order || 2, options.min || 0, options.max || 1);\n  return { index, distance: lowestDistance, similarity: normalizedSimilarity };\n}\n", "/**\n * Analyze detection Results and sort&combine them into per-person view\n */\n\nimport type { FaceResult, BodyResult, HandResult, GestureResult, PersonResult, Box } from '../result';\n\nexport function join(faces: FaceResult[], bodies: BodyResult[], hands: HandResult[], gestures: GestureResult[], shape: number[] | undefined): PersonResult[] {\n  let id = 0;\n  const persons: PersonResult[] = [];\n  for (const face of faces) { // person is defined primarily by face and then we append other objects as found\n    const person: PersonResult = { id: id++, face, body: null, hands: { left: null, right: null }, gestures: [], box: [0, 0, 0, 0] };\n    for (const body of bodies) {\n      if (face.box[0] > body.box[0] // x within body\n        && face.box[0] < body.box[0] + body.box[2]\n        && face.box[1] + face.box[3] > body.box[1] // y within body\n        && face.box[1] + face.box[3] < body.box[1] + body.box[3]) {\n        person.body = body;\n      }\n    }\n    if (person.body) { // only try to join hands if body is found\n      for (const hand of hands) {\n        if (hand.box[0] + hand.box[2] > person.body.box[0] // x within body for left hand\n          && hand.box[0] + hand.box[2] < person.body.box[0] + person.body.box[2]\n          && hand.box[1] + hand.box[3] > person.body.box[1] // x within body for left hand\n          && hand.box[1] + hand.box[3] < person.body.box[1] + person.body.box[3]) {\n          if (person.hands) person.hands.left = hand;\n        }\n        if (hand.box[0] < person.body.box[0] + person.body.box[2] // x within body for right hand\n          && hand.box[0] > person.body.box[0]\n          && hand.box[1] + hand.box[3] > person.body.box[1] // x within body for right hand\n          && hand.box[1] + hand.box[3] < person.body.box[1] + person.body.box[3]) {\n          if (person.hands) person.hands.right = hand;\n        }\n      }\n    }\n    for (const gesture of gestures) { // append all gestures according to ids\n      if (gesture['face'] !== undefined && gesture['face'] === face.id) person.gestures.push(gesture);\n      else if (gesture['iris'] !== undefined && gesture['iris'] === face.id) person.gestures.push(gesture);\n      else if (gesture['body'] !== undefined && gesture['body'] === person.body?.id) person.gestures.push(gesture);\n      else if (gesture['hand'] !== undefined && gesture['hand'] === person.hands.left?.id) person.gestures.push(gesture);\n      else if (gesture['hand'] !== undefined && gesture['hand'] === person.hands.right?.id) person.gestures.push(gesture);\n    }\n\n    // create new overarching box from all boxes belonging to person\n    const x: number[] = [];\n    const y: number[] = [];\n    const extractXY = (box: Box | undefined) => { // extract all [x, y] coordinates from boxes [x, y, width, height]\n      if (box && box.length === 4) {\n        x.push(box[0], box[0] + box[2]);\n        y.push(box[1], box[1] + box[3]);\n      }\n    };\n    extractXY(person.face.box);\n    extractXY(person.body?.box);\n    extractXY(person.hands.left?.box);\n    extractXY(person.hands.right?.box);\n    const minX = Math.min(...x);\n    const minY = Math.min(...y);\n    person.box = [minX, minY, Math.max(...x) - minX, Math.max(...y) - minY]; // create new overarching box\n\n    // shape is known so we calculate boxRaw as well\n    if (shape?.[1] && shape?.[2]) person.boxRaw = [person.box[0] / shape[2], person.box[1] / shape[1], person.box[2] / shape[2], person.box[3] / shape[1]];\n\n    persons.push(person);\n  }\n  return persons;\n}\n", "/**\n * Embedded sample images used during warmup in dataURL format\n */\n\n// data:image/jpeg;base64,\nexport const face = `\n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`;\n\n// data:image/jpeg;base64,\nexport const body = `\n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\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N\nmtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm\n9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N\nIpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W\nMYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2\n+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql\no+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37\nO99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE\nTE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1\nL7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4\nizsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt\n1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb\nV5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum\nL37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12\n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\nAOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM\nd8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5\n6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP\nbFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu\nLJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy\nwt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX\n0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK\n3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn\nKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0\nvobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t\nzya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps\nuOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi\nFdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA\n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\nNO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h\n2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te\npSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7\ncvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7\nmZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA\nAAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA\nhGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J\nqx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI\nXRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy\nRHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX\nqNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX\nkaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P\nya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC\nExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA\nlAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA\nAAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o\n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\n2Q==`;\n", "/**\n * Warmup algorithm that uses embedded images to exercise loaded models for faster future inference\n */\n\nimport { log, now, mergeDeep } from './util/util';\nimport * as sample from './sample';\nimport * as tf from '../dist/tfjs.esm.js';\nimport * as image from './image/image';\nimport * as backend from './tfjs/backend';\nimport { env } from './util/env';\nimport type { Config } from './config';\nimport type { Result } from './result';\nimport { Human, models } from './human';\nimport type { Tensor } from './exports';\n\nasync function warmupBitmap(instance: Human): Promise<Result | undefined> {\n  const b64toBlob = (base64: string, type = 'application/octet-stream') => fetch(`data:${type};base64,${base64}`).then((res) => res.blob());\n  let blob: Blob | null;\n  let res: Result | undefined;\n  switch (instance.config.warmup) {\n    case 'face': blob = await b64toBlob(sample.face); break;\n    case 'body':\n    case 'full': blob = await b64toBlob(sample.body); break;\n    default: blob = null;\n  }\n  if (blob) {\n    const bitmap = await createImageBitmap(blob);\n    res = await instance.detect(bitmap, instance.config);\n    bitmap.close();\n  }\n  return res;\n}\n\nasync function warmupCanvas(instance: Human): Promise<Result | undefined> {\n  return new Promise((resolve) => {\n    let src: string;\n    // let size = 0;\n    switch (instance.config.warmup) {\n      case 'face':\n        // size = 256;\n        src = 'data:image/jpeg;base64,' + sample.face;\n        break;\n      case 'full':\n      case 'body':\n        // size = 1200;\n        src = 'data:image/jpeg;base64,' + sample.body;\n        break;\n      default:\n        src = '';\n    }\n    // src = encodeURI('../assets/human-sample-upper.jpg');\n    let img: HTMLImageElement;\n    if (typeof Image !== 'undefined') img = new Image();\n    // @ts-ignore env.image is an external monkey-patch\n    else if (env.Image) img = new env.Image();\n    else return;\n    img.onload = async () => {\n      const canvas = image.canvas(img.naturalWidth, img.naturalHeight);\n      if (!canvas) {\n        log('Warmup: Canvas not found');\n        resolve(undefined);\n      } else {\n        const ctx = canvas.getContext('2d');\n        if (ctx) ctx.drawImage(img, 0, 0);\n        // const data = ctx?.getImageData(0, 0, canvas.height, canvas.width);\n        const tensor = await instance.image(canvas);\n        const res = tensor.tensor ? await instance.detect(tensor.tensor, instance.config) : undefined;\n        resolve(res);\n      }\n    };\n    if (src) img.src = src;\n    else resolve(undefined);\n  });\n}\n\nasync function warmupNode(instance: Human): Promise<Result | undefined> {\n  const atob = (str: string) => Buffer.from(str, 'base64');\n  let img;\n  if (instance.config.warmup === 'face') img = atob(sample.face);\n  else img = atob(sample.body);\n  let res: Result;\n  if (('node' in tf) && (tf.getBackend() === 'tensorflow')) {\n    const data: Tensor = tf['node'].decodeJpeg(img); // eslint-disable-line import/namespace\n    const expanded: Tensor = tf.expandDims(data, 0);\n    instance.tf.dispose(data);\n    // log('Input:', expanded);\n    res = await instance.detect(expanded, instance.config);\n    instance.tf.dispose(expanded);\n  } else {\n    if (instance.config.debug) log('Warmup tfjs-node not loaded');\n    /*\n    const input = await canvasJS.loadImage(img);\n    const canvas = canvasJS.createCanvas(input.width, input.height);\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(img, 0, 0, input.width, input.height);\n    res = await instance.detect(input, instance.config);\n    */\n  }\n  // @ts-ignore\n  return res;\n}\n\nasync function runInference(instance: Human) {\n  let res: Result | undefined;\n  if (typeof createImageBitmap === 'function') res = await warmupBitmap(instance);\n  else if (typeof Image !== 'undefined' || env.Canvas !== undefined) res = await warmupCanvas(instance);\n  else res = await warmupNode(instance);\n  return res;\n}\n\n/** Runs pre-compile on all loaded models */\nexport async function runCompile(instance: Human) {\n  if (!tf.env().flagRegistry.ENGINE_COMPILE_ONLY) return; // tfjs does not support compile-only inference\n  const backendType = tf.getBackend();\n  const webGLBackend = tf.backend();\n  if ((backendType !== 'webgl' && backendType !== 'humangl') || !webGLBackend?.checkCompileCompletion) {\n    // log('compile pass: skip');\n    return;\n  }\n  tf.env().set('ENGINE_COMPILE_ONLY', true);\n  const numTensorsStart = tf.engine().state.numTensors;\n  const compiledModels: string[] = [];\n  for (const [modelName, model] of Object.entries(instance.models).filter(([key, val]) => (key !== null && val !== null))) {\n    const shape = (model.inputs?.[0]?.shape) ? [...model.inputs[0].shape] : [1, 64, 64, 3];\n    const dtype: string = (model.inputs?.[0]?.dtype) ? model.inputs[0].dtype : 'float32';\n    for (let dim = 0; dim < shape.length; dim++) {\n      if (shape[dim] === -1) shape[dim] = dim === 0 ? 1 : 64; // override batch number and any dynamic dimensions\n    }\n    const tensor = tf.zeros(shape, dtype);\n    try {\n      const res = model.execute(tensor);\n      compiledModels.push(modelName);\n      if (Array.isArray(res)) res.forEach((t) => tf.dispose(t));\n      else tf.dispose(res);\n    } catch {\n      log('compile fail model:', modelName);\n    }\n    tf.dispose(tensor);\n  }\n  const kernels = await webGLBackend.checkCompileCompletionAsync();\n  webGLBackend.getUniformLocations();\n  if (instance.config.debug) log('compile pass:', { models: compiledModels, kernels: kernels.length });\n  tf.env().set('ENGINE_COMPILE_ONLY', false);\n  const numTensorsEnd = tf.engine().state.numTensors;\n  if ((numTensorsEnd - numTensorsStart) > 0) log('tensor leak:', numTensorsEnd - numTensorsStart);\n}\n\n/** Warmup method pre-initializes all configured models for faster inference\n * - can take significant time on startup\n * - only used in browser environments for `webgl` and `humangl` backends\n * @param userConfig?: Config\n*/\nexport async function warmup(instance: Human, userConfig?: Partial<Config>): Promise<Result | undefined> {\n  await backend.check(instance, false);\n  const t0 = now();\n  instance.state = 'warmup';\n  if (userConfig) instance.config = mergeDeep(instance.config, userConfig) as Config;\n  if (!instance.config.warmup || instance.config.warmup.length === 0 || instance.config.warmup === 'none') {\n    return { face: [], body: [], hand: [], gesture: [], object: [], performance: instance.performance, timestamp: now(), persons: [], error: null };\n  }\n  return new Promise(async (resolve) => {\n    await models.load(instance);\n    await runCompile(instance);\n    const res = await runInference(instance);\n    const t1 = now();\n    if (instance.config.debug) log('warmup', instance.config.warmup, Math.round(t1 - t0), 'ms');\n    instance.emit('warmup');\n    resolve(res);\n  });\n}\n", "/**\n * Human main module\n * @default Human Library\n * @summary <https://github.com/vladmandic/human>\n * @author <https://github.com/vladmandic>\n * @copyright <https://github.com/vladmandic>\n * @license MIT\n */\n\n// module imports\nimport { log, now, mergeDeep, validate } from './util/util';\nimport { defaults } from './config';\nimport { env, Env } from './util/env';\nimport { setModelLoadOptions } from './tfjs/load';\nimport * as tf from '../dist/tfjs.esm.js';\nimport * as app from '../package.json';\nimport * as backend from './tfjs/backend';\nimport * as blazepose from './body/blazepose';\nimport * as centernet from './object/centernet';\nimport * as draw from './draw/draw';\nimport * as efficientpose from './body/efficientpose';\nimport * as face from './face/face';\nimport * as facemesh from './face/facemesh';\nimport * as faceres from './face/faceres';\nimport * as gesture from './gesture/gesture';\nimport * as handpose from './hand/handpose';\nimport * as handtrack from './hand/handtrack';\nimport * as humangl from './tfjs/humangl';\nimport * as image from './image/image';\nimport * as interpolate from './util/interpolate';\nimport * as match from './face/match';\nimport * as models from './models';\nimport * as movenet from './body/movenet';\nimport * as nanodet from './object/nanodet';\nimport * as persons from './util/persons';\nimport * as posenet from './body/posenet';\nimport * as segmentation from './segmentation/segmentation';\nimport * as warmups from './warmup';\n// type definitions\nimport type { Input, Tensor, DrawOptions, Config, Result, FaceResult, HandResult, BodyResult, ObjectResult, GestureResult, PersonResult, AnyCanvas, ModelStats } from './exports';\n// type exports\nexport * from './exports';\n\n/** **Human** library main class\n *\n * All methods and properties are available only as members of Human class\n *\n * - Configuration object definition: {@link Config}\n * - Results object definition: {@link Result}\n * - Possible inputs: {@link Input}\n *\n * @param userConfig - {@link Config}\n * @returns instance of {@link Human}\n */\nexport class Human {\n  /** Current version of Human library in *semver* format */\n  version: string;\n\n  /** Current configuration\n   * - Defaults: [config](https://github.com/vladmandic/human/blob/main/src/config.ts#L262)\n   */\n  config: Config;\n\n  /** Last known result of detect run\n   * - Can be accessed anytime after initial detection\n  */\n  result: Result;\n\n  /** Current state of Human library\n   * - Can be polled to determine operations that are currently executed\n   * - Progresses through: 'config', 'check', 'backend', 'load', 'run:<model>', 'idle'\n   */\n  state: string;\n\n  /** currenty processed image tensor and canvas */\n  process: { tensor: Tensor | null, canvas: AnyCanvas | null };\n\n  /** Instance of TensorFlow/JS used by Human\n   *  - Can be embedded or externally provided\n   * [TFJS API](https://js.tensorflow.org/api/latest/)\n   */\n  tf;\n\n  /** Object containing environment information used for diagnostics */\n  env: Env;\n\n  /** Draw helper classes that can draw detected objects on canvas using specified draw\n   * - canvas: draws input to canvas\n   * - options: are global settings for all draw operations, can be overriden for each draw method {@link DrawOptions}\n   * - face, body, hand, gesture, object, person: draws detected results as overlays on canvas\n   */\n  draw: { canvas: typeof draw.canvas, face: typeof draw.face, body: typeof draw.body, hand: typeof draw.hand, gesture: typeof draw.gesture, object: typeof draw.object, person: typeof draw.person, all: typeof draw.all, options: DrawOptions };\n\n  /** Currently loaded models\n   * @internal\n   * {@link Models}\n  */\n  models: models.Models;\n\n  /** Container for events dispatched by Human\n   * Possible events:\n   * - `create`: triggered when Human object is instantiated\n   * - `load`: triggered when models are loaded (explicitly or on-demand)\n   * - `image`: triggered when input image is processed\n   * - `result`: triggered when detection is complete\n   * - `warmup`: triggered when warmup is complete\n   * - `error`: triggered on some errors\n   */\n  events: EventTarget | undefined;\n  /** Reference face triangualtion array of 468 points, used for triangle references between points */\n  faceTriangulation: number[];\n  /** Refernce UV map of 468 values, used for 3D mapping of the face mesh */\n  faceUVMap: [number, number][];\n  /** Performance object that contains values for all recently performed operations */\n  performance: Record<string, number>; // perf members are dynamically defined as needed\n  #numTensors: number;\n  #analyzeMemoryLeaks: boolean;\n  #checkSanity: boolean;\n  /** WebGL debug info */\n  gl: Record<string, unknown>;\n  // definition end\n\n  /** Constructor for **Human** library that is futher used for all operations\n   * @param userConfig - user configuration object {@link Config}\n   */\n  constructor(userConfig?: Partial<Config>) {\n    this.env = env;\n    /*\n    defaults.wasmPath = tf.version['tfjs-core'].includes('-') // custom build or official build\n      ? 'https://vladmandic.github.io/tfjs/dist/'\n      : `https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${tf.version_core}/dist/`;\n    */\n    const tfVersion = (tf.version.tfjs || tf.version_core).replace(/-(.*)/, '');\n    defaults.wasmPath = `https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${tfVersion}/dist/`;\n    defaults.modelBasePath = env.browser ? '../models/' : 'file://models/';\n    defaults.backend = env.browser ? 'webgl' : 'tensorflow';\n    this.version = app.version; // expose version property on instance of class\n    Object.defineProperty(this, 'version', { value: app.version }); // expose version property directly on class itself\n    this.config = JSON.parse(JSON.stringify(defaults));\n    Object.seal(this.config);\n    this.config.cacheModels = typeof indexedDB !== 'undefined';\n    if (userConfig) this.config = mergeDeep(this.config, userConfig);\n    setModelLoadOptions(this.config);\n    this.tf = tf;\n    this.state = 'idle';\n    this.#numTensors = 0;\n    this.#analyzeMemoryLeaks = false;\n    this.#checkSanity = false;\n    this.performance = {};\n    this.events = (typeof EventTarget !== 'undefined') ? new EventTarget() : undefined;\n    // object that contains all initialized models\n    this.models = new models.Models();\n    // reexport draw methods\n    this.draw = {\n      options: draw.options,\n      canvas: (input: AnyCanvas | HTMLImageElement | HTMLVideoElement, output: AnyCanvas) => draw.canvas(input, output),\n      face: (output: AnyCanvas, result: FaceResult[], options?: Partial<DrawOptions>) => draw.face(output, result, options),\n      body: (output: AnyCanvas, result: BodyResult[], options?: Partial<DrawOptions>) => draw.body(output, result, options),\n      hand: (output: AnyCanvas, result: HandResult[], options?: Partial<DrawOptions>) => draw.hand(output, result, options),\n      gesture: (output: AnyCanvas, result: GestureResult[], options?: Partial<DrawOptions>) => draw.gesture(output, result, options),\n      object: (output: AnyCanvas, result: ObjectResult[], options?: Partial<DrawOptions>) => draw.object(output, result, options),\n      person: (output: AnyCanvas, result: PersonResult[], options?: Partial<DrawOptions>) => draw.person(output, result, options),\n      all: (output: AnyCanvas, result: Result, options?: Partial<DrawOptions>) => draw.all(output, result, options),\n    };\n    this.result = { face: [], body: [], hand: [], gesture: [], object: [], performance: {}, timestamp: 0, persons: [], error: null };\n    // export access to image processing\n    this.process = { tensor: null, canvas: null };\n    // export raw access to underlying models\n    this.faceTriangulation = facemesh.triangulation;\n    this.faceUVMap = facemesh.uvmap;\n    // set gl info\n    this.gl = humangl.config;\n    // init model validation\n    models.validateModel(this, null, '');\n    // include platform info\n    this.emit('create');\n    if (this.config.debug || this.env.browser) log(`version: ${this.version}`);\n    if (this.config.debug) log(`tfjs version: ${this.tf.version['tfjs-core'] as string}`);\n    const envTemp = JSON.parse(JSON.stringify(this.env));\n    delete envTemp.kernels;\n    delete envTemp.initial;\n    delete envTemp.perfadd;\n    if (this.config.debug) log('environment:', envTemp);\n  }\n\n  /** internal function to measure tensor leaks */\n  analyze = (...msg: string[]) => {\n    if (!this.#analyzeMemoryLeaks) return;\n    const currentTensors = this.tf.engine().state.numTensors;\n    const previousTensors = this.#numTensors;\n    this.#numTensors = currentTensors;\n    const leaked = currentTensors - previousTensors;\n    if (leaked !== 0) log(...msg, leaked);\n  };\n\n  /** internal function for quick sanity check on inputs @hidden */\n  #sanity = (input: Input): null | string => {\n    if (!this.#checkSanity) return null;\n    if (!input) return 'input is not defined';\n    if (this.env.node && !(input instanceof tf.Tensor)) return 'input must be a tensor';\n    try {\n      this.tf.getBackend();\n    } catch {\n      return 'backend not loaded';\n    }\n    return null;\n  };\n\n  /** Reset configuration to default values */\n  reset(): void {\n    const currentBackend = this.config.backend; // save backend;\n    this.config = JSON.parse(JSON.stringify(defaults));\n    this.config.backend = currentBackend;\n    image.reset();\n    env.initial = true;\n  }\n\n  /** Validate current configuration schema */\n  validate(userConfig?: Partial<Config>) {\n    const msgs = validate(defaults, userConfig || this.config);\n    if (msgs.length === 0) this.config = mergeDeep(this.config, userConfig) as Config;\n    return msgs;\n  }\n\n  /** Check model for invalid kernel ops for current backend */\n  check() {\n    return models.validate(this);\n  }\n\n  /** Exports face matching methods {@link match#similarity} */\n  public similarity = match.similarity;\n  /** Exports face matching methods {@link match#distance} */\n  public distance = match.distance;\n  /** Exports face matching methods {@link match#match} */\n  public match = match.match;\n\n  /** Utility wrapper for performance.now() */\n  now(): number { // eslint-disable-line class-methods-use-this\n    return now();\n  }\n\n  /** Process input as return canvas and tensor\n   *\n   * @param input - any input {@link Input}\n   * @param getTensor - should image processing also return tensor or just canvas\n   * Returns object with `tensor` and `canvas`\n   */\n  image(input: Input, getTensor: boolean = true) {\n    return image.process(input, this.config, getTensor);\n  }\n\n  /** Segmentation method takes any input and returns processed canvas with body segmentation\n   *  - Segmentation is not triggered as part of detect process\n   * @param input - {@link Input}\n   * @param background - {@link Input}\n   *  - Optional parameter background is used to fill the background with specific input\n   *  Returns:\n   *  - `data` as raw data array with per-pixel segmentation values\n   *  - `canvas` as canvas which is input image filtered with segementation data and optionally merged with background image. canvas alpha values are set to segmentation values for easy merging\n   *  - `alpha` as grayscale canvas that represents segmentation alpha values\n   */\n  async segmentation(input: Input, background?: Input): Promise<{ data: number[] | Tensor, canvas: AnyCanvas | null, alpha: AnyCanvas | null }> {\n    return segmentation.process(input, background, this.config);\n  }\n\n  /** Enhance method performs additional enhacements to face image previously detected for futher processing\n   *\n   * @param input - Tensor as provided in human.result.face[n].tensor\n   * @returns Tensor\n   */\n  enhance(input: Tensor): Tensor | null { // eslint-disable-line class-methods-use-this\n    return faceres.enhance(input);\n  }\n\n  /** Compare two input tensors for pixel simmilarity\n   * - use `human.image` to process any valid input and get a tensor that can be used for compare\n   * - when passing manually generated tensors:\n   *  - both input tensors must be in format [1, height, width, 3]\n   *  - if resolution of tensors does not match, second tensor will be resized to match resolution of the first tensor\n   * - return value is pixel similarity score normalized by input resolution and rgb channels\n  */\n  compare(firstImageTensor: Tensor, secondImageTensor: Tensor): Promise<number> {\n    return image.compare(this.config, firstImageTensor, secondImageTensor);\n  }\n\n  /** Explicit backend initialization\n   *  - Normally done implicitly during initial load phase\n   *  - Call to explictly register and initialize TFJS backend without any other operations\n   *  - Use when changing backend during runtime\n   */\n  async init(): Promise<void> {\n    await backend.check(this, true);\n    await this.tf.ready();\n    image.reset();\n  }\n\n  /** Load method preloads all configured models on-demand\n   * - Not explicitly required as any required model is load implicitly on it's first run\n   *\n   * @param userConfig - {@link Config}\n  */\n  async load(userConfig?: Partial<Config>): Promise<void> {\n    this.state = 'load';\n    const timeStamp = now();\n    const count = Object.values(this.models).filter((model) => model).length;\n    if (userConfig) this.config = mergeDeep(this.config, userConfig) as Config;\n\n    if (this.env.initial) { // print version info on first run and check for correct backend setup\n      if (!await backend.check(this, false)) log('error: backend check failed');\n      await tf.ready();\n      if (this.env.browser) {\n        if (this.config.debug) log('configuration:', this.config);\n        if (this.config.debug) log('tf flags:', this.tf.ENV.flags);\n      }\n    }\n\n    await models.load(this); // actually loads models\n    if (this.env.initial && this.config.debug) log('tf engine state:', this.tf.engine().state.numBytes, 'bytes', this.tf.engine().state.numTensors, 'tensors'); // print memory stats on first run\n    this.env.initial = false;\n\n    const loaded = Object.values(this.models).filter((model) => model).length;\n    if (loaded !== count) { // number of loaded models changed\n      models.validate(this); // validate kernel ops used by model against current backend\n      this.emit('load');\n    }\n\n    const current = Math.trunc(now() - timeStamp);\n    if (current > (this.performance.loadModels || 0)) this.performance.loadModels = this.env.perfadd ? (this.performance.loadModels || 0) + current : current;\n  }\n\n  /** emit event */\n  emit = (event: string) => {\n    if (this.events?.dispatchEvent) this.events.dispatchEvent(new Event(event));\n  };\n\n  /** Runs interpolation using last known result and returns smoothened result\n   * Interpolation is based on time since last known result so can be called independently\n   *\n   * @param result - {@link Result} optional use specific result set to run interpolation on\n   * @returns result - {@link Result}\n   */\n  next(result: Result = this.result): Result {\n    return interpolate.calc(result, this.config);\n  }\n\n  /** get model loading/loaded stats */\n  getModelStats(): ModelStats { return models.getModelStats(this); }\n\n  /** Warmup method pre-initializes all configured models for faster inference\n   * - can take significant time on startup\n   * - only used for `webgl` and `humangl` backends\n   * @param userConfig - {@link Config}\n   * @returns result - {@link Result}\n  */\n  async warmup(userConfig?: Partial<Config>) {\n    const t0 = now();\n    const res = await warmups.warmup(this, userConfig);\n    const t1 = now();\n    this.performance.warmup = Math.trunc(t1 - t0);\n    return res;\n  }\n\n  /** Run detect with tensorflow profiling\n   * - result object will contain total exeuction time information for top-20 kernels\n   * - actual detection object can be accessed via `human.result`\n  */\n  async profile(input: Input, userConfig?: Partial<Config>): Promise<{ kernel: string, time: number, perc: number }[]> {\n    const profile = await this.tf.profile(() => this.detect(input, userConfig));\n    const kernels: Record<string, number> = {};\n    let total = 0;\n    for (const kernel of profile.kernels) { // sum kernel time values per kernel\n      if (kernels[kernel.name]) kernels[kernel.name] += kernel.kernelTimeMs;\n      else kernels[kernel.name] = kernel.kernelTimeMs;\n      total += kernel.kernelTimeMs;\n    }\n    const kernelArr: { kernel: string, time: number, perc: number }[] = [];\n    Object.entries(kernels).forEach((key) => kernelArr.push({ kernel: key[0], time: key[1] as unknown as number, perc: 0 })); // convert to array\n    for (const kernel of kernelArr) {\n      kernel.perc = Math.round(1000 * kernel.time / total) / 1000;\n      kernel.time = Math.round(1000 * kernel.time) / 1000;\n    }\n    kernelArr.sort((a, b) => b.time - a.time); // sort\n    kernelArr.length = 20; // crop\n    return kernelArr;\n  }\n\n  /** Main detection method\n   * - Analyze configuration: {@link Config}\n   * - Pre-process input: {@link Input}\n   * - Run inference for all configured models\n   * - Process and return result: {@link Result}\n   *\n   * @param input - {@link Input}\n   * @param userConfig - {@link Config}\n   * @returns result - {@link Result}\n  */\n  async detect(input: Input, userConfig?: Partial<Config>): Promise<Result> {\n    // detection happens inside a promise\n    this.state = 'detect';\n    return new Promise(async (resolve) => {\n      this.state = 'config';\n      let timeStamp;\n\n      // update configuration\n      this.config = mergeDeep(this.config, userConfig) as Config;\n\n      // sanity checks\n      this.state = 'check';\n      const error = this.#sanity(input);\n      if (error) {\n        log(error, input);\n        this.emit('error');\n        resolve({ face: [], body: [], hand: [], gesture: [], object: [], performance: this.performance, timestamp: now(), persons: [], error });\n      }\n\n      const timeStart = now();\n\n      // load models if enabled\n      await this.load();\n\n      timeStamp = now();\n      this.state = 'image';\n      const img = await image.process(input, this.config) as { canvas: AnyCanvas, tensor: Tensor };\n      this.process = img;\n      this.performance.inputProcess = this.env.perfadd ? (this.performance.inputProcess || 0) + Math.trunc(now() - timeStamp) : Math.trunc(now() - timeStamp);\n      this.analyze('Get Image:');\n\n      if (!img.tensor) {\n        if (this.config.debug) log('could not convert input to tensor');\n        this.emit('error');\n        resolve({ face: [], body: [], hand: [], gesture: [], object: [], performance: this.performance, timestamp: now(), persons: [], error: 'could not convert input to tensor' });\n        return;\n      }\n      this.emit('image');\n\n      timeStamp = now();\n      this.config.skipAllowed = await image.skip(this.config, img.tensor);\n      if (!this.performance.totalFrames) this.performance.totalFrames = 0;\n      if (!this.performance.cachedFrames) this.performance.cachedFrames = 0;\n      (this.performance.totalFrames)++;\n      if (this.config.skipAllowed) this.performance.cachedFrames++;\n      this.performance.cacheCheck = this.env.perfadd ? (this.performance.cacheCheck || 0) + Math.trunc(now() - timeStamp) : Math.trunc(now() - timeStamp);\n      this.analyze('Check Changed:');\n\n      // prepare where to store model results\n      // keep them with weak typing as it can be promise or not\n      let faceRes: FaceResult[] | Promise<FaceResult[]> | never[] = [];\n      let bodyRes: BodyResult[] | Promise<BodyResult[]> | never[] = [];\n      let handRes: HandResult[] | Promise<HandResult[]> | never[] = [];\n      let objectRes: ObjectResult[] | Promise<ObjectResult[]> | never[] = [];\n\n      // run face detection followed by all models that rely on face bounding box: face mesh, age, gender, emotion\n      this.state = 'detect:face';\n      if (this.config.async) {\n        faceRes = this.config.face.enabled ? face.detectFace(this, img.tensor) : [];\n        if (this.performance.face) delete this.performance.face;\n      } else {\n        timeStamp = now();\n        faceRes = this.config.face.enabled ? await face.detectFace(this, img.tensor) : [];\n        this.performance.face = this.env.perfadd ? (this.performance.face || 0) + Math.trunc(now() - timeStamp) : Math.trunc(now() - timeStamp);\n      }\n\n      if (this.config.async && (this.config.body.maxDetected === -1 || this.config.hand.maxDetected === -1)) faceRes = await faceRes; // need face result for auto-detect number of hands or bodies\n\n      // run body: can be posenet, blazepose, efficientpose, movenet\n      this.analyze('Start Body:');\n      this.state = 'detect:body';\n      const bodyConfig = this.config.body.maxDetected === -1 ? mergeDeep(this.config, { body: { maxDetected: this.config.face.enabled ? 1 * (faceRes as FaceResult[]).length : 1 } }) : this.config; // autodetect number of bodies\n      if (this.config.async) {\n        if (this.config.body.modelPath?.includes('posenet')) bodyRes = this.config.body.enabled ? posenet.predict(img.tensor, bodyConfig) : [];\n        else if (this.config.body.modelPath?.includes('blazepose')) bodyRes = this.config.body.enabled ? blazepose.predict(img.tensor, bodyConfig) : [];\n        else if (this.config.body.modelPath?.includes('efficientpose')) bodyRes = this.config.body.enabled ? efficientpose.predict(img.tensor, bodyConfig) : [];\n        else if (this.config.body.modelPath?.includes('movenet')) bodyRes = this.config.body.enabled ? movenet.predict(img.tensor, bodyConfig) : [];\n        if (this.performance.body) delete this.performance.body;\n      } else {\n        timeStamp = now();\n        if (this.config.body.modelPath?.includes('posenet')) bodyRes = this.config.body.enabled ? await posenet.predict(img.tensor, bodyConfig) : [];\n        else if (this.config.body.modelPath?.includes('blazepose')) bodyRes = this.config.body.enabled ? await blazepose.predict(img.tensor, bodyConfig) : [];\n        else if (this.config.body.modelPath?.includes('efficientpose')) bodyRes = this.config.body.enabled ? await efficientpose.predict(img.tensor, bodyConfig) : [];\n        else if (this.config.body.modelPath?.includes('movenet')) bodyRes = this.config.body.enabled ? await movenet.predict(img.tensor, bodyConfig) : [];\n        this.performance.body = this.env.perfadd ? (this.performance.body || 0) + Math.trunc(now() - timeStamp) : Math.trunc(now() - timeStamp);\n      }\n      this.analyze('End Body:');\n\n      // run handpose\n      this.analyze('Start Hand:');\n      this.state = 'detect:hand';\n      const handConfig = this.config.hand.maxDetected === -1 ? mergeDeep(this.config, { hand: { maxDetected: this.config.face.enabled ? 2 * (faceRes as FaceResult[]).length : 1 } }) : this.config; // autodetect number of hands\n      if (this.config.async) {\n        if (this.config.hand.detector?.modelPath?.includes('handdetect')) handRes = this.config.hand.enabled ? handpose.predict(img.tensor, handConfig) : [];\n        else if (this.config.hand.detector?.modelPath?.includes('handtrack')) handRes = this.config.hand.enabled ? handtrack.predict(img.tensor, handConfig) : [];\n        if (this.performance.hand) delete this.performance.hand;\n      } else {\n        timeStamp = now();\n        if (this.config.hand.detector?.modelPath?.includes('handdetect')) handRes = this.config.hand.enabled ? await handpose.predict(img.tensor, handConfig) : [];\n        else if (this.config.hand.detector?.modelPath?.includes('handtrack')) handRes = this.config.hand.enabled ? await handtrack.predict(img.tensor, handConfig) : [];\n        this.performance.hand = this.env.perfadd ? (this.performance.hand || 0) + Math.trunc(now() - timeStamp) : Math.trunc(now() - timeStamp);\n      }\n      this.analyze('End Hand:');\n\n      // run object detection\n      this.analyze('Start Object:');\n      this.state = 'detect:object';\n      if (this.config.async) {\n        if (this.config.object.modelPath?.includes('nanodet')) objectRes = this.config.object.enabled ? nanodet.predict(img.tensor, this.config) : [];\n        else if (this.config.object.modelPath?.includes('centernet')) objectRes = this.config.object.enabled ? centernet.predict(img.tensor, this.config) : [];\n        if (this.performance.object) delete this.performance.object;\n      } else {\n        timeStamp = now();\n        if (this.config.object.modelPath?.includes('nanodet')) objectRes = this.config.object.enabled ? await nanodet.predict(img.tensor, this.config) : [];\n        else if (this.config.object.modelPath?.includes('centernet')) objectRes = this.config.object.enabled ? await centernet.predict(img.tensor, this.config) : [];\n        this.performance.object = this.env.perfadd ? (this.performance.object || 0) + Math.trunc(now() - timeStamp) : Math.trunc(now() - timeStamp);\n      }\n      this.analyze('End Object:');\n\n      // if async wait for results\n      this.state = 'detect:await';\n      if (this.config.async) [faceRes, bodyRes, handRes, objectRes] = await Promise.all([faceRes, bodyRes, handRes, objectRes]);\n\n      // run gesture analysis last\n      this.state = 'detect:gesture';\n      let gestureRes: GestureResult[] = [];\n      if (this.config.gesture.enabled) {\n        timeStamp = now();\n        gestureRes = [...gesture.face(faceRes as FaceResult[]), ...gesture.body(bodyRes as BodyResult[]), ...gesture.hand(handRes as HandResult[]), ...gesture.iris(faceRes as FaceResult[])];\n        if (!this.config.async) this.performance.gesture = this.env.perfadd ? (this.performance.gesture || 0) + Math.trunc(now() - timeStamp) : Math.trunc(now() - timeStamp);\n        else if (this.performance.gesture) delete this.performance.gesture;\n      }\n\n      this.performance.total = this.env.perfadd ? (this.performance.total || 0) + Math.trunc(now() - timeStart) : Math.trunc(now() - timeStart);\n      const shape = this.process.tensor?.shape || [];\n      this.result = {\n        face: faceRes as FaceResult[],\n        body: bodyRes as BodyResult[],\n        hand: handRes as HandResult[],\n        gesture: gestureRes,\n        object: objectRes as ObjectResult[],\n        performance: this.performance,\n        canvas: this.process.canvas,\n        timestamp: Date.now(),\n        error: null,\n        get persons() { return persons.join(faceRes as FaceResult[], bodyRes as BodyResult[], handRes as HandResult[], gestureRes, shape); },\n      };\n\n      // finally dispose input tensor\n      tf.dispose(img.tensor);\n\n      // log('Result:', result);\n      this.emit('detect');\n      this.state = 'idle';\n      resolve(this.result);\n    });\n  }\n}\n\n/** Class Human as default export */\n/* eslint no-restricted-exports: [\"off\", { \"restrictedNamedExports\": [\"default\"] }] */\nexport { Human as default, match, draw, models };\n"],
  "mappings": "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iB,EACrC,CAAC,gBAAkB,eAAgB,EACnC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,eAAiB,gBAAiB,EACnC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,eAAiB,gBAAiB,EACnC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,eAAiB,gBAAiB,EACnC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,eAAiB,eAAgB,EAClC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,eAAiB,gBAAiB,EACnC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,eAAgB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,cAAgB,gBAAiB,EAClC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,gBAAkB,gBAAiB,EACpC,CAAC,eAAiB,gBAAiB,EACnC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,EACrC,CAAC,iBAAmB,gBAAiB,CACvC,EAEaC,GAAmB,CAC9B,IAAK,GAAI,IAAK,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,EACtJ,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAClJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GACrJ,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,EAAG,IAC7I,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAClJ,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,IAC/I,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GACrJ,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GACpJ,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GACjJ,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,IAC/I,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,EAAG,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IACnJ,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IACnJ,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAC9I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GACtJ,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,GAClJ,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,EAAG,EAAG,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GACnJ,IAAK,IAAK,IAAK,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GACrJ,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IACpJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,EAAG,IAClJ,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/I,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/I,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACnJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,IACnJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IACnJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAChJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAC/I,IAAK,EAAG,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAChJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAClJ,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7I,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,EAAG,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GACnJ,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GACpJ,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAC/I,IAAK,GAAI,IAAK,GAAI,IAAK,EAAG,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAClJ,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAClJ,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAChJ,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IACpJ,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GACrJ,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,GACpJ,IAAK,GAAI,IAAK,IAAK,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAC/I,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAC9I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GACpJ,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GACrJ,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IACpJ,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,EAAG,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,EACpJ,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAC9I,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,EAAG,GAAI,IAClJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAC/I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAC9I,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAChJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAChJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAC9I,IAAK,GAAI,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAChJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,IACpJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAwB1I,IAAMC,GAAkB,CACjB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/E,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAC1C,IAAK,EAAG,IAAK,EAAG,GAAI,GAAI,EAAG,IAAK,IAChC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtD,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAChD,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAC7C,EAEaC,GAAkB,CAAC,GAAI,IAAK,IAAK,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAG,EAEvKC,GAAiB,CAAC,GAAI,IAAK,IAAK,IAAK,EAAG,GAAI,GAAG,EAE/CC,GAAOH,GAAM,IAAKI,GAAMC,GAAMD,EAAE,EAEhCE,GAAOL,GAAM,IAAKG,GAAMC,GAAMD,EAAE,EAEhCG,GAAML,GAAK,IAAKE,GAAMC,GAAMD,EAAE,EAO3C,SAASI,GAAqBC,EAAwB,CACpD,IAAMC,EAAUD,EAAY,IAAKE,GAAeA,EAAW,EAAE,EAC7D,OAAAD,EAAQ,KAAKD,EAAYA,EAAY,OAAS,GAAG,EAAE,EAC5CC,CACT,CAEO,IAAME,GAAuB,CAClC,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,EAAG,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAC3N,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAC7N,EAEaC,GAA0B,CAAC,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EAEzNC,GAA8B,CAAC,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EAE7HC,GAA2B,CAAC,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EAE1EC,GAA2B,CAAC,CAAC,GAAI,CAAC,EAAG,CAAC,EAAG,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EAEpNC,GAA+B,CAAC,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,GAAG,CAAC,EAEjHC,GAA4B,CAAC,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EAE3EC,GAA8B,CACzC,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EACpE,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EACrE,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EACrE,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EACrE,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EACjE,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,CAChE,EAEaC,GAAmB,CAC9B,KAAMZ,GAAqBI,EAAS,EACpC,QAASJ,GAAqBK,EAAY,EAC1C,YAAaL,GAAqBM,EAAgB,EAClD,SAAUN,GAAqBO,EAAa,EAC5C,SAAUP,GAAqBQ,EAAa,EAC5C,aAAcR,GAAqBS,EAAiB,EACpD,UAAWT,GAAqBU,EAAc,EAC9C,SAAUV,GAAqBW,EAAgB,CACjD,ECrsBO,IAAME,GAAcC,GAA0B,CAAC,KAAK,IAAIA,EAAI,SAAS,GAAKA,EAAI,WAAW,EAAE,EAAG,KAAK,IAAIA,EAAI,SAAS,GAAKA,EAAI,WAAW,EAAE,CAAC,EAErIC,GAAgBD,GAAkC,CAACA,EAAI,WAAW,IAAMA,EAAI,SAAS,GAAKA,EAAI,WAAW,IAAM,EAAGA,EAAI,WAAW,IAAMA,EAAI,SAAS,GAAKA,EAAI,WAAW,IAAM,EAAG,CAAC,EAElLE,GAAW,CAACF,EAAKG,IAAgBH,EAAM,CAClD,KAAK,MAAM,KAAK,IAAI,EAAGA,EAAI,WAAW,EAAE,CAAC,EACzC,KAAK,MAAM,KAAK,IAAI,EAAGA,EAAI,WAAW,EAAE,CAAC,EACzC,KAAK,MAAM,KAAK,IAAKG,EAAM,MAAM,IAAM,EAAIH,EAAI,SAAS,EAAE,EAAI,KAAK,IAAI,EAAGA,EAAI,WAAW,EAAE,CAAC,EAC5F,KAAK,MAAM,KAAK,IAAKG,EAAM,MAAM,IAAM,EAAIH,EAAI,SAAS,EAAE,EAAI,KAAK,IAAI,EAAGA,EAAI,WAAW,EAAE,CAAC,CAC9F,EAAI,CAAC,EAAG,EAAG,EAAG,CAAC,EAEFI,GAAY,CAACJ,EAAKG,IAAgBH,EAAM,CACnDA,EAAI,WAAW,IAAMG,EAAM,MAAM,IAAM,GACvCH,EAAI,WAAW,IAAMG,EAAM,MAAM,IAAM,IACtCH,EAAI,SAAS,GAAKA,EAAI,WAAW,KAAOG,EAAM,MAAM,IAAM,IAC1DH,EAAI,SAAS,GAAKA,EAAI,WAAW,KAAOG,EAAM,MAAM,IAAM,EAC7D,EAAI,CAAC,EAAG,EAAG,EAAG,CAAC,EAEFE,GAAsB,CAACL,EAAKM,IAAW,CAClD,IAAMC,EAAoB,CAACP,EAAI,WAAW,GAAKM,EAAO,GAAIN,EAAI,WAAW,GAAKM,EAAO,EAAE,EACjFE,EAAkB,CAACR,EAAI,SAAS,GAAKM,EAAO,GAAIN,EAAI,SAAS,GAAKM,EAAO,EAAE,EACjF,MAAO,CAAE,WAAAC,EAAY,SAAAC,EAAU,UAAWR,EAAI,UAAW,WAAYA,EAAI,UAAW,CACtF,EAEaS,GAAe,CAACT,EAAKU,EAAOC,IAAa,CACpD,IAAMC,EAAIF,EAAM,MAAM,GAChBG,EAAIH,EAAM,MAAM,GAChBI,EAAS,CAACd,EAAI,WAAW,GAAKY,EAAGZ,EAAI,WAAW,GAAKa,EAAGb,EAAI,SAAS,GAAKY,EAAGZ,EAAI,SAAS,GAAKa,CAAC,EAChGE,EAAU,QAAM,cAAcL,EAAO,CAACI,CAAM,EAAG,CAAC,CAAC,EAAGH,CAAQ,EAC5DK,EAAU,MAAID,EAAME,EAAU,KAAK,EACzC,OAAG,UAAQF,CAAI,EACRC,CACT,EAEaE,GAAa,CAAClB,EAAKM,IAAW,CACzC,IAAMa,EAASlB,GAAaD,CAAG,EACzBoB,EAAOrB,GAAWC,CAAG,EACrBqB,EAA6B,CAACf,EAASc,EAAK,GAAK,EAAGd,EAASc,EAAK,GAAK,CAAC,EAC9E,MAAO,CAAE,WAAY,CAACD,EAAO,GAAKE,EAAS,GAAIF,EAAO,GAAKE,EAAS,EAAE,EAAY,SAAU,CAACF,EAAO,GAAKE,EAAS,GAAIF,EAAO,GAAKE,EAAS,EAAE,EAAY,UAAWrB,EAAI,UAAW,WAAYA,EAAI,UAAW,CAChN,EAEasB,GAAetB,GAAQ,CAClC,IAAMuB,EAAUtB,GAAaD,CAAG,EAC1BoB,EAAOrB,GAAWC,CAAG,EACrBqB,EAAW,KAAK,IAAI,GAAGD,CAAI,EAAI,EACrC,MAAO,CAAE,WAAY,CAAC,KAAK,MAAMG,EAAQ,GAAKF,CAAQ,EAAG,KAAK,MAAME,EAAQ,GAAKF,CAAQ,CAAC,EAAY,SAAU,CAAC,KAAK,MAAME,EAAQ,GAAKF,CAAQ,EAAG,KAAK,MAAME,EAAQ,GAAKF,CAAQ,CAAC,EAAY,UAAWrB,EAAI,UAAW,WAAYA,EAAI,UAAW,CACxP,EAEawB,GAAiCC,GAAc,CAC1D,IAAMC,EAAID,EAAU,IAAKE,GAAMA,EAAE,EAAE,EAC7BC,EAAIH,EAAU,IAAKE,GAAMA,EAAE,EAAE,EACnC,MAAO,CAAE,WAAY,CAAC,KAAK,IAAI,GAAGD,CAAC,EAAG,KAAK,IAAI,GAAGE,CAAC,CAAC,EAAY,SAAU,CAAC,KAAK,IAAI,GAAGF,CAAC,EAAG,KAAK,IAAI,GAAGE,CAAC,CAAC,EAAY,UAAAH,CAAU,CACjI,EAEaI,GAAsB,CAAC,CAAC,EAAG,EAAG,CAAC,EAAG,CAAC,EAAG,EAAG,CAAC,EAAG,CAAC,EAAG,EAAG,CAAC,CAAC,EAEtDC,GAAoBC,GAAkBA,EAAQ,EAAI,KAAK,GAAK,KAAK,OAAOA,EAAQ,KAAK,KAAO,EAAI,KAAK,GAAG,EAExGC,GAAkB,CAACC,EAAQC,IAAWJ,GAAiB,KAAK,GAAK,EAAI,KAAK,MAAM,EAAEI,EAAO,GAAKD,EAAO,IAAKC,EAAO,GAAKD,EAAO,EAAE,CAAC,EAItI,IAAME,GAAyB,CAACC,EAAGC,IAAM,CAAC,CAAC,EAAG,EAAGD,CAAC,EAAG,CAAC,EAAG,EAAGC,CAAC,EAAG,CAAC,EAAG,EAAG,CAAC,CAAC,EAEnEC,GAAM,CAACC,EAAcC,IAAiB,CACjD,IAAIC,EAAU,EACd,QAASC,EAAI,EAAGA,EAAIH,EAAG,OAAQG,IAAKD,GAAWF,EAAGG,GAAKF,EAAGE,GAC1D,OAAOD,CACT,EAEaE,GAAqB,CAACC,EAAKC,IAAgB,CACtD,IAAMC,EAAmB,CAAC,EAC1B,QAASJ,EAAI,EAAGA,EAAIE,EAAI,OAAQF,IAAKI,EAAO,KAAKF,EAAIF,GAAGG,EAAY,EACpE,OAAOC,CACT,EAEaC,GAA4B,CAACC,EAAMC,IAAS,CACvD,IAAMR,EAAsB,CAAC,EACvBS,EAAOF,EAAK,OAClB,QAASG,EAAM,EAAGA,EAAMD,EAAMC,IAAO,CACnCV,EAAQ,KAAK,CAAC,CAAC,EACf,QAASW,EAAM,EAAGA,EAAMF,EAAME,IAAOX,EAAQU,GAAK,KAAKb,GAAIU,EAAKG,GAAMR,GAAmBM,EAAMG,CAAG,CAAC,CAAC,CACtG,CACA,OAAOX,CACT,EAEaY,GAAsB,CAACC,EAAUC,IAAW,CACvD,IAAMC,EAAO,KAAK,IAAIF,CAAQ,EACxBG,EAAO,KAAK,IAAIH,CAAQ,EACxBI,EAAiB,CAAC,CAACF,EAAM,CAACC,EAAM,CAAC,EAAG,CAACA,EAAMD,EAAM,CAAC,EAAG,CAAC,EAAG,EAAG,CAAC,CAAC,EAC9DG,EAAoBxB,GAAuBoB,EAAO,GAAIA,EAAO,EAAE,EAC/DK,EAA2Bb,GAA0BY,EAAmBD,CAAc,EACtFG,EAA4B1B,GAAuB,CAACoB,EAAO,GAAI,CAACA,EAAO,EAAE,EAC/E,OAAOR,GAA0Ba,EAA0BC,CAAyB,CACtF,EAEaC,GAAyBC,GAAW,CAC/C,IAAMC,EAAoB,CAAC,CAACD,EAAO,GAAG,GAAIA,EAAO,GAAG,EAAE,EAAG,CAACA,EAAO,GAAG,GAAIA,EAAO,GAAG,EAAE,CAAC,EAC/EE,EAAuB,CAACF,EAAO,GAAG,GAAIA,EAAO,GAAG,EAAE,EAClDG,EAAsB,CAAC,CAAC5B,GAAI0B,EAAkB,GAAIC,CAAoB,EAAG,CAAC3B,GAAI0B,EAAkB,GAAIC,CAAoB,CAAC,EAC/H,MAAO,CAACD,EAAkB,GAAG,OAAOE,EAAoB,EAAE,EAAGF,EAAkB,GAAG,OAAOE,EAAoB,EAAE,EAAG,CAAC,EAAG,EAAG,CAAC,CAAC,CAC7H,EAEaC,GAAc,CAACC,EAAuBV,IAAmB,CAACpB,GAAI8B,EAAuBV,EAAe,EAAE,EAAGpB,GAAI8B,EAAuBV,EAAe,EAAE,CAAC,EAI5J,SAASW,GAAgBC,EAAmB,CACjD,IAAMC,EAAOD,IAAc,IACvB,CAAE,QAAS,CAAC,CAAC,EAAG,QAAS,CAAC,CAAC,CAAE,EAC7B,CAAE,QAAS,CAACA,EAAY,GAAIA,EAAY,CAAC,EAAG,QAAS,CAAC,EAAG,CAAC,CAAE,EAC1DE,EAA8B,CAAC,EACrC,QAASC,EAAI,EAAGA,EAAIF,EAAK,QAAQ,OAAQE,IAAK,CAC5C,IAAMC,EAASH,EAAK,QAAQE,GACtBE,EAAW,KAAK,OAAOL,EAAYI,EAAS,GAAKA,CAAM,EACvDE,EAAW,KAAK,OAAON,EAAYI,EAAS,GAAKA,CAAM,EACvDG,EAAaN,EAAK,QAAQE,GAChC,QAASK,EAAQ,EAAGA,EAAQH,EAAUG,IAAS,CAC7C,IAAMC,EAAUL,GAAUI,EAAQ,IAClC,QAASE,EAAQ,EAAGA,EAAQJ,EAAUI,IAAS,CAC7C,IAAMC,EAAUP,GAAUM,EAAQ,IAClC,QAASE,EAAI,EAAGA,EAAIL,EAAYK,IAAKV,EAAQ,KAAK,CAACS,EAASF,CAAO,CAAC,CACtE,CACF,CACF,CACA,OAAOP,CACT,CAEO,SAASW,GAAmBC,EAAWC,EAAKC,EAAOC,EAAgBjB,EAAW,CACnF,IAAMkB,EAAUC,GAAWJ,CAAG,EACxBK,EAAeN,EAAU,IAAKO,GAAW,CAC5CH,EAAQ,GAAKlB,GAAcqB,EAAM,GAAMrB,EAAY,GACnDkB,EAAQ,GAAKlB,GAAcqB,EAAM,GAAMrB,EAAY,GACnDqB,EAAM,IAAM,CACf,CAAE,EACIC,EAAaN,GAAUA,IAAU,GAAO,KAAK,IAAIA,CAAK,EAAI,GAC1DO,EAAuBD,EAAaE,GAAoBR,EAAO,CAAC,EAAG,CAAC,CAAC,EAAIS,GACzEC,EAAgBJ,EAAaF,EAAa,IAAKC,GAAW,CAAC,GAAGM,GAAYN,EAAOE,CAAoB,EAAGF,EAAM,EAAE,CAAE,EAAID,EACtHQ,EAAwBN,EAAaO,GAAsBZ,CAAc,EAAIQ,GAC7EK,EAAYC,GAAahB,CAAG,EAC5BiB,EAAU,CAACC,GAAIH,EAAWF,EAAsB,EAAE,EAAGK,GAAIH,EAAWF,EAAsB,EAAE,CAAC,EACnG,OAAOF,EAAc,IAAKL,GAAW,CACnC,KAAK,MAAMA,EAAM,GAAKW,EAAQ,EAAE,EAChC,KAAK,MAAMX,EAAM,GAAKW,EAAQ,EAAE,EAChC,KAAK,MAAMX,EAAM,IAAM,CAAC,CAC1B,CAAE,CACJ,CAEO,SAASa,GAAoBC,EAAQpB,EAAKqB,EAAOpC,EAAW,CACjE,IAAMqC,EAAgBtB,EAAI,UAAU,QAAiBuB,GAAc,MACxDA,GAAc,aACdC,GAAmB,aAC1BvB,EAAQ,EACRC,EAAiBQ,GACjBe,EAEJ,GAAIL,GAAUM,EAAI,QAAQ,SAAS,kBAAkB,EAGnD,GAFAzB,EAAQ0B,GAAgB3B,EAAI,UAAUsB,EAAa,IAAKtB,EAAI,UAAUsB,EAAa,GAAG,EACnErB,GAAUA,IAAU,GAAO,KAAK,IAAIA,CAAK,EAAI,GAChD,CACd,IAAM2B,EAAgBZ,GAAahB,CAAG,EAChC6B,EAAmB,CAACD,EAAO,GAAKP,EAAM,MAAM,GAAIO,EAAO,GAAKP,EAAM,MAAM,EAAE,EAC1ES,EAAa,QAAM,iBAAiBT,EAAOpB,EAAO,EAAG4B,CAAS,EACpE3B,EAAiBO,GAAoB,CAACR,EAAO2B,CAAM,EACnDH,EAAOM,GAAa/B,EAAK8B,EAAS,CAAC7C,EAAWA,CAAS,CAAC,EACrD,UAAQ6C,CAAO,CACpB,MACEL,EAAOM,GAAa/B,EAAKqB,EAAO,CAACpC,EAAWA,CAAS,CAAC,OAGxDwC,EAAOM,GAAa/B,EAAKqB,EAAO,CAACpC,EAAWA,CAAS,CAAC,EAExD,MAAO,CAACgB,EAAOC,EAAgBuB,CAAI,CACrC,CAEO,IAAMO,GAAkBC,GAAS,CACtC,IAAMC,EAAID,EAAK,IAAKE,GAAMA,EAAE,EAAE,EACxBC,EAAIH,EAAK,IAAKE,GAAMA,EAAE,EAAE,EAO9B,MAAO,CAAC,KAAK,IAAI,GAAGD,CAAC,GAAK,KAAK,IAAI,GAAGA,CAAC,EAAI,KAAK,IAAI,GAAGA,CAAC,GAAK,EAAG,KAAK,IAAI,GAAGE,CAAC,GAAK,KAAK,IAAI,GAAGA,CAAC,EAAI,KAAK,IAAI,GAAGA,CAAC,GAAK,CAAC,CACxH,EAEaC,GAAmB,CAACJ,EAAMK,IAAgB,CACrD,IAAMV,EAASI,GAAeC,CAAI,EAC5B9B,EAAUC,GAAWkC,CAAW,EAKtC,MAJsB,CACpB,WAAY,CAACV,EAAO,GAAKzB,EAAQ,GAAK,EAAGyB,EAAO,GAAKzB,EAAQ,GAAK,CAAC,EACnE,SAAU,CAACyB,EAAO,GAAKzB,EAAQ,GAAK,EAAGyB,EAAO,GAAKzB,EAAQ,GAAK,CAAC,CACnE,CAEF,ECnMA,IAAMoC,GAAiB,EACjBC,GAAqB,IACvBC,GACAC,GAAyB,KACzBC,GAAY,EACZC,GAA4B,KAInBC,GAAO,IAAMF,GAE1B,eAAsBG,GAAKC,EAAqC,CA1BhE,IAAAC,EA2BE,OAAIC,EAAI,UAASR,GAAQ,MACpBA,GACIM,EAAO,OAAOG,EAAI,gBAAiBT,GAAM,QAAW,EADjDA,GAAQ,MAAMU,GAAUH,EAAAD,EAAO,KAAK,WAAZ,YAAAC,EAAsB,SAAS,EAEnEL,GAAaF,GAAM,UAAeA,GAAM,OAAO,GAAG,MAASA,GAAM,OAAO,GAAG,MAAM,GAAK,IACtFG,GAAgB,SAAOD,GAAW,OAAO,EACzCD,GAAa,WAAcU,GAAgBT,EAAS,CAAC,EAC9CF,EACT,CAEA,SAASY,GAAYC,EAAoB,CACvC,IAAM,EAA4B,CAAC,EACnC,EAAE,UAAe,QAAMA,EAAY,CAAC,EAAG,CAAC,EAAG,CAAC,GAAI,CAAC,CAAC,EAClD,EAAE,QAAa,MAAI,EAAE,UAAWZ,EAAO,EACvC,EAAE,SAAc,QAAMY,EAAY,CAAC,EAAG,CAAC,EAAG,CAAC,GAAI,CAAC,CAAC,EACjD,EAAE,mBAAwB,MAAI,EAAE,SAAUV,EAAU,EACpD,EAAE,kBAAuB,MAAI,EAAE,QAASA,EAAU,EAClD,EAAE,YAAiB,MAAI,EAAE,mBAAoBW,EAAU,GAAG,EAC1D,EAAE,OAAY,MAAI,EAAE,kBAAmB,EAAE,WAAW,EACpD,EAAE,KAAU,MAAI,EAAE,kBAAmB,EAAE,WAAW,EAClD,EAAE,gBAAqB,MAAI,EAAE,OAAQX,EAAU,EAC/C,EAAE,cAAmB,MAAI,EAAE,KAAMA,EAAU,EAC3C,IAAMY,EAAW,WAAS,CAAC,EAAE,gBAAiB,EAAE,aAAa,EAAG,CAAC,EACjE,cAAO,KAAK,CAAC,EAAE,QAASC,GAAc,UAAQ,EAAEA,EAAO,CAAC,EACjDD,CACT,CAEA,eAAsBE,GAASC,EAAoBZ,EAAgB,CArDnE,IAAAC,EAAAY,EAAAC,EAAAC,EAuDE,GAAK,CAACH,GAAgBA,EAAW,oBAA2BA,EAAW,MAAM,SAAW,GAAOA,EAAW,MAAM,GAAK,GAAOA,EAAW,MAAM,GAAK,EAAI,MAAO,CAAC,EAC9J,IAAMI,EAA4B,CAAC,EACnCA,EAAE,QAAa,QAAM,eAAeJ,EAAY,CAAChB,GAAWA,EAAS,CAAC,EACtEoB,EAAE,IAAS,MAAIA,EAAE,QAASR,EAAU,KAAK,EACzCQ,EAAE,WAAgB,MAAIA,EAAE,IAAKR,EAAU,IAAI,EAC3C,IAAMS,EAAMvB,IAAA,YAAAA,GAAO,QAAQsB,EAAE,YAC7B,GAAI,MAAM,QAAQC,CAAG,GAAKA,EAAI,OAAS,EAAG,CACxC,IAAMC,EAASD,EAAI,KAAK,CAACE,EAAGC,IAAMD,EAAE,KAAOC,EAAE,IAAI,EACjDJ,EAAE,UAAe,SAAO,CAACE,EAAO,GAAIA,EAAO,EAAE,EAAG,CAAC,EACjDF,EAAE,UAAe,SAAO,CAACE,EAAO,GAAIA,EAAO,EAAE,EAAG,CAAC,EACjDF,EAAE,OAAY,SAAO,CAACA,EAAE,UAAWA,EAAE,SAAS,EAAG,CAAC,EAClDA,EAAE,MAAW,UAAQA,EAAE,OAAQ,CAAC,CAClC,MAAW,MAAM,QAAQC,CAAG,EAC1BD,EAAE,MAAW,UAAQC,EAAI,EAAE,EAE3BD,EAAE,MAAW,UAAQC,CAAG,EAEvB,UAAQA,CAAG,EACdD,EAAE,MAAQV,GAAYU,EAAE,KAAK,EAC7BA,EAAE,OAAY,QAAMA,EAAE,MAAO,CAAC,EAAG,CAAC,EAAG,CAAC,GAAI,CAAC,CAAC,EAC5CA,EAAE,QAAa,UAAQA,EAAE,MAAM,EAC/BA,EAAE,OAAY,UAAQA,EAAE,OAAO,EAC/BA,EAAE,IAAM,MAAS,QAAM,uBAAuBA,EAAE,MAAOA,EAAE,SAASf,EAAAD,EAAO,KAAK,WAAZ,YAAAC,EAAsB,cAAe,IAAKY,EAAAb,EAAO,KAAK,WAAZ,YAAAa,EAAsB,eAAgB,IAAKC,EAAAd,EAAO,KAAK,WAAZ,YAAAc,EAAsB,gBAAiB,CAAE,EAChM,IAAMO,EAAM,MAAML,EAAE,IAAI,MAAM,EACxBP,EAAqB,CAAC,EACtBa,EAAS,MAAMN,EAAE,OAAO,KAAK,EACnC,QAASO,EAAI,EAAGA,EAAIF,EAAI,OAAQE,IAAK,CACnC,IAAMC,EAAaF,EAAOD,EAAIE,IAC9B,GAAIC,KAAcT,EAAAf,EAAO,KAAK,WAAZ,YAAAe,EAAsB,gBAAiB,GAAI,CAC3D,IAAMK,EAA4B,CAAC,EACnCA,EAAE,KAAU,QAAMJ,EAAE,MAAO,CAACK,EAAIE,GAAI,CAAC,EAAG,CAAC,EAAG,EAAE,CAAC,EAC/CH,EAAE,MAAW,QAAMJ,EAAE,MAAO,CAACK,EAAIE,GAAI/B,GAAiB,CAAC,EAAG,CAAC,EAAG,EAAE,CAAC,EACjE4B,EAAE,QAAa,UAAQA,EAAE,KAAK,EAC9BA,EAAE,UAAe,UAAQA,EAAE,QAAS,CAAC5B,GAAgB,EAAE,CAAC,EACxD,IAAMiC,EAAS,MAAML,EAAE,KAAK,KAAK,EAC3BM,EAAS,CACb,WAAY,CAACD,EAAO,GAAIA,EAAO,EAAE,EACjC,SAAU,CAACA,EAAO,GAAIA,EAAO,EAAE,EAC/B,UAAY,MAAML,EAAE,UAAU,MAAM,EACpC,WAAAI,CACF,EACMG,EAAiBC,GAAoBF,EAAQ,EAAEd,EAAW,MAAM,IAAM,GAAKhB,IAAYgB,EAAW,MAAM,IAAM,GAAKhB,EAAS,CAAC,EAC7HiC,EAAmBC,GAAWH,EAAW3B,EAAO,KAAK,OAAYP,EAAkB,EACnFsC,EAAkBC,GAAYH,CAAW,EAC/CpB,EAAM,KAAKsB,CAAU,EACrB,OAAO,KAAKX,CAAC,EAAE,QAASV,GAAc,UAAQU,EAAEV,EAAO,CAAC,CAC1D,CACF,CACA,cAAO,KAAKM,CAAC,EAAE,QAASN,GAAc,UAAQM,EAAEN,EAAO,CAAC,EACjDD,CACT,CCzGA,IAAAwB,GAAA,GAAAC,GAAAD,GAAA,eAAAE,GAAA,QAAAC,KAEO,IAAMA,GAAgB,CAC3B,OACA,gBACA,UACA,iBACA,iBACA,WACA,kBACA,UACA,WACA,YACA,aACA,eACA,gBACA,YACA,aACA,YACA,aACA,YACA,aACA,YACA,aACA,YACA,aACA,UACA,WACA,WACA,YACA,YACA,aACA,WACA,YACA,WACA,YACA,aACA,UACA,WACA,WACA,YACA,WACF,EAEaD,GAAsC,CACjD,UAAW,CAAC,eAAgB,eAAe,EAC3C,KAAM,CAAC,WAAY,SAAS,EAC5B,MAAO,CAAC,YAAa,YAAY,EACjC,aAAc,CAAC,UAAW,UAAU,EACpC,aAAc,CAAC,WAAY,WAAW,EACtC,SAAU,CAAC,YAAa,WAAY,UAAU,EAC9C,UAAW,CAAC,eAAgB,SAAS,EACrC,aAAc,CAAC,eAAgB,WAAW,EAC1C,aAAc,CAAC,YAAa,WAAW,EACvC,SAAU,CAAC,YAAa,UAAU,EAClC,cAAe,CAAC,WAAY,WAAW,EACvC,cAAe,CAAC,WAAY,WAAW,EACvC,cAAe,CAAC,WAAY,WAAW,EACvC,eAAgB,CAAC,gBAAiB,gBAAgB,EAClD,cAAe,CAAC,WAAY,WAAW,EACvC,cAAe,CAAC,YAAa,YAAY,EACzC,UAAW,CAAC,aAAc,YAAa,WAAW,EAClD,WAAY,CAAC,gBAAiB,UAAU,EACxC,cAAe,CAAC,gBAAiB,YAAY,EAC7C,cAAe,CAAC,aAAc,YAAY,EAC1C,UAAW,CAAC,aAAc,WAAW,EACrC,eAAgB,CAAC,YAAa,YAAY,EAC1C,eAAgB,CAAC,YAAa,YAAY,EAC1C,eAAgB,CAAC,YAAa,YAAY,EAC1C,gBAAiB,CAAC,iBAAkB,iBAAiB,CACvD,EC/DA,IAAME,GAAY,IACdC,GACEC,GAAY,EACZC,GAAU,CAAC,EAAG,GAAI,GAAI,GAAI,EAAE,EAE3B,SAASC,IAAgB,CAC9B,IAAMC,EAAsC,CAAC,EACzCC,EAAU,EACd,KAAOA,EAAUJ,IAAW,CAC1B,IAAIK,EAAc,EACdC,EAAsBF,EAC1B,KAAOE,EAAsBL,GAAQ,QAAUA,GAAQK,KAAyBL,GAAQG,IACtFC,GAAe,EACfC,IAEF,IAAMC,EAASN,GAAQG,GACjBI,EAAmB,KAAK,KAAKV,GAAYS,CAAM,EAC/CE,EAAkB,KAAK,KAAKX,GAAYS,CAAM,EACpD,QAASG,EAAI,EAAGA,EAAIF,EAAkB,EAAEE,EACtC,QAASC,EAAI,EAAGA,EAAIF,EAAiB,EAAEE,EACrC,QAASC,EAAW,EAAGA,EAAWP,EAAa,EAAEO,EAC/CT,EAAQ,KAAK,CAAE,GAAIQ,EAAI,IAAOF,EAAiB,GAAIC,EAAI,IAAOF,CAAiB,CAAC,EAItFJ,EAAUE,CACZ,CACAP,GAAe,CAAE,EAAM,WAASI,EAAQ,IAAKU,GAAMA,EAAE,CAAC,CAAC,EAAG,EAAM,WAASV,EAAQ,IAAKU,GAAMA,EAAE,CAAC,CAAC,CAAE,CACpG,CCjCO,SAASC,GAAKC,EAAoBC,EAA+B,CAAC,EAAG,CAAC,EAAG,CAC9E,IAAMC,EAAS,CAACF,EAAU,IAAKG,GAAOA,EAAG,EAAE,EAAGH,EAAU,IAAKG,GAAOA,EAAG,EAAE,CAAC,EACpEC,EAAM,CAAC,KAAK,IAAI,GAAGF,EAAO,EAAE,EAAG,KAAK,IAAI,GAAGA,EAAO,EAAE,CAAC,EACrDG,EAAM,CAAC,KAAK,IAAI,GAAGH,EAAO,EAAE,EAAG,KAAK,IAAI,GAAGA,EAAO,EAAE,CAAC,EACrDI,EAAW,CAACF,EAAI,GAAIA,EAAI,GAAIC,EAAI,GAAKD,EAAI,GAAIC,EAAI,GAAKD,EAAI,EAAE,EAC5DG,EAAc,CAACD,EAAI,GAAKL,EAAW,GAAIK,EAAI,GAAKL,EAAW,GAAIK,EAAI,GAAKL,EAAW,GAAIK,EAAI,GAAKL,EAAW,EAAE,EACnH,MAAO,CAAE,IAAAK,EAAK,OAAAC,CAAO,CACvB,CAEO,SAASC,GAAOR,EAAoBC,EAA+B,CAAC,EAAG,CAAC,EAAG,CAChF,IAAMC,EAAS,CAACF,EAAU,IAAKG,GAAOA,EAAG,EAAE,EAAGH,EAAU,IAAKG,GAAOA,EAAG,EAAE,CAAC,EACpEC,EAAM,CAAC,KAAK,IAAI,GAAGF,EAAO,EAAE,EAAG,KAAK,IAAI,GAAGA,EAAO,EAAE,CAAC,EACrDG,EAAM,CAAC,KAAK,IAAI,GAAGH,EAAO,EAAE,EAAG,KAAK,IAAI,GAAGA,EAAO,EAAE,CAAC,EACrDO,EAAS,EAAEL,EAAI,GAAKC,EAAI,IAAM,GAAID,EAAI,GAAKC,EAAI,IAAM,CAAC,EACtDK,EAAO,KAAK,IAAID,EAAO,GAAKL,EAAI,GAAIK,EAAO,GAAKL,EAAI,GAAI,CAACK,EAAO,GAAKJ,EAAI,GAAI,CAACI,EAAO,GAAKJ,EAAI,EAAE,EAChGC,EAAW,CAAC,KAAK,MAAMG,EAAO,GAAKC,CAAI,EAAG,KAAK,MAAMD,EAAO,GAAKC,CAAI,EAAG,KAAK,MAAM,EAAIA,CAAI,EAAG,KAAK,MAAM,EAAIA,CAAI,CAAC,EAClHH,EAAc,CAACD,EAAI,GAAKL,EAAW,GAAIK,EAAI,GAAKL,EAAW,GAAIK,EAAI,GAAKL,EAAW,GAAIK,EAAI,GAAKL,EAAW,EAAE,EACnH,MAAO,CAAE,IAAAK,EAAK,OAAAC,CAAO,CACvB,CAEO,SAASI,GAAML,EAAUM,EAAmB,CACjD,IAAMF,EAAO,CAACJ,EAAI,GAAKM,EAAWN,EAAI,GAAKM,CAAS,EAOpD,MANoB,CAClBN,EAAI,IAAMI,EAAK,GAAKJ,EAAI,IAAM,EAC9BA,EAAI,IAAMI,EAAK,GAAKJ,EAAI,IAAM,EAC9BI,EAAK,GACLA,EAAK,EACP,CAEF,CChBA,IAAMG,GAAM,CAAE,QAAS,EAAK,EAEtBC,GAAwE,CAAE,SAAU,KAAM,UAAW,IAAK,EAC1GC,GAAyE,CAAE,SAAU,CAAC,IAAK,GAAG,EAAG,UAAW,CAAC,IAAK,GAAG,CAAE,EACzHC,GAAU,OAAO,iBACfC,GAA2D,CAC/D,UAAW,CAAC,QAAS,0BAA2B,qBAAsB,WAAY,iBAAiB,EACnG,SAAU,CAAC,CACb,EAEIC,GAA2B,KAC3BC,GACAC,GAA8B,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAC7DC,GAAW,EAETC,GAAWC,GAAO,EAAK,GAAK,EAAI,KAAK,IAAIA,CAAC,GAEhD,eAAsBC,GAAWC,EAAqC,CAhCtE,IAAAC,EAkCE,GADIb,GAAI,UAASC,GAAO,SAAW,MAC/B,CAACA,GAAO,UAAYW,EAAO,KAAK,UAAeA,EAAO,KAAK,SAAY,UAAiB,CAC1FX,GAAO,SAAW,MAAMa,EAAUF,EAAO,KAAK,SAAY,SAAS,EACnE,IAAMG,GAASF,EAAAZ,GAAO,WAAP,MAAAY,EAAkB,SAAc,OAAO,OAAOZ,GAAO,SAAS,eAAe,MAAS,EAAI,OACzGC,GAAU,SAAS,GAAK,MAAM,QAAQa,CAAM,EAAI,SAASA,EAAO,GAAG,YAAY,IAAI,GAAG,IAAI,EAAI,EAC9Fb,GAAU,SAAS,GAAK,MAAM,QAAQa,CAAM,EAAI,SAASA,EAAO,GAAG,YAAY,IAAI,GAAG,IAAI,EAAI,CAChG,MAAWH,EAAO,OAASX,GAAO,UAAUe,EAAI,gBAAiBf,GAAO,SAAS,QAAW,EAC5F,OAAOgB,GAAc,EACdhB,GAAO,QAChB,CAEA,eAAsBiB,GAASN,EAAqC,CA5CpE,IAAAC,EA8CE,GADIb,GAAI,UAASC,GAAO,UAAY,MAC/BA,GAAO,UAKDW,EAAO,OAAOI,EAAI,gBAAiBf,GAAO,UAAU,QAAW,MALnD,CACrBA,GAAO,UAAY,MAAMa,EAAUF,EAAO,KAAK,SAAS,EACxD,IAAMG,GAASF,EAAAZ,GAAO,YAAP,MAAAY,EAAmB,SAAc,OAAO,OAAOZ,GAAO,UAAU,eAAe,MAAS,EAAI,OAC3GC,GAAU,UAAU,GAAK,MAAM,QAAQa,CAAM,EAAI,SAASA,EAAO,GAAG,YAAY,IAAI,GAAG,IAAI,EAAI,EAC/Fb,GAAU,UAAU,GAAK,MAAM,QAAQa,CAAM,EAAI,SAASA,EAAO,GAAG,YAAY,IAAI,GAAG,IAAI,EAAI,CACjG,CACA,OAAOd,GAAO,SAChB,CAQA,SAASkB,GAAaC,EAAeC,EAAsB,CA7D3D,IAAAC,EAAAC,EA8DE,IAAMC,EAA4B,CAAC,EACnC,GAAI,GAACF,EAAAF,GAAA,YAAAA,EAAO,QAAP,MAAAE,EAAe,KAAM,GAACC,EAAAH,GAAA,YAAAA,EAAO,QAAP,MAAAG,EAAe,IAAI,OAAOH,EACrD,IAAIK,EAIJ,GAHIC,KACFF,EAAE,QAAa,QAAM,cAAcJ,EAAO,CAACM,EAAO,EAAG,CAAC,CAAC,EAAG,CAACN,EAAM,MAAM,GAAIA,EAAM,MAAM,EAAE,CAAC,GAExFA,EAAM,MAAM,KAAOA,EAAM,MAAM,GAAI,CACrC,IAAMO,EAA2B,CAC/BP,EAAM,MAAM,GAAKA,EAAM,MAAM,GAAK,KAAK,OAAOA,EAAM,MAAM,GAAKA,EAAM,MAAM,IAAM,CAAC,EAAI,EACtFA,EAAM,MAAM,GAAKA,EAAM,MAAM,GAAK,KAAK,OAAOA,EAAM,MAAM,GAAKA,EAAM,MAAM,IAAM,CAAC,EAAI,CACxF,EACMQ,EAA0B,CAC9BR,EAAM,MAAM,GAAKA,EAAM,MAAM,GAAK,KAAK,OAAOA,EAAM,MAAM,GAAKA,EAAM,MAAM,IAAM,CAAC,EAAI,EACtFA,EAAM,MAAM,GAAKA,EAAM,MAAM,GAAK,KAAK,OAAOA,EAAM,MAAM,GAAKA,EAAM,MAAM,IAAM,CAAC,EAAI,CACxF,EACAS,GAAU,CACR,CAAC,EAAG,CAAC,EACLF,EACAC,EACA,CAAC,EAAG,CAAC,CACP,EACAJ,EAAE,IAAS,MAAIA,EAAE,SAAWJ,EAAOS,EAAO,EAC1CL,EAAE,OAAY,QAAM,eAAeA,EAAE,IAAK,CAACH,EAAMA,CAAI,CAAC,EACtDI,EAAW,MAAID,EAAE,OAAQM,EAAU,KAAK,CAC1C,MAAWV,EAAM,MAAM,KAAOC,GAC5BG,EAAE,OAAY,QAAM,eAAeA,EAAE,SAAWJ,EAAO,CAACC,EAAMA,CAAI,CAAC,EACnEI,EAAW,MAAID,EAAE,OAAQM,EAAU,KAAK,GAExCL,EAAW,MAAID,EAAE,SAAWJ,EAAOU,EAAU,KAAK,EAEpD,cAAO,KAAKN,CAAC,EAAE,QAASO,GAAc,UAAQP,EAAEO,EAAO,CAAC,EACjDN,CACT,CAEA,SAASO,GAAiBC,EAA2BC,EAA8C,CACjG,QAAWC,KAAOF,EAChBE,EAAI,SAAW,CACb,KAAK,MAAMA,EAAI,SAAS,IAAMD,EAAW,GAAKL,GAAQ,GAAG,GAAKA,GAAQ,GAAG,IAAMK,EAAW,GAAKL,GAAQ,GAAG,EAAE,EAC5G,KAAK,MAAMM,EAAI,SAAS,IAAMD,EAAW,GAAKL,GAAQ,GAAG,GAAKA,GAAQ,GAAG,IAAMK,EAAW,GAAKL,GAAQ,GAAG,EAAE,EAC5GM,EAAI,SAAS,EACf,EACAA,EAAI,YAAc,CAACA,EAAI,SAAS,GAAKD,EAAW,GAAIC,EAAI,SAAS,GAAKD,EAAW,GAAI,EAAKC,EAAI,SAAS,IAAiBD,EAAW,GAAKA,EAAW,GAAG,EAExJ,GAAIR,GACF,QAAWS,KAAOF,EAChBE,EAAI,YAAc,CAChBA,EAAI,YAAY,GAAKT,GAAQ,GAC7BS,EAAI,YAAY,GAAKT,GAAQ,GAC7BS,EAAI,YAAY,EAClB,EACAA,EAAI,SAAW,CACb,KAAK,MAAMA,EAAI,YAAY,GAAKD,EAAW,EAAE,EAC7C,KAAK,MAAMC,EAAI,YAAY,GAAKD,EAAW,EAAE,EAC7CC,EAAI,YAAY,EAClB,EAGJ,OAAOF,CACT,CAEA,SAASG,GAAaH,EAA2B,CAE/C,IAAMI,EAAWJ,EAAU,KAAMK,GAAMA,EAAE,OAAS,UAAU,EACtDC,EAAYN,EAAU,KAAMK,GAAMA,EAAE,OAAS,WAAW,EACxDE,EAAYP,EAAU,KAAMK,GAAMA,EAAE,OAAS,WAAW,EAC9DD,EAAS,SAAS,KAAOE,EAAU,SAAS,IAAM,IAAMC,EAAU,SAAS,IAAM,IAAM,EACvF,IAAMC,EAAYR,EAAU,KAAMK,GAAMA,EAAE,OAAS,WAAW,EACxDI,EAAaT,EAAU,KAAMK,GAAMA,EAAE,OAAS,YAAY,EAC1DK,EAAaV,EAAU,KAAMK,GAAMA,EAAE,OAAS,YAAY,EAChEG,EAAU,SAAS,KAAOC,EAAW,SAAS,IAAM,IAAMC,EAAW,SAAS,IAAM,IAAM,CAC5F,CAEA,eAAeC,GAAgBxB,EAAeyB,EAAgBX,EAA0D,CAtIxH,IAAAZ,EAAAC,EA8IE,GAAI,GAACD,EAAAwB,GAAO,YAAP,MAAAxB,EAAmB,UAAa,OAAO,KAC5C,IAAME,EAA4B,CAAC,EACnC,CAACA,EAAE,GAAqBA,EAAE,aAA+BA,EAAE,QAAyBA,EAAE,MAAwBA,EAAE,QAAiB,GAAID,EAAAuB,GAAO,YAAP,YAAAvB,EAAkB,QAAQH,EAAO2B,GAAY,WAClL,IAAMC,GAAa,MAAMxB,EAAE,SAAS,KAAK,GAAG,GACtCyB,EAAS,MAAMzB,EAAE,GAAG,KAAK,EACzB0B,EAAY,MAAM1B,EAAE,MAAM,KAAK,EACrC,OAAO,KAAKA,CAAC,EAAE,QAASO,GAAc,UAAQP,EAAEO,EAAO,CAAC,EACxD,IAAMoB,EAAoC,CAAC,EACrCC,EAAQ,EACd,QAASC,EAAI,EAAGA,EAAIJ,EAAO,OAASG,EAAOC,IAAK,CAC9C,IAAMC,EAAQC,GAAQN,EAAOG,EAAQC,EAAI,EAAE,EACrCG,EAAWD,GAAQN,EAAOG,EAAQC,EAAI,EAAE,EACxCI,EAAW,KAAK,MAAM,IAAMH,EAAQE,EAAWR,CAAS,EAAI,IAC5DU,EAAqB,CAACT,EAAOG,EAAQC,EAAI,GAAKM,GAAU,UAAU,GAAIV,EAAOG,EAAQC,EAAI,GAAKM,GAAU,UAAU,GAAIV,EAAOG,EAAQC,EAAI,GAAK,CAAC,EAC/IO,EAAkB,CAAC,KAAK,MAAM1B,EAAW,GAAKwB,EAAY,EAAE,EAAG,KAAK,MAAMxB,EAAW,GAAKwB,EAAY,EAAE,EAAGA,EAAY,EAAY,EACnIG,EAAkB,CAACX,EAAUE,EAAQC,EAAI,GAAIH,EAAUE,EAAQC,EAAI,GAAIH,EAAUE,EAAQC,EAAI,GAAK,CAAC,EACzGF,EAAkB,KAAK,CAAE,KAAahB,GAAIkB,GAAoB,YAAAK,EAAa,SAAAE,EAAU,SAAAC,EAAU,MAAOJ,CAAS,CAAC,CAClH,CACA,GAAIT,GAAaH,EAAO,KAAK,eAAiB,GAAI,OAAO,KACzDT,GAAae,CAAiB,EAC9B,IAAMlB,EAA4BD,GAAiBmB,EAAmBjB,CAAU,EAC1E4B,EAAO7B,EAAU,IAAKK,GAAMA,EAAE,QAAQ,EACtCyB,EAAYC,GAAKF,EAAM,CAAC5B,EAAW,GAAIA,EAAW,EAAE,CAAC,EACrD+B,EAAiD,CAAC,EACxD,OAAW,CAACC,EAAMC,CAAO,IAAK,OAAO,QAAeC,EAAS,EAAG,CAC9D,IAAMC,EAAgB,CAAC,EACvB,QAAShB,EAAI,EAAGA,EAAIc,EAAQ,OAAS,EAAGd,IAAK,CAC3C,IAAMiB,EAAMrC,EAAU,KAAME,GAAQA,EAAI,OAASgC,EAAQd,EAAE,EACrDkB,EAAMtC,EAAU,KAAME,GAAQA,EAAI,OAASgC,EAAQd,EAAI,EAAE,EAC3DiB,GAAOC,GAAKF,EAAG,KAAK,CAACC,EAAI,SAAUC,EAAI,QAAQ,CAAC,CACtD,CACAN,EAAYC,GAAQG,CACtB,CAEA,MADa,CAAE,GAAI,EAAG,MAAO,KAAK,MAAM,IAAMrB,CAAS,EAAI,IAAK,IAAKe,EAAM,IAAK,OAAQA,EAAM,OAAQ,UAAA9B,EAAW,YAAAgC,CAAY,CAE/H,CAgCA,eAAsBO,GAAQpD,EAAeyB,EAAuC,CAClF,IAAMX,EAA+B,CAACd,EAAM,MAAM,IAAM,EAAGA,EAAM,MAAM,IAAM,CAAC,EACxEqD,GAAY5B,EAAO,KAAK,UAAY,GAAM6B,EAAI,EAAIC,GAClDC,EAAYC,IAAWhC,EAAO,KAAK,YAAc,GACvD,GAAIA,EAAO,aAAe4B,GAAYG,GAAaE,KAAU,KAC3DD,SACK,CACL,IAAMrD,EAA4B,CAAC,EAOnCA,EAAE,UAAYL,GAAaC,EAAO,GAAG,EACrC0D,GAAQ,MAAMlC,GAAgBpB,EAAE,UAAWqB,EAAQX,CAAU,EAe7D,OAAO,KAAKV,CAAC,EAAE,QAASO,GAAc,UAAQP,EAAEO,EAAO,CAAC,EACxD4C,GAAWD,EAAI,EACfG,GAAU,CACZ,CACA,OAAOC,GAAQ,CAACA,EAAK,EAAI,CAAC,CAC5B,CCjPO,IAAMC,GAAS,CACpB,CAAE,MAAO,EAAG,MAAO,QAAS,EAC5B,CAAE,MAAO,EAAG,MAAO,SAAU,EAC7B,CAAE,MAAO,EAAG,MAAO,KAAM,EACzB,CAAE,MAAO,EAAG,MAAO,YAAa,EAChC,CAAE,MAAO,EAAG,MAAO,UAAW,EAC9B,CAAE,MAAO,EAAG,MAAO,KAAM,EACzB,CAAE,MAAO,EAAG,MAAO,OAAQ,EAC3B,CAAE,MAAO,EAAG,MAAO,OAAQ,EAC3B,CAAE,MAAO,EAAG,MAAO,MAAO,EAC1B,CAAE,MAAO,GAAI,MAAO,eAAgB,EACpC,CAAE,MAAO,GAAI,MAAO,cAAe,EACnC,CAAE,MAAO,GAAI,MAAO,WAAY,EAChC,CAAE,MAAO,GAAI,MAAO,eAAgB,EACpC,CAAE,MAAO,GAAI,MAAO,OAAQ,EAC5B,CAAE,MAAO,GAAI,MAAO,MAAO,EAC3B,CAAE,MAAO,GAAI,MAAO,KAAM,EAC1B,CAAE,MAAO,GAAI,MAAO,KAAM,EAC1B,CAAE,MAAO,GAAI,MAAO,OAAQ,EAC5B,CAAE,MAAO,GAAI,MAAO,OAAQ,EAC5B,CAAE,MAAO,GAAI,MAAO,KAAM,EAC1B,CAAE,MAAO,GAAI,MAAO,UAAW,EAC/B,CAAE,MAAO,GAAI,MAAO,MAAO,EAC3B,CAAE,MAAO,GAAI,MAAO,OAAQ,EAC5B,CAAE,MAAO,GAAI,MAAO,SAAU,EAC9B,CAAE,MAAO,GAAI,MAAO,UAAW,EAC/B,CAAE,MAAO,GAAI,MAAO,UAAW,EAC/B,CAAE,MAAO,GAAI,MAAO,SAAU,EAC9B,CAAE,MAAO,GAAI,MAAO,KAAM,EAC1B,CAAE,MAAO,GAAI,MAAO,UAAW,EAC/B,CAAE,MAAO,GAAI,MAAO,SAAU,EAC9B,CAAE,MAAO,GAAI,MAAO,MAAO,EAC3B,CAAE,MAAO,GAAI,MAAO,WAAY,EAChC,CAAE,MAAO,GAAI,MAAO,aAAc,EAClC,CAAE,MAAO,GAAI,MAAO,MAAO,EAC3B,CAAE,MAAO,GAAI,MAAO,cAAe,EACnC,CAAE,MAAO,GAAI,MAAO,gBAAiB,EACrC,CAAE,MAAO,GAAI,MAAO,YAAa,EACjC,CAAE,MAAO,GAAI,MAAO,WAAY,EAChC,CAAE,MAAO,GAAI,MAAO,eAAgB,EACpC,CAAE,MAAO,GAAI,MAAO,QAAS,EAC7B,CAAE,MAAO,GAAI,MAAO,YAAa,EACjC,CAAE,MAAO,GAAI,MAAO,KAAM,EAC1B,CAAE,MAAO,GAAI,MAAO,MAAO,EAC3B,CAAE,MAAO,GAAI,MAAO,OAAQ,EAC5B,CAAE,MAAO,GAAI,MAAO,OAAQ,EAC5B,CAAE,MAAO,GAAI,MAAO,MAAO,EAC3B,CAAE,MAAO,GAAI,MAAO,QAAS,EAC7B,CAAE,MAAO,GAAI,MAAO,OAAQ,EAC5B,CAAE,MAAO,GAAI,MAAO,UAAW,EAC/B,CAAE,MAAO,GAAI,MAAO,QAAS,EAC7B,CAAE,MAAO,GAAI,MAAO,UAAW,EAC/B,CAAE,MAAO,GAAI,MAAO,QAAS,EAC7B,CAAE,MAAO,GAAI,MAAO,SAAU,EAC9B,CAAE,MAAO,GAAI,MAAO,OAAQ,EAC5B,CAAE,MAAO,GAAI,MAAO,OAAQ,EAC5B,CAAE,MAAO,GAAI,MAAO,MAAO,EAC3B,CAAE,MAAO,GAAI,MAAO,OAAQ,EAC5B,CAAE,MAAO,GAAI,MAAO,OAAQ,EAC5B,CAAE,MAAO,GAAI,MAAO,cAAe,EACnC,CAAE,MAAO,GAAI,MAAO,KAAM,EAC1B,CAAE,MAAO,GAAI,MAAO,cAAe,EACnC,CAAE,MAAO,GAAI,MAAO,QAAS,EAC7B,CAAE,MAAO,GAAI,MAAO,IAAK,EACzB,CAAE,MAAO,GAAI,MAAO,QAAS,EAC7B,CAAE,MAAO,GAAI,MAAO,OAAQ,EAC5B,CAAE,MAAO,GAAI,MAAO,QAAS,EAC7B,CAAE,MAAO,GAAI,MAAO,UAAW,EAC/B,CAAE,MAAO,GAAI,MAAO,YAAa,EACjC,CAAE,MAAO,GAAI,MAAO,WAAY,EAChC,CAAE,MAAO,GAAI,MAAO,MAAO,EAC3B,CAAE,MAAO,GAAI,MAAO,SAAU,EAC9B,CAAE,MAAO,GAAI,MAAO,MAAO,EAC3B,CAAE,MAAO,GAAI,MAAO,cAAe,EACnC,CAAE,MAAO,GAAI,MAAO,MAAO,EAC3B,CAAE,MAAO,GAAI,MAAO,OAAQ,EAC5B,CAAE,MAAO,GAAI,MAAO,MAAO,EAC3B,CAAE,MAAO,GAAI,MAAO,UAAW,EAC/B,CAAE,MAAO,GAAI,MAAO,YAAa,EACjC,CAAE,MAAO,GAAI,MAAO,YAAa,EACjC,CAAE,MAAO,GAAI,MAAO,YAAa,CACnC,ECrEA,IAAIC,GACAC,GAAY,EACZC,GAAuB,CAAC,EACxBC,GAAW,EACXC,GAAU,OAAO,iBAErB,eAAsBC,GAAKC,EAAqC,CAE9D,GADIC,EAAI,UAASP,GAAQ,MACpBA,GAKMM,EAAO,OAAOE,EAAI,gBAAiBR,GAAM,QAAW,MALnD,CAEVA,GAAQ,MAAMS,EAAUH,EAAO,OAAO,SAAS,EAC/C,IAAMI,EAASV,IAAA,MAAAA,GAAQ,SAAc,OAAO,OAAOA,GAAM,eAAe,MAAS,EAAI,OACrFC,GAAY,MAAM,QAAQS,CAAM,EAAI,SAASA,EAAO,GAAG,YAAY,IAAI,GAAG,IAAI,EAAI,CACpF,CACA,OAAOV,EACT,CAEA,eAAeW,GAAQC,EAAoBC,EAA+BP,EAAgB,CACxF,GAAI,CAACM,EAAK,MAAO,CAAC,EAClB,IAAME,EAA4B,CAAC,EAC7BC,EAA0B,CAAC,EAC3BC,EAAa,MAAMJ,EAAI,MAAM,EACnCE,EAAE,QAAa,UAAQF,CAAG,EAC1B,IAAMK,EAAS,QAAMH,EAAE,QAAS,EAAG,CAAC,EACpCA,EAAE,MAAW,QAAM,CAACG,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,EAAE,EAAG,CAAC,EACtDH,EAAE,MAAW,UAAQA,EAAE,KAAK,EAC5BA,EAAE,OAAY,UAAQG,EAAI,EAAE,EAC5BH,EAAE,QAAa,UAAQG,EAAI,EAAE,EAC1B,UAAQ,CAACL,EAAK,GAAGK,CAAG,CAAC,EACxBH,EAAE,IAAM,MAAS,QAAM,uBAAuBA,EAAE,MAAOA,EAAE,OAAQR,EAAO,OAAO,YAAaA,EAAO,OAAO,aAAeA,EAAO,OAAO,eAAiB,CAAE,EAC1J,IAAMY,EAAM,MAAMJ,EAAE,IAAI,KAAK,EACzBK,EAAI,EACR,QAAWC,KAAM,MAAM,KAAKF,CAAG,EAAG,CAChC,IAAMG,EAAQ,KAAK,MAAM,IAAML,EAAW,GAAGI,GAAI,EAAE,EAAI,IACjDE,EAAWN,EAAW,GAAGI,GAAI,GACnC,GAAI,OAAO,MAAME,CAAQ,EAAG,SAC5B,IAAMC,EAAQC,GAAOF,GAAU,MACzB,CAACG,EAAGC,CAAC,EAAI,CACbV,EAAW,GAAGI,GAAI,GAAKnB,GACvBe,EAAW,GAAGI,GAAI,GAAKnB,EACzB,EACM0B,EAAc,CAClBF,EACAC,EACAV,EAAW,GAAGI,GAAI,GAAKnB,GAAYwB,EACnCT,EAAW,GAAGI,GAAI,GAAKnB,GAAYyB,CACrC,EACME,EAAW,CACf,KAAK,MAAMD,EAAO,GAAKd,EAAY,EAAE,EACrC,KAAK,MAAMc,EAAO,GAAKd,EAAY,EAAE,EACrC,KAAK,MAAMc,EAAO,GAAKd,EAAY,EAAE,EACrC,KAAK,MAAMc,EAAO,GAAKd,EAAY,EAAE,CACvC,EACAE,EAAQ,KAAK,CAAE,GAAII,IAAK,MAAAE,EAAO,MAAOC,EAAU,MAAAC,EAAO,IAAAK,EAAK,OAAAD,CAAO,CAAC,CACtE,CACA,cAAO,KAAKb,CAAC,EAAE,QAASe,GAAc,UAAQf,EAAEe,EAAO,CAAC,EACjDd,CACT,CAEA,eAAsBe,GAAQC,EAAezB,EAAyC,CACpF,GAAI,EAACN,IAAA,MAAAA,GAAQ,UAAa,MAAO,CAAC,EAClC,IAAMgC,GAAY1B,EAAO,OAAO,UAAY,GAAM2B,EAAI,EAAI9B,GACpD+B,EAAY9B,IAAWE,EAAO,OAAO,YAAc,GACzD,OAAIA,EAAO,aAAe0B,GAAYE,GAAchC,GAAK,OAAS,GAChEE,KACOF,KAETE,GAAU,EACH,IAAI,QAAQ,MAAO+B,GAAY,CACpC,IAAMC,EAAa,CAACL,EAAM,MAAM,IAAM,EAAGA,EAAM,MAAM,IAAM,CAAC,EACtDM,EAAY,QAAM,eAAeN,EAAO,CAAC9B,GAAWA,EAAS,CAAC,EAC9DqC,EAAUhC,EAAO,OAAO,QAAUN,IAAA,YAAAA,GAAO,QAAQqC,EAAQ,CAAC,oBAAoB,GAAe,KACnGlC,GAAW8B,EAAI,EACZ,UAAQI,CAAM,EAEjB,IAAME,EAAM,MAAM5B,GAAQ2B,EAASF,EAAY9B,CAAM,EACrDJ,GAAOqC,EAEPJ,EAAQI,CAAG,CACb,CAAC,EACH,CC/FA,IAAAC,GAAA,GAAAC,GAAAD,GAAA,eAAAE,GAAA,QAAAC,KAAO,IAAMA,GAAgB,CAC3B,OACA,OACA,gBACA,aACA,aACA,QACA,eACA,YACA,YACA,aACA,WACA,YACA,aACA,UACA,WACA,WACF,EAEaD,GAAsC,CACjD,QAAS,CAAC,UAAW,WAAY,WAAW,EAC5C,SAAU,CAAC,WAAY,YAAa,YAAY,EAChD,MAAO,CAAC,eAAgB,gBAAiB,WAAY,UAAW,cAAc,EAC9E,QAAS,CAAC,eAAgB,YAAa,WAAW,EAClD,SAAU,CAAC,gBAAiB,aAAc,YAAY,EACtD,KAAM,CAAC,CACT,ECVA,IAAIE,EACAC,GAAW,EACTC,GAAoB,CAAE,GAAI,EAAG,UAAW,CAAC,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,CAAC,EAAG,OAAQ,CAAC,EAAG,EAAG,EAAG,CAAC,EAAG,MAAO,EAAG,YAAa,CAAC,CAAuC,EAMtJC,GAAU,OAAO,iBAErB,eAAsBC,GAAKC,EAAqC,CAC9D,OAAIC,EAAI,UAASN,EAAQ,MACpBA,EACIK,EAAO,OAAOE,EAAI,gBAAiBP,EAAM,QAAW,EADjDA,EAAQ,MAAMQ,EAAUH,EAAO,KAAK,SAAS,EAElDL,CACT,CAGA,eAAeS,GAAMC,EAAQC,EAA6C,CACxE,GAAM,CAACC,EAAOC,CAAM,EAAIH,EAAO,MACzBI,EAAc,UAAQJ,EAAQ,CAACG,EAASD,CAAK,CAAC,EAC9CG,EAAS,MAAID,EAAU,CAAC,EACxBE,GAAoB,MAAMD,EAAI,KAAK,GAAG,GAC5C,GAAIC,EAAWL,EAAU,CACvB,IAAMM,EAAiB,SAAOH,EAAU,CAAC,EACnCI,EAAS,MAAID,EAAaL,CAAK,EAC/B,GAAK,MAAMM,EAAI,KAAK,GAAG,GACvBC,EAAS,MAAIF,EAAaL,CAAK,EAC/BQ,GAAa,MAAMD,EAAI,KAAK,GAAG,GACrC,OAAG,UAAQ,CAACL,EAAUC,EAAKE,EAAaC,EAAKC,CAAG,CAAC,EAC1C,CAAC,EAAGC,EAAGJ,CAAQ,CACxB,CACA,OAAG,UAAQ,CAACF,EAAUC,CAAG,CAAC,EACnB,CAAC,EAAG,EAAGC,CAAQ,CACxB,CAEA,eAAsBK,GAAQC,EAAejB,EAAuC,CAClF,GAAI,EAACL,GAAA,MAAAA,EAAQ,UAAa,MAAO,CAAC,EAClC,IAAMuB,GAAYlB,EAAO,KAAK,UAAY,GAAMmB,EAAI,EAAIvB,GAClDwB,EAAYtB,IAAWE,EAAO,KAAK,YAAc,GACvD,OAAIA,EAAO,aAAekB,GAAYE,GAAa,OAAO,KAAKvB,GAAM,SAAS,EAAE,OAAS,GACvFC,KACO,CAACD,EAAK,IAEfC,GAAU,EACH,IAAI,QAAQ,MAAOuB,GAAY,CACpC,IAAMC,EAAY,OAAK,IAAM,CAC3B,GAAI,EAAC3B,GAAA,MAAAA,EAAO,OAAO,GAAG,OAAO,OAAO,KACpC,IAAM4B,EAAY,QAAM,eAAeN,EAAO,CAACtB,EAAM,OAAO,GAAG,MAAM,GAAIA,EAAM,OAAO,GAAG,MAAM,EAAE,EAAG,EAAK,EACnG6B,EAAa,MAAID,EAAQE,EAAU,GAAG,EAE5C,OADgB,MAAID,EAASC,EAAU,GAAG,CAE5C,CAAC,EACGC,EAKJ,GAJI1B,EAAO,KAAK,UAAS0B,EAAO/B,GAAA,YAAAA,EAAO,QAAQ2B,IAC/C1B,GAAWuB,EAAI,EACZ,UAAQG,CAAM,EAEbI,EAAM,CACR7B,GAAM,UAAU,OAAS,EACzB,IAAM8B,EAAa,UAAQD,CAAI,EAC5B,UAAQA,CAAI,EAEf,IAAME,EAAW,UAAQD,EAAS,CAAC,EAChC,UAAQA,CAAO,EAGlB,QAASE,EAAK,EAAGA,EAAKD,EAAM,OAAQC,IAAM,CAExC,GAAM,CAACC,EAAGf,EAAGgB,CAAS,EAAI,MAAM3B,GAAMwB,EAAMC,GAAK7B,EAAO,KAAK,aAAa,EACtE+B,GAAa/B,EAAO,KAAK,eAAiB,IAC5CH,GAAM,UAAU,KAAK,CACnB,MAAO,KAAK,MAAM,IAAMkC,CAAS,EAAI,IACrC,KAAaC,GAAIH,GACjB,YAAa,CAEXC,EAAInC,EAAM,OAAO,GAAG,MAAM,GAAIoB,EAAIpB,EAAM,OAAO,GAAG,MAAM,EAC1D,EACA,SAAU,CAER,KAAK,MAAMsB,EAAM,MAAM,GAAKa,EAAInC,EAAM,OAAO,GAAG,MAAM,EAAE,EAAG,KAAK,MAAMsB,EAAM,MAAM,GAAKF,EAAIpB,EAAM,OAAO,GAAG,MAAM,EAAE,CACrH,CACF,CAAC,CAEL,CACAiC,EAAM,QAASK,GAAS,UAAQA,CAAC,CAAC,CACpC,CACApC,GAAM,MAAQA,GAAM,UAAU,OAAO,CAACqC,EAAMC,IAAUA,EAAK,MAAQD,EAAOC,EAAK,MAAQD,EAAO,CAAC,EAC/F,IAAMJ,EAAIjC,GAAM,UAAU,IAAKuC,GAAMA,EAAE,SAAS,EAAE,EAC5CrB,EAAIlB,GAAM,UAAU,IAAKuC,GAAMA,EAAE,SAAS,EAAE,EAClDvC,GAAM,IAAM,CACV,KAAK,IAAI,GAAGiC,CAAC,EACb,KAAK,IAAI,GAAGf,CAAC,EACb,KAAK,IAAI,GAAGe,CAAC,EAAI,KAAK,IAAI,GAAGA,CAAC,EAC9B,KAAK,IAAI,GAAGf,CAAC,EAAI,KAAK,IAAI,GAAGA,CAAC,CAChC,EACA,IAAMsB,EAAOxC,GAAM,UAAU,IAAKuC,GAAMA,EAAE,YAAY,EAAE,EAClDE,EAAOzC,GAAM,UAAU,IAAKuC,GAAMA,EAAE,YAAY,EAAE,EACxDvC,GAAM,OAAS,CACb,KAAK,IAAI,GAAGwC,CAAI,EAChB,KAAK,IAAI,GAAGC,CAAI,EAChB,KAAK,IAAI,GAAGD,CAAI,EAAI,KAAK,IAAI,GAAGA,CAAI,EACpC,KAAK,IAAI,GAAGC,CAAI,EAAI,KAAK,IAAI,GAAGA,CAAI,CACtC,EACA,OAAW,CAACC,EAAMC,CAAO,IAAK,OAAO,QAAeC,EAAS,EAAG,CAC9D,IAAMC,EAAgB,CAAC,EACvB,QAASC,EAAI,EAAGA,EAAIH,EAAQ,OAAS,EAAGG,IAAK,CAC3C,IAAMC,EAAM/C,GAAM,UAAU,KAAMmC,GAAQA,EAAI,OAASQ,EAAQG,EAAE,EAC3DE,EAAMhD,GAAM,UAAU,KAAMmC,GAAQA,EAAI,OAASQ,EAAQG,EAAI,EAAE,EACjEC,GAAOC,GAAOD,EAAI,OAAS5C,EAAO,KAAK,eAAiB,IAAM6C,EAAI,OAAS7C,EAAO,KAAK,eAAiB,IAAI0C,EAAG,KAAK,CAACE,EAAI,SAAUC,EAAI,QAAQ,CAAC,CACtJ,CACAhD,GAAM,YAAY0C,GAAQG,CAC5B,CACArB,EAAQ,CAACxB,EAAK,CAAC,CACjB,CAAC,EACH,CCpHA,IAAMiD,GAAc,CAAC,QAAS,UAAW,OAAQ,QAAS,MAAO,WAAY,SAAS,EAClFC,GACEC,GAAgD,CAAC,EACnDC,GAAY,EACZC,GAAW,EACXC,GAAU,OAAO,iBAErB,eAAsBC,GAAKC,EAAqC,CAtBhE,IAAAC,EAuBE,OAAIC,EAAI,UAASR,GAAQ,MACpBA,GACIM,EAAO,OAAOG,EAAI,gBAAiBT,GAAM,QAAW,EADjDA,GAAQ,MAAMU,GAAUH,EAAAD,EAAO,KAAK,UAAZ,YAAAC,EAAqB,SAAS,EAE3DP,EACT,CAEA,eAAsBW,GAAQC,EAAeN,EAAgBO,EAAaC,EAA+D,CA7BzI,IAAAP,EAAAQ,EA8BE,GAAI,CAACf,GAAO,MAAO,CAAC,EACpB,IAAMgB,EAAYZ,MAAWG,EAAAD,EAAO,KAAK,UAAZ,YAAAC,EAAqB,aAAc,GAC1DU,KAAYF,EAAAT,EAAO,KAAK,UAAZ,YAAAS,EAAqB,WAAY,GAAMG,EAAI,EAAIf,GACjE,OAAIG,EAAO,aAAeW,GAAYD,GAAcd,KAAcY,GAAUb,GAAKY,IAASZ,GAAKY,GAAK,OAAS,GAC3GT,KACOH,GAAKY,KAEdT,GAAU,EACH,IAAI,QAAQ,MAAOe,GAAY,CAtCxC,IAAAZ,EAuCI,IAAMa,EAA6C,CAAC,EACpD,IAAIb,EAAAD,EAAO,KAAK,UAAZ,MAAAC,EAAqB,QAAS,CAChC,IAAMc,EAA4B,CAAC,EAC7BC,EAAYtB,IAAA,MAAAA,GAAO,OAAO,GAAG,MAAQA,GAAM,OAAO,GAAG,MAAM,GAAK,EACtEqB,EAAE,OAAY,QAAM,eAAeT,EAAO,CAACU,EAAWA,CAAS,EAAG,EAAK,EASvED,EAAE,SAAc,MAAIA,EAAE,OAAQE,EAAU,GAAG,EAC3CF,EAAE,UAAe,MAAIA,EAAE,SAAU,EAAG,EAAI,EACxCA,EAAE,aAAkB,MAAIA,EAAE,UAAWE,EAAU,IAAI,EACnDF,EAAE,aAAkB,MAAIA,EAAE,aAAcE,EAAU,GAAG,EACrDF,EAAE,QAAUrB,IAAA,YAAAA,GAAO,QAAQqB,EAAE,cAC7BlB,GAAWe,EAAI,EACf,IAAMM,EAAO,MAAMH,EAAE,QAAQ,KAAK,EAClC,QAASI,EAAI,EAAGA,EAAID,EAAK,OAAQC,IAC3BD,EAAKC,IAAMnB,EAAO,KAAK,QAAQ,eAAiB,IAAIc,EAAI,KAAK,CAAE,MAAO,KAAK,IAAI,IAAM,KAAK,MAAM,IAAMI,EAAKC,EAAE,EAAI,GAAG,EAAG,QAAS1B,GAAY0B,EAAc,CAAC,EAEjKL,EAAI,KAAK,CAACM,EAAGC,IAAMA,EAAE,MAAQD,EAAE,KAAK,EACpC,OAAO,KAAKL,CAAC,EAAE,QAASO,GAAc,UAAQP,EAAEO,EAAO,CAAC,CAC1D,CACA3B,GAAKY,GAAOO,EACZlB,GAAYY,EACZK,EAAQC,CAAG,CACb,CAAC,EACH,CCtDA,IAAIS,GACEC,GAAmB,CAAC,EACtBC,GAAY,EACZC,GAAW,EACXC,GAAU,OAAO,iBAErB,eAAsBC,GAAKC,EAAqC,CArBhE,IAAAC,EAsBE,OAAIC,EAAI,UAASR,GAAQ,MACpBA,GACIM,EAAO,OAAOG,EAAI,gBAAiBT,GAAM,QAAW,EADjDA,GAAQ,MAAMU,GAAUH,EAAAD,EAAO,KAAK,gBAAZ,YAAAC,EAA8B,SAAS,EAEpEP,EACT,CAoBA,eAAsBW,GAAQC,EAAeN,EAAgBO,EAAKC,EAA0B,CA9C5F,IAAAP,EAAAQ,EA+CE,GAAI,EAACf,IAAA,MAAAA,GAAQ,UAAa,MAAO,CAAC,EAClC,IAAMgB,EAAYZ,MAAWG,EAAAD,EAAO,KAAK,gBAAZ,YAAAC,EAA8B,aAAc,GACnEU,KAAYF,EAAAT,EAAO,KAAK,gBAAZ,YAAAS,EAA8B,WAAY,GAAMG,EAAI,EAAIf,GAC1E,OAAIG,EAAO,aAAeW,GAAYD,GAAcd,KAAcY,GAAUb,GAAKY,IAC/ET,KACOH,GAAKY,IAEP,IAAI,QAAQ,MAAOM,GAAY,CAtDxC,IAAAZ,EAuDI,IAAIa,EAAiB,CAAC,EACtB,KAAIb,EAAAD,EAAO,KAAK,gBAAZ,YAAAC,EAA8B,WAAWP,IAAA,YAAAA,GAAO,OAAO,GAAG,OAAO,CACnE,IAAMqB,EAA4B,CAAC,EACnCA,EAAE,KAAU,QAAM,eAAeT,EAAO,CAACZ,GAAM,OAAO,GAAG,MAAM,GAAIA,GAAM,OAAO,GAAG,MAAM,EAAE,EAAG,EAAK,EAInGqB,EAAE,KAAOrB,GAAM,QAAQqB,EAAE,IAAI,EAa7B,IAAMC,EAAS,MAAMD,EAAE,KAAK,KAAK,EACjCD,EAAO,MAAM,KAAKE,CAAM,EACxB,OAAO,KAAKD,CAAC,EAAE,QAASE,GAAc,UAAQF,EAAEE,EAAO,CAAC,CAC1D,CACAtB,GAAKY,GAAOO,EACZlB,GAAYY,EACZX,GAAWe,EAAI,EACfC,EAAQC,CAAI,CACd,CAAC,CACH,CCrEA,IAAII,GACEC,GAAmB,CAAC,EACtBC,GAAY,EACZC,GAAW,EACXC,GAAU,OAAO,iBAErB,eAAsBC,GAAKC,EAAqC,CAC9D,OAAIC,EAAI,UAASP,GAAQ,MACpBA,GACIM,EAAO,OAAOE,EAAI,gBAAiBR,GAAM,QAAW,EADjDA,GAAQ,MAAMS,EAAUH,EAAO,KAAK,YAAe,SAAS,EAEjEN,EACT,CAEA,eAAsBU,GAAQC,EAAeL,EAAgBM,EAAKC,EAA0B,CA5B5F,IAAAC,EAAAC,EA6BE,GAAI,EAACf,IAAA,MAAAA,GAAQ,UAAa,MAAO,CAAC,EAClC,IAAMgB,EAAYZ,MAAWU,EAAAR,EAAO,KAAK,cAAZ,YAAAQ,EAA4B,aAAc,GACjEG,KAAYF,EAAAT,EAAO,KAAK,cAAZ,YAAAS,EAA4B,WAAY,GAAMG,EAAI,EAAIf,GACxE,OAAIG,EAAO,aAAeW,GAAYD,GAAcd,KAAcW,GAAUZ,GAAKW,IAC/ER,KACOH,GAAKW,IAEP,IAAI,QAAQ,MAAOO,GAAY,CApCxC,IAAAL,EAqCI,IAAIM,EAAiB,CAAC,EACtB,KAAIN,EAAAR,EAAO,KAAK,cAAZ,YAAAQ,EAA4B,WAAWd,IAAA,YAAAA,GAAO,OAAO,GAAG,OAAO,CACjE,IAAMqB,EAA4B,CAAC,EACnCA,EAAE,KAAU,QAAM,eAAeV,EAAO,CAACX,GAAM,OAAO,GAAG,MAAM,GAAIA,GAAM,OAAO,GAAG,MAAM,EAAE,EAAG,EAAK,EAInGqB,EAAE,KAAOrB,GAAM,QAAQqB,EAAE,IAAI,EAC7B,IAAMC,EAAS,MAAMD,EAAE,KAAK,KAAK,EACjCD,EAAO,MAAM,KAAKE,CAAM,EACxB,OAAO,KAAKD,CAAC,EAAE,QAASE,GAAc,UAAQF,EAAEE,EAAO,CAAC,CAC1D,CACAtB,GAAKW,GAAOQ,EACZlB,GAAYW,EACZV,GAAWe,EAAI,EACfC,EAAQC,CAAI,CACd,CAAC,CACH,CC5CA,IAAII,GACAC,GAAY,EAEVC,GAAc,IAEdC,GAAqBC,GAAgB,cACrCC,GAAsBD,GAAgB,eAEtCE,GAAe,CACnB,WAAY,CAACH,GAAY,GAAIA,GAAYA,GAAY,OAAS,EAAE,EAChE,YAAa,CAACE,GAAa,GAAIA,GAAaA,GAAa,OAAS,EAAE,CACtE,EAEME,GAAgB,CACpB,YAAa,EACb,YAAa,EACb,MAAO,GACP,eAAgB,EAClB,EAEA,eAAsBC,GAAKC,EAAqC,CA9BhE,IAAAC,EAAAC,EA+BE,OAAIC,EAAI,UAASZ,GAAQ,MACpBA,GACIS,EAAO,OAAOI,EAAI,gBAAiBb,GAAM,QAAW,EADjDA,GAAQ,MAAMc,GAAUJ,EAAAD,EAAO,KAAK,OAAZ,YAAAC,EAAkB,SAAS,EAE/DT,IAAaD,IAAA,YAAAA,GAAQ,aAAeW,EAAAX,GAAM,SAAN,YAAAW,EAAe,GAAG,OAASX,GAAM,OAAO,GAAG,MAAM,GAAK,EACtFC,KAAc,KAAIA,GAAY,IAC3BD,EACT,CAGO,SAASe,GAAkBC,EAAWC,EAAWC,EAAQC,EAAM,CACpE,QAASC,EAAI,EAAGA,EAAWC,GAAY,OAAQD,IAAK,CAClD,GAAM,CAAE,IAAAE,EAAK,QAAAC,CAAQ,EAAWF,GAAYD,GACtCI,EAAyBpB,GAAgB,GAAGc,IAASI,KAC3D,GAAI,CAACH,GAAQA,EAAK,SAASG,CAAG,EAC5B,QAASG,EAAI,EAAGA,EAAIF,EAAQ,OAAQE,IAAK,CACvC,IAAMC,EAAQH,EAAQE,GACtBT,EAAUQ,EAAgBC,IAAM,CAC9BR,EAAUS,GAAO,GACjBT,EAAUS,GAAO,IAChBT,EAAUS,GAAO,GAAKV,EAAUQ,EAAgBC,IAAI,IAAM,CAC7D,CACF,CAEJ,CACF,CAEO,IAAME,GAAoCX,GAAc,CAC7D,IAAMY,EAAWZ,EAAUV,GAAa,WAAW,IAAI,GACjDuB,EAAYb,EAAUV,GAAa,YAAY,IAAI,GACzD,OAAOsB,EAAWC,CACpB,EAGaC,GAAY,CAACd,EAAWe,EAAMC,EAAqBC,EAAqBC,EAAUC,EAAO,KAAU,CAC9G,IAAMC,EAAWC,GAAiBC,GAAgBC,GAA8B,CAACvB,EAAUgB,GAAsBhB,EAAUiB,EAAoB,CAAC,EAAG/B,EAAW,CAAC,EACzJsC,EAAeC,GAAWL,CAAG,EAC/BM,EAAU,QAAM,cAAcX,EAAM,CAAC,CACvCK,EAAI,WAAW,GAAKF,EACpBE,EAAI,WAAW,GAAKF,EAAUE,EAAI,SAAS,GAAKF,EAChDE,EAAI,SAAS,GAAKF,CACpB,CAAC,EAAG,CAAC,CAAC,EAAG,CAACjC,GAAWA,EAAS,CAAC,EAC/B,GAAIkC,GAAQvB,EAAI,QAAQ,SAAS,eAAe,EAAG,CACjD,IAAM+B,EAAa,QAAM,cAAcD,CAAI,EACxC,UAAQA,CAAI,EACfA,EAAOC,CACT,CACA,MAAO,CAAE,IAAAP,EAAK,QAAAI,EAAS,KAAAE,CAAK,CAC9B,EAGaE,GAAe,CAACC,EAASC,EAAQC,EAAYZ,EAAO,KAAU,CACzE,IAAMa,EAAwB,CAAC,EAC/B,QAAS5B,EAAI,EAAGA,EAAIb,GAAc,eAAgBa,IAAK,CACrD,IAAM6B,EAAIJ,EAAQzB,EAAI,GAChB8B,EAAIL,EAAQzB,EAAI,EAAI,GACpB+B,EAAIN,EAAQzB,EAAI,EAAI,GAC1B4B,EAAa,KAAK,EACfb,EAAQ,EAAKc,EAAIhD,GAAegD,EAAIhD,IAAc8C,EAAW,GAAKD,EAAO,WAAW,GACpFI,EAAIjD,GAAa8C,EAAW,GAAKD,EAAO,WAAW,GAAIK,CAC1D,CAAC,CACH,CACA,MAAO,CAAE,UAAWH,EAAc,KAAMA,EAAa,MAAMzC,GAAc,KAAK,CAAE,CAClF,EAGa6C,GAAwB,CAACpC,EAAWqC,EAAYC,IAAc,CACzE,IAAMC,EAAevC,EAAiBZ,GAAgB,GAAGkD,cAAsB/C,GAAc,cAAc,GACrGiD,EAAexC,EAAiBZ,GAAgB,GAAGkD,cAAsB/C,GAAc,cAAc,GACrGkD,GAAYF,EAAeC,GAAgB,EAEjD,OAAOH,EAAW,IAAI,CAACK,EAAO,IAAM,CAClC,IAAIP,EAAIM,EACR,OAAI,IAAM,EACRN,EAAII,EACK,IAAM,IACfJ,EAAIK,GAEC,CAACE,EAAM,GAAIA,EAAM,GAAIP,CAAC,CAC/B,CAAC,CACH,EAEA,eAAsBQ,GAAY3C,EAAWe,EAAMG,EAAU,CAC3D,GAAI,EAAClC,IAAA,MAAAA,GAAQ,UAAa,OAAOgB,EACjC,GAAM,CAAE,IAAK4C,EAAY,QAASC,EAAgB,KAAMC,CAAY,EAAIhC,GAAUd,EAAWe,EAAMzB,GAAa,WAAW,GAAIA,GAAa,WAAW,GAAI4B,EAAU,EAAI,EACnK,CAAE,IAAK6B,EAAa,QAASC,EAAiB,KAAMC,CAAa,EAAInC,GAAUd,EAAWe,EAAMzB,GAAa,YAAY,GAAIA,GAAa,YAAY,GAAI4B,EAAU,EAAI,EACxKgC,EAAc,SAAO,CAACJ,EAAaG,CAAY,CAAC,EACnD,UAAQH,CAAW,EACnB,UAAQG,CAAY,EACvB,IAAME,EAAiBnE,GAAM,QAAQkE,CAAQ,EAC1C,UAAQA,CAAQ,EACnB,IAAME,EAAqB,MAAMD,EAAe,KAAK,EAClD,UAAQA,CAAc,EACzB,IAAME,EAAcD,EAAmB,MAAM,EAAG7D,GAAc,eAAiB,CAAC,EAC1E,CAAE,UAAW+D,EAAkB,KAAMC,CAAkB,EAAI3B,GAAayB,EAAaT,EAAYC,EAAgB,EAAI,EACrHW,EAAeJ,EAAmB,MAAM7D,GAAc,eAAiB,CAAC,EACxE,CAAE,UAAWkE,EAAmB,KAAMC,CAAmB,EAAI9B,GAAa4B,EAAcT,EAAaC,EAAiB,EAAK,EAC3HW,EAAgChD,GAAiCX,CAAS,EAC5E,KAAK,IAAI2D,CAA6B,EAAI,IAC5C5D,GAAkBC,EAAWsD,EAAkB,OAAQ,IAAI,EAC3DvD,GAAkBC,EAAWyD,EAAmB,QAAS,IAAI,GAEpDE,EAAgC,EACzC5D,GAAkBC,EAAWsD,EAAkB,OAAQ,CAAC,YAAa,WAAW,CAAC,EAEjFvD,GAAkBC,EAAWyD,EAAmB,QAAS,CAAC,YAAa,WAAW,CAAC,EAErF,IAAMG,EAAyBxB,GAAsBpC,EAAWuD,EAAmB,MAAM,EACnFM,EAA0BzB,GAAsBpC,EAAW0D,EAAoB,OAAO,EAE5F,OADkB1D,EAAU,OAAO4D,CAAsB,EAAE,OAAOC,CAAuB,CAE3F,CCxIA,IAAMC,GAA8B,CAClC,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,EAAG,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAC3N,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAC7N,EAEMC,GAAkC,CAAC,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EAEjOC,GAAsC,CAAC,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EAErIC,GAAmC,CAAC,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EAElFC,GAAmC,CAAC,CAAC,GAAI,CAAC,EAAG,CAAC,EAAG,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EAE5NC,GAAuC,CAAC,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,GAAG,CAAC,EAEzHC,GAAoC,CAAC,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EAEnFC,GAAmC,CACvC,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EACpN,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,EAAG,CAAC,GAAI,GAAG,EAAG,CAAC,IAAK,EAAE,CAC5M,EAmJA,SAASC,GAAqBC,EAAwB,CACpD,IAAMC,EAAUD,EAAY,IAAKE,GAAeA,EAAW,EAAE,EAC7D,OAAAD,EAAQ,KAAKD,EAAYA,EAAY,OAAS,GAAG,EAAE,EAC5CC,CACT,CAEO,IAAME,GAA2C,CACtD,KAAMJ,GAAqBK,EAAgB,EAC3C,QAASL,GAAqBM,EAAoB,EAClD,YAAaN,GAAqBO,EAAwB,EAC1D,SAAUP,GAAqBQ,EAAqB,EACpD,SAAUR,GAAqBS,EAAqB,EACpD,aAAcT,GAAqBU,EAAyB,EAC5D,UAAWV,GAAqBW,EAAsB,EACtD,SAAUX,GAAqBY,EAAqB,CACtD,EAEMC,GAAsC,OAAO,QAAQT,EAAwC,EAChG,IAAI,CAAC,CAACU,EAAOZ,CAAO,IAAMA,EAAQ,IAAKa,GAAU,CAACA,EAAOD,CAAK,CAAqB,CAAC,EACpF,KAAK,EAEKE,GAAgC,IAAI,IAAIH,EAAe,EAQvDI,GAAmC,CAC9C,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAC9C,IAAK,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,IAAK,IACnC,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IACpC,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IACpC,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GACtC,EAEaC,GAAuC,CAClD,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACrC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC9B,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IACnC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC9B,GAAI,IAAK,GAAI,GAAI,GAAI,GACrB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxC,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GACjC,EAEaC,GAAwC,CACnD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC9B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC9B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC9B,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GACrC,ECvOA,eAAsBC,GAAQC,EAAWC,EAAmB,CAH5D,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAIE,IAAMC,EAAkC,CAGtC,KAAM,OAAMT,GAAAD,EAAAD,EAAQ,OAAQY,GAAMA,EAAE,OAAS,GAAG,IAApC,YAAAX,EAAwC,KAAxC,YAAAC,EAA4C,QACxD,MAAO,OAAME,GAAAD,EAAAH,EAAQ,OAAQY,GAAMA,EAAE,OAAS,EAAE,IAAnC,YAAAT,EAAuC,KAAvC,YAAAC,EAA2C,QACxD,KAAM,OAAME,GAAAD,EAAAL,EAAQ,OAAQY,GAAMA,EAAE,OAAS,GAAG,IAApC,YAAAP,EAAwC,KAAxC,YAAAC,EAA4C,QACxD,MAAO,OAAME,GAAAD,EAAAP,EAAQ,OAAQY,GAAMA,EAAE,OAAS,EAAE,IAAnC,YAAAL,EAAuC,KAAvC,YAAAC,EAA2C,QACxD,KAAM,OAAME,GAAAD,EAAAT,EAAQ,OAAQY,GAAMA,EAAE,OAAS,GAAG,IAApC,YAAAH,EAAwC,KAAxC,YAAAC,EAA4C,OAC1D,EACA,QAAWG,KAAO,OAAO,OAAOF,CAAC,EAC/B,GAAI,CAACE,EAAK,OAAOd,EAInB,IAAMe,EAAuBC,GAAqC,OAAO,CAACC,EAAMC,IAASD,GAAQjB,EAAUkB,GAAM,GAAI,CAAC,EAAcF,GAAqC,OACzK,QAASG,EAAI,EAAGA,EAAIP,EAAE,MAAM,OAAS,EAAGO,IAAKnB,EAAU,KAAK,CAACY,EAAE,MAAM,EAAIO,EAAI,GAAIP,EAAE,MAAM,EAAIO,EAAI,GAAIJ,CAAU,CAAC,EAChH,IAAMK,EAAuBC,GAAsC,OAAO,CAACJ,EAAMC,IAASD,GAAQjB,EAAUkB,GAAM,GAAI,CAAC,EAAcG,GAAsC,OAC3K,QAASF,EAAI,EAAGA,EAAIP,EAAE,MAAM,OAAS,EAAGO,IAAKnB,EAAU,KAAK,CAACY,EAAE,MAAM,EAAIO,EAAI,GAAIP,EAAE,MAAM,EAAIO,EAAI,GAAIC,CAAU,CAAC,EAGhH,QAASD,EAAI,EAAGA,EAAIP,EAAE,KAAK,OAAS,EAAGO,IAAKnB,EAAoBgB,GAAqCG,IAAM,CAACP,EAAE,KAAK,EAAIO,EAAI,GAAIP,EAAE,KAAK,EAAIO,EAAI,GAAInB,EAAoBgB,GAAqCG,IAAI,EAAE,EACjN,QAASA,EAAI,EAAGA,EAAIP,EAAE,KAAK,OAAS,EAAGO,IAAKnB,EAAoBqB,GAAsCF,IAAM,CAACP,EAAE,KAAK,EAAIO,EAAI,GAAIP,EAAE,KAAK,EAAIO,EAAI,GAAInB,EAAoBqB,GAAsCF,IAAI,EAAE,EAGnN,QAASA,EAAI,EAAGA,EAAIP,EAAE,KAAK,OAAS,EAAGO,IAAKnB,EAAoBsB,GAAiCH,IAAM,CAACP,EAAE,KAAK,EAAIO,EAAI,GAAIP,EAAE,KAAK,EAAIO,EAAI,GAAInB,EAAoBsB,GAAiCH,IAAI,EAAE,EAEzM,OAAOnB,CACT,CCNA,IAAMuB,GAAQ,CACZ,MAAO,CAAC,EACR,QAAS,OAAO,iBAChB,UAAW,CACb,EAEIC,EAA2B,KAC3BC,GAAY,EAEhB,eAAsBC,GAAQC,EAAeC,EAAuC,CAlCpF,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAmCE,GAAI,EAACd,GAAA,MAAAA,EAAQ,UAAa,MAAO,CAAC,EAElC,IAAMe,KAAYV,EAAAD,EAAO,KAAK,WAAZ,YAAAC,EAAsB,WAAY,GAAMW,EAAI,EAAIjB,GAAM,UAClEkB,EAAYlB,GAAM,WAAWO,EAAAF,EAAO,KAAK,WAAZ,YAAAE,EAAsB,aAAc,GACnE,CAACF,EAAO,aAAe,CAACW,GAAY,CAACE,GAAalB,GAAM,MAAM,SAAW,GAC3EA,GAAM,MAAQ,MAAgBmB,GAASf,EAAOC,CAAM,EACpDL,GAAM,UAAYiB,EAAI,EACtBjB,GAAM,QAAU,GAEhBA,GAAM,UAER,IAAMoB,EAAsB,CAAC,EACvBC,EAAwB,CAAC,EAC3BC,EAAK,EACHC,EAAOrB,GACb,QAASsB,EAAI,EAAGA,EAAIxB,GAAM,MAAM,OAAQwB,IAAK,CAC3C,IAAMC,EAAMzB,GAAM,MAAMwB,GACpBE,EAAQ,EACRC,EACEC,EAAmB,CACvB,GAAIN,IACJ,KAAM,CAAC,EACP,QAAS,CAAC,EACV,IAAK,CAAC,EAAG,EAAG,EAAG,CAAC,EAChB,OAAQ,CAAC,EAAG,EAAG,EAAG,CAAC,EACnB,MAAO,EACP,SAAU,EACV,UAAW,EAGX,YAAa,CAAC,CAChB,EAIA,GADA,CAACI,EAAOC,EAAgBC,EAAK,MAAM,EAASC,IAAoBrB,EAAAH,EAAO,KAAK,WAAZ,YAAAG,EAAsB,SAAUiB,EAAKrB,GAAOK,EAAAJ,EAAO,KAAK,OAAZ,MAAAI,EAAkB,QAAUP,GAAsBqB,GAAK,CAAC,EAChKlB,EAAO,OAAO,aAAc,CAC9B,IAAMyB,EAAYF,EAAK,OAAS,MAAMG,GAAsBH,EAAK,MAAM,EAAI,OACxE,UAAQA,EAAK,MAAM,EAClBE,IAAWF,EAAK,OAASE,EAC/B,CAEA,GADAF,EAAK,SAAW,KAAK,MAAM,IAAMH,EAAI,UAAU,EAAI,KAC9Cf,EAAAL,EAAO,KAAK,OAAZ,MAAAK,EAAkB,QAYhB,GAAI,CAACT,EACNI,EAAO,OAAO2B,EAAI,wDAAwD,MACzE,CACL,KAAIrB,EAAAN,EAAO,KAAK,YAAZ,YAAAM,EAAuB,UAAW,CAACsB,EAAI,QAAQ,SAAS,OAAO,EACjE,OAAA5B,EAAO,KAAK,UAAU,QAAU,GAC7B,UAAQuB,EAAK,MAAM,EACfR,EAET,IAAMc,EAAUjC,EAAM,QAAQ2B,EAAK,MAAgB,EAE7CO,EAAiB,MADHD,EAAQ,KAAME,GAAMA,EAAE,MAAMA,EAAE,MAAM,OAAS,KAAO,CAAC,EAChC,KAAK,EAE9C,GADAR,EAAK,UAAY,KAAK,MAAM,IAAMO,EAAe,EAAE,EAAI,IACnDP,EAAK,aAAahB,EAAAP,EAAO,KAAK,WAAZ,YAAAO,EAAsB,gBAAiB,IAE3D,GADAa,EAAI,WAAaG,EAAK,UAClBvB,EAAO,KAAK,KAAK,YAAa,CAChCuB,EAAK,IAAWS,GAASZ,EAAKrB,CAAK,EACnCwB,EAAK,OAAcU,GAAUb,EAAKrB,CAAK,EACvCwB,EAAK,MAAQA,EAAK,SAClBA,EAAK,KAAOH,EAAI,UAAU,IAAKc,GAAO,EAClCd,EAAI,WAAW,GAAKA,EAAI,SAAS,IAAO,GAAMA,EAAI,SAAS,GAAKA,EAAI,WAAW,IAAMc,EAAG,GAAehB,GAAK,GAC5GE,EAAI,WAAW,GAAKA,EAAI,SAAS,IAAO,GAAMA,EAAI,SAAS,GAAKA,EAAI,WAAW,IAAMc,EAAG,GAAehB,GAAK,CAChH,CAAC,EACDK,EAAK,QAAUA,EAAK,KAAK,IAAKW,GAAO,CAACA,EAAG,IAAMnC,EAAM,MAAM,IAAM,GAAImC,EAAG,IAAMnC,EAAM,MAAM,IAAM,IAAKmC,EAAG,IAAM,GAAKhB,CAAI,CAAC,EACxH,QAAWiB,KAAO,OAAO,KAAYC,EAAkB,EACrDb,EAAK,YAAYY,GAAO,CAACZ,EAAK,KAAYa,GAAmBD,GAAe,CAEhF,MACK,CACL,IAAME,EAAQR,EAAQ,KAAME,GAAMA,EAAE,MAAMA,EAAE,MAAM,OAAS,KAAO,IAAI,EAChEO,EAAoB,UAAQD,EAAO,CAAC,GAAI,CAAC,CAAC,EAC5CE,EAAY,MAAMD,EAAe,MAAM,EACxC,UAAQA,CAAc,GACrB9B,EAAAR,EAAO,KAAK,YAAZ,MAAAQ,EAAuB,QACzB+B,EAAY,MAAgBC,GAAQD,EAAWV,CAAO,GAC7CpB,EAAAT,EAAO,KAAK,OAAZ,MAAAS,EAAkB,UAC3B8B,EAAY,MAAWE,GAAYF,EAAWhB,EAAK,OAAQ1B,EAAS,GAEtE0B,EAAK,KAAYmB,GAAmBH,EAAWnB,EAAKC,EAAOC,EAAgBzB,EAAS,EACpF0B,EAAK,QAAUA,EAAK,KAAK,IAAKW,GAAO,CAACA,EAAG,IAAMnC,EAAM,MAAM,IAAM,GAAImC,EAAG,IAAMnC,EAAM,MAAM,IAAM,IAAKmC,EAAG,IAAM,GAAKhB,CAAI,CAAC,EACxH,QAAWiB,KAAO,OAAO,KAAYQ,EAAe,EAAGpB,EAAK,YAAYY,GAAcQ,GAAgBR,GAAK,IAAKS,IAAUrB,EAAK,KAAKqB,GAAM,EAC1IrB,EAAK,MAAQA,EAAK,UAClB,IAAMsB,EAAgB,CAAE,GAAQC,GAAiBvB,EAAK,KAAMH,CAAG,EAAG,WAAYA,EAAI,WAAY,UAAWA,EAAI,SAAU,EACvHG,EAAK,IAAWS,GAASa,EAAe9C,CAAK,EAC7CwB,EAAK,OAAcU,GAAUY,EAAe9C,CAAK,EAQjDiB,EAAS,KAAK6B,CAAa,CAC7B,CACG,UAAQhB,CAAO,CACpB,KAlEgC,CAC9BN,EAAK,IAAWS,GAASZ,EAAKrB,CAAK,EACnCwB,EAAK,OAAcU,GAAUb,EAAKrB,CAAK,EACvCwB,EAAK,MAAQA,EAAK,SAClBA,EAAK,KAAOH,EAAI,UAAU,IAAKc,GAAO,EAClCd,EAAI,WAAW,GAAKA,EAAI,SAAS,IAAO,GAAMA,EAAI,SAAS,GAAKA,EAAI,WAAW,IAAMc,EAAG,GAAehB,GAAK,GAC5GE,EAAI,WAAW,GAAKA,EAAI,SAAS,IAAO,GAAMA,EAAI,SAAS,GAAKA,EAAI,WAAW,IAAMc,EAAG,GAAehB,GAAK,CAChH,CAAC,EACDK,EAAK,QAAUA,EAAK,KAAK,IAAKW,GAAO,CAACA,EAAG,IAAMnC,EAAM,MAAM,IAAM,GAAImC,EAAG,IAAMnC,EAAM,MAAM,IAAM,IAAKmC,EAAG,IAAM,GAAKhB,CAAI,CAAC,EACxH,QAAWiB,KAAO,OAAO,KAAYC,EAAkB,EACrDb,EAAK,YAAYY,GAAO,CAACZ,EAAK,KAAYa,GAAmBD,GAAe,CAEhF,CAuDIZ,EAAK,SAASb,EAAAV,EAAO,KAAK,WAAZ,YAAAU,EAAsB,gBAAiB,GAAIK,EAAM,KAAKQ,CAAI,EACpE,UAAQA,EAAK,MAAM,CAC7B,CACA,OAAA5B,GAAM,MAAQqB,EACPD,CACT,CAEA,eAAsBgC,GAAK/C,EAAqC,CAtJhE,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAuJE,OAAIsB,EAAI,UAAShC,EAAQ,QACrBK,EAAAD,EAAO,KAAK,YAAZ,YAAAC,EAAuB,WAAWL,GAAA,YAAAA,EAAQ,YACxC,OAAO,OAAKM,EAAAN,GAAA,YAAAA,EAAQ,YAAR,YAAAM,EAAsB,UAAW,CAAC,CAAC,EAAE,OAAS,IAAGN,EAAQ,MAEtEA,EAGMI,EAAO,OAChB2B,EAAI,gBAAiB/B,EAAM,QAAW,GAHlCO,EAAAH,EAAO,KAAK,YAAZ,MAAAG,EAAuB,QAASP,EAAQ,MAAMoD,EAAUhD,EAAO,KAAK,UAAU,SAAS,EACtFJ,EAAQ,MAAMoD,GAAU5C,EAAAJ,EAAO,KAAK,OAAZ,YAAAI,EAAkB,SAAS,EAI1DP,GAAaD,EAAM,YAAeS,EAAAT,GAAA,YAAAA,EAAO,SAAP,YAAAS,EAAgB,GAAG,QAASC,EAAAV,GAAA,YAAAA,EAAO,SAAP,YAAAU,EAAgB,GAAG,MAAM,GAAK,IACrFV,CACT,CAEO,IAAMqD,GAAuBC,GACvBC,GAAeC,GClJ5B,IAAIC,GACEC,GAAkB,CAAC,EAErBC,GAAW,EACXC,GAAY,EACZC,GAAU,OAAO,iBAErB,eAAsBC,GAAKC,EAAqC,CA3BhE,IAAAC,EA4BE,OAAIC,EAAI,UAASR,GAAQ,MACpBA,GACIM,EAAO,OAAOG,EAAI,gBAAiBT,GAAM,QAAW,EADjDA,GAAQ,MAAMU,GAAUH,EAAAD,EAAO,KAAK,cAAZ,YAAAC,EAAyB,SAAS,EAE/DP,EACT,CAEO,SAASW,GAAQC,EAAe,CACrC,IAAMC,EAAUD,EAAM,OAASA,EAAM,QAAUA,EAC/C,GAAI,EAACZ,IAAA,MAAAA,GAAO,OAAO,GAAG,OAAO,OAAOa,EACpC,IAAMC,EAAkB,QAAM,eAAeD,EAAQ,CAACb,GAAM,OAAO,GAAG,MAAM,GAAIA,GAAM,OAAO,GAAG,MAAM,EAAE,EAAG,EAAK,EAC1Ge,EAAkB,MAAID,EAAME,EAAU,KAAK,EACjD,OAAG,UAAQF,CAAI,EACRC,CAkBT,CAEA,eAAsBE,GAAQC,EAAeZ,EAAgBa,EAAaC,EAAiC,CA5D3G,IAAAb,EAAAc,EAAAC,EAAAC,EA6DE,IAAMC,EAAe,CACnB,IAAK,EACL,OAAQ,UACR,YAAa,EACb,WAAY,CAAC,CACf,EACA,GAAI,EAACxB,IAAA,MAAAA,GAAQ,UAAa,OAAOwB,EACjC,IAAMC,EAAYrB,MAAWG,EAAAD,EAAO,KAAK,cAAZ,YAAAC,EAAyB,aAAc,GAC9DmB,KAAYL,EAAAf,EAAO,KAAK,cAAZ,YAAAe,EAAyB,WAAY,GAAMM,EAAI,EAAIzB,GACrE,OAAII,EAAO,aAAemB,GAAaC,GAAavB,KAAciB,KAAWE,EAAArB,IAAA,YAAAA,GAAOkB,KAAP,YAAAG,EAAa,KAAM,KAAOC,EAAAtB,IAAA,YAAAA,GAAOkB,KAAP,YAAAI,EAAa,aAAc,GAChInB,KACOH,GAAKkB,KAEdf,GAAU,EACH,IAAI,QAAQ,MAAOwB,GAAY,CA3ExC,IAAArB,EA4EI,IAAIA,EAAAD,EAAO,KAAK,cAAZ,MAAAC,EAAyB,QAAS,CACpC,IAAMsB,EAAWlB,GAAQO,CAAK,EACxBY,EAAO9B,IAAA,YAAAA,GAAO,QAAQ6B,GAC5B3B,GAAWyB,EAAI,EACZ,UAAQE,CAAQ,EAEnB,IAAME,EAAS,MADCD,EAAK,KAAME,GAAMA,EAAE,MAAM,KAAO,CAAC,EACpB,KAAK,EAC5BC,EAAa,KAAK,MAAM,IAAM,KAAK,IAAKF,EAAO,GAAK,EAAI,CAAC,EAAI,IAC/DE,GAAc3B,EAAO,KAAK,YAAY,eAAiB,KACzDkB,EAAI,OAASO,EAAO,IAAM,GAAM,SAAW,OAC3CP,EAAI,YAAc,KAAK,IAAI,IAAMS,CAAU,GAE7C,IAAMC,EAAY,SAAOJ,EAAK,KAAME,GAAMA,EAAE,MAAM,KAAO,GAAG,EAAG,CAAC,EAC1DG,GAAkB,MAAMD,EAAO,KAAK,GAAG,GAC1C,UAAQA,CAAM,EAEjB,IAAME,EAAM,MADCN,EAAK,KAAME,GAAMA,EAAE,MAAM,KAAO,GAAG,EACzB,KAAK,EAC5BR,EAAI,IAAM,KAAK,MAAMY,EAAID,EAAS,GAAKC,EAAID,EAAS,GAAK,GAAKA,EAAS,IAAMC,EAAID,EAAS,GAAK,GAAKA,EAAS,IAAMC,EAAID,EAAS,EAAE,EAAI,IAElI,OAAO,MAAMJ,EAAO,EAAE,GAAK,OAAO,MAAMK,EAAI,EAAE,IAAG3B,EAAI,iBAAkB,CAAE,MAAAT,GAAO,OAAQ8B,CAAK,CAAC,EAElG,IAAMO,EAAOP,EAAK,KAAME,GAAMA,EAAE,MAAM,KAAO,IAAI,EAG3CM,EAAaD,EAAO,MAAMA,EAAK,KAAK,EAAI,CAAC,EAC/Cb,EAAI,WAAa,MAAM,KAAKc,CAAU,EACtCR,EAAK,QAASE,GAAS,UAAQA,CAAC,CAAC,CACnC,CACA/B,GAAKkB,GAAOK,EACZrB,GAAYiB,EACZQ,EAAQJ,CAAG,CACb,CAAC,EACH,CCzGO,SAASe,GAAWC,EAAK,CAC9B,MAAO,CACL,KAAK,IAAIA,EAAI,SAAS,GAAKA,EAAI,WAAW,EAAE,EAC5C,KAAK,IAAIA,EAAI,SAAS,GAAKA,EAAI,WAAW,EAAE,CAC9C,CACF,CAEO,SAASC,GAAaD,EAAK,CAChC,MAAO,CACLA,EAAI,WAAW,IAAMA,EAAI,SAAS,GAAKA,EAAI,WAAW,IAAM,EAC5DA,EAAI,WAAW,IAAMA,EAAI,SAAS,GAAKA,EAAI,WAAW,IAAM,CAC9D,CACF,CAEO,SAASE,GAAyBF,EAAKG,EAAOC,EAAU,CAC7D,IAAMC,EAAIF,EAAM,MAAM,GAChBG,EAAIH,EAAM,MAAM,GAChBI,EAAQ,CAAC,CACbP,EAAI,WAAW,GAAKK,EACpBL,EAAI,WAAW,GAAKM,EACpBN,EAAI,SAAS,GAAKK,EAClBL,EAAI,SAAS,GAAKM,CACpB,CAAC,EACD,OAAU,QAAM,cAAcH,EAAOI,EAAO,CAAC,CAAC,EAAGH,CAAQ,CAC3D,CAEO,SAASI,GAAoBR,EAAKS,EAAQ,CAC/C,IAAMC,EAAa,CAACV,EAAI,WAAW,GAAKS,EAAO,GAAIT,EAAI,WAAW,GAAKS,EAAO,EAAE,EAC1EE,EAAW,CAACX,EAAI,SAAS,GAAKS,EAAO,GAAIT,EAAI,SAAS,GAAKS,EAAO,EAAE,EACpEG,EAAgBZ,EAAI,cAAc,IAAKa,GACvB,CAACA,EAAM,GAAKJ,EAAO,GAAII,EAAM,GAAKJ,EAAO,EAAE,CAEhE,EACD,MAAO,CAAE,WAAAC,EAAY,SAAAC,EAAU,cAAAC,EAAe,WAAYZ,EAAI,UAAW,CAC3E,CAEO,SAASc,GAAWd,EAAKS,EAAS,IAAK,CAC5C,IAAMM,EAASd,GAAaD,CAAG,EACzBgB,EAAOjB,GAAWC,CAAG,EACrBiB,EAAc,CAACR,EAASO,EAAK,GAAK,EAAGP,EAASO,EAAK,GAAK,CAAC,EACzDN,EAAa,CAACK,EAAO,GAAKE,EAAY,GAAIF,EAAO,GAAKE,EAAY,EAAE,EACpEN,EAAW,CAACI,EAAO,GAAKE,EAAY,GAAIF,EAAO,GAAKE,EAAY,EAAE,EACxE,MAAO,CAAE,WAAAP,EAAY,SAAAC,EAAU,cAAeX,EAAI,aAAc,CAClE,CAEO,SAASkB,GAAYlB,EAAK,CAC/B,IAAMmB,EAAUlB,GAAaD,CAAG,EAC1BgB,EAAOjB,GAAWC,CAAG,EAErBoB,EADU,KAAK,IAAI,GAAGJ,CAAI,EACL,EACrBN,EAAa,CAACS,EAAQ,GAAKC,EAAUD,EAAQ,GAAKC,CAAQ,EAC1DT,EAAW,CAACQ,EAAQ,GAAKC,EAAUD,EAAQ,GAAKC,CAAQ,EAC9D,MAAO,CAAE,WAAAV,EAAY,SAAAC,EAAU,cAAeX,EAAI,aAAc,CAClE,CAaO,SAASqB,GAAiBC,EAAO,CACtC,OAAOA,EAAQ,EAAI,KAAK,GAAK,KAAK,OAAOA,EAAQ,KAAK,KAAO,EAAI,KAAK,GAAG,CAC3E,CAEO,SAASC,GAAgBC,EAAQC,EAAQ,CAC9C,IAAMC,EAAU,KAAK,GAAK,EAAI,KAAK,MAAM,EAAED,EAAO,GAAKD,EAAO,IAAKC,EAAO,GAAKD,EAAO,EAAE,EACxF,OAAOH,GAAiBK,CAAO,CACjC,CAEO,IAAMC,GAAyB,CAACC,EAAGC,IAAM,CAAC,CAAC,EAAG,EAAGD,CAAC,EAAG,CAAC,EAAG,EAAGC,CAAC,EAAG,CAAC,EAAG,EAAG,CAAC,CAAC,EAEzE,SAASC,GAAIC,EAAIC,EAAI,CAC1B,IAAIC,EAAU,EACd,QAASC,EAAI,EAAGA,EAAIH,EAAG,OAAQG,IAC7BD,GAAWF,EAAGG,GAAKF,EAAGE,GAExB,OAAOD,CACT,CAEO,SAASE,GAAmBC,EAAKC,EAAa,CACnD,IAAMC,EAAmB,CAAC,EAC1B,QAASJ,EAAI,EAAGA,EAAIE,EAAI,OAAQF,IAC9BI,EAAO,KAAKF,EAAIF,GAAGG,EAAY,EAEjC,OAAOC,CACT,CAEO,SAASC,GAA0BC,EAAMC,EAAM,CACpD,IAAMR,EAAsB,CAAC,EACvBS,EAAOF,EAAK,OAClB,QAASG,EAAM,EAAGA,EAAMD,EAAMC,IAAO,CACnCV,EAAQ,KAAK,CAAC,CAAC,EACf,QAASW,EAAM,EAAGA,EAAMF,EAAME,IAC5BX,EAAQU,GAAK,KAAKb,GAAIU,EAAKG,GAAMR,GAAmBM,EAAMG,CAAG,CAAC,CAAC,CAEnE,CACA,OAAOX,CACT,CAEO,SAASY,GAAoBC,EAAUC,EAAQ,CACpD,IAAMC,EAAO,KAAK,IAAIF,CAAQ,EACxBG,EAAO,KAAK,IAAIH,CAAQ,EACxBI,EAAiB,CAAC,CAACF,EAAM,CAACC,EAAM,CAAC,EAAG,CAACA,EAAMD,EAAM,CAAC,EAAG,CAAC,EAAG,EAAG,CAAC,CAAC,EAC9DG,EAAoBxB,GAAuBoB,EAAO,GAAIA,EAAO,EAAE,EAC/DK,EAA2Bb,GAA0BY,EAAmBD,CAAc,EACtFG,EAA4B1B,GAAuB,CAACoB,EAAO,GAAI,CAACA,EAAO,EAAE,EAC/E,OAAOR,GAA0Ba,EAA0BC,CAAyB,CACtF,CAEO,SAASC,GAAsBC,EAAQ,CAC5C,IAAMC,EAAoB,CAAC,CAACD,EAAO,GAAG,GAAIA,EAAO,GAAG,EAAE,EAAG,CAACA,EAAO,GAAG,GAAIA,EAAO,GAAG,EAAE,CAAC,EAC/EE,EAAuB,CAACF,EAAO,GAAG,GAAIA,EAAO,GAAG,EAAE,EAClDG,EAAsB,CAC1B,CAAC5B,GAAI0B,EAAkB,GAAIC,CAAoB,EAC/C,CAAC3B,GAAI0B,EAAkB,GAAIC,CAAoB,CACjD,EACA,MAAO,CACLD,EAAkB,GAAG,OAAOE,EAAoB,EAAE,EAClDF,EAAkB,GAAG,OAAOE,EAAoB,EAAE,EAClD,CAAC,EAAG,EAAG,CAAC,CACV,CACF,CAEO,SAASC,GAAYC,EAAuBV,EAAgB,CACjE,MAAO,CACLpB,GAAI8B,EAAuBV,EAAe,EAAE,EAC5CpB,GAAI8B,EAAuBV,EAAe,EAAE,CAC9C,CACF,CCpIO,IAAMW,GAAU,CACrzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,OAAS,EAAG,MAAQ,EACzB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,EAAG,KAAO,EACvB,CAAE,EAAG,MAAQ,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",
  "names": ["log", "msg", "dt", "ts", "join", "folder", "file", "separator", "path", "now", "validate", "defaults", "config", "parent", "msgs", "key", "defined", "same", "mergeDeep", "objects", "isObject", "obj", "prev", "pVal", "oVal", "config", "tfjs_esm_exports", "__export", "b", "d", "v", "__reExport", "dist_star", "r", "e", "o", "a", "t", "s", "f", "vertexIdentity", "colorMatrixWithAlpha", "colorMatrixWithoutAlpha", "pixelate", "blur", "convolution", "collect", "source", "prefix", "collection", "r", "match", "name", "GLProgram", "gl", "vertexSource", "fragmentSource", "__publicField", "type", "shader", "log", "vertexShader", "fragmentShader", "u", "GLImageFilter", "drawCount", "sourceTexture", "lastInChain", "currentFramebufferIndex", "tempFramebuffers", "filterChain", "vertexBuffer", "currentProgram", "fxcanvas", "canvas", "shaderProgramCache", "DRAW", "resize", "width", "height", "vertices", "createFramebufferTexture", "fbo", "renderbuffer", "texture", "getTempFramebuffer", "index", "draw", "flags", "target", "flipY", "compileShader", "vertexIdentity", "floatSize", "vertSize", "filter", "matrix", "m", "colorMatrixWithoutAlpha", "colorMatrixWithAlpha", "program", "brightness", "b", "amount", "x", "y", "v", "o", "rotation", "cos", "sin", "lumR", "lumG", "lumB", "pixelSizeX", "pixelSizeY", "convolution", "a", "size", "s", "blurSizeX", "blurSizeY", "blur", "pixelate", "args", "func", "image", "i", "f", "histogramEqualization", "inputImage", "squeeze", "channels", "min", "max", "absMax", "channel", "maxValue", "sub", "range", "fact", "enh", "rgb", "reshape", "maxSize", "inCanvas", "outCanvas", "tmpCanvas", "fx", "last", "reset", "canvas", "width", "height", "c", "env", "copy", "input", "output", "outputCanvas", "process", "config", "getTensor", "_a", "_b", "log", "d", "tensor", "rgb", "cast", "originalWidth", "originalHeight", "targetWidth", "targetHeight", "inCtx", "GLImageFilter", "pixels", "depth", "arr", "tempData", "casted", "histogramEqualization", "skip", "skipFrame", "t", "diffRelative", "compare", "input1", "input2", "Env", "__publicField", "v", "raw", "platformMatch", "c", "canvas", "ctx", "gl", "adapter", "e", "kernel", "cpu", "env", "models_exports", "__export", "Models", "getModelStats", "load", "reset", "validate", "validateModel", "model", "last", "raceNames", "ageWeights", "lastCount", "lastTime", "skipped", "load", "config", "_a", "env", "log", "loadModel", "predict", "image", "idx", "count", "_b", "skipFrame", "skipTime", "now", "resolve", "t", "box", "obj", "gender", "race", "i", "a", "b", "ageSorted", "age", "tensor", "constants", "init", "model", "last", "lastCount", "lastTime", "skipped", "load", "config", "env", "log", "loadModel", "predict", "image", "idx", "count", "_a", "_b", "_c", "_d", "skipFrame", "skipTime", "now", "resolve", "t", "constants", "obj", "data", "tensor", "model", "last", "lastCount", "lastTime", "skipped", "rgb", "load", "config", "_a", "env", "log", "loadModel", "predict", "image", "idx", "count", "_b", "_c", "_d", "skipFrame", "skipTime", "now", "resolve", "t", "red", "green", "blue", "redNorm", "greenNorm", "blueNorm", "grayscale", "constants", "obj", "data", "tensor", "model", "cached", "skipped", "lastCount", "lastTime", "load", "config", "_a", "env", "log", "loadModel", "predict", "image", "idx", "count", "_b", "skipTime", "now", "skipFrame", "resolve", "resize", "res", "num", "meshAnnotations", "meshLandmarks", "blazeFaceLandmarks", "irisIndices", "UV468", "TRI468", "VTX68", "VTX33", "VTX7", "UV68", "x", "UV468", "UV33", "UV7", "connectionsToIndices", "connections", "indices", "connection", "pairsLips", "pairsLeftEye", "pairsLeftEyebrow", "pairsLeftIris", "pairsRightEye", "pairsRightEyebrow", "pairsRightIris", "pairsFaceContour", "contourKeypoints", "getBoxSize", "box", "getBoxCenter", "clampBox", "input", "getRawBox", "scaleBoxCoordinates", "factor", "startPoint", "endPoint", "cutAndResize", "image", "cropSize", "h", "w", "cutBox", "crop", "norm", "constants", "enlargeBox", "center", "size", "halfSize", "squarifyBox", "centers", "calculateLandmarksBoundingBox", "landmarks", "x", "d", "y", "fixedRotationMatrix", "normalizeRadians", "angle", "computeRotation", "point1", "point2", "buildTranslationMatrix", "x", "y", "dot", "v1", "v2", "product", "i", "getColumnFrom2DArr", "arr", "columnIndex", "column", "multiplyTransformMatrices", "mat1", "mat2", "size", "row", "col", "buildRotationMatrix", "rotation", "center", "cosA", "sinA", "rotationMatrix", "translationMatrix", "translationTimesRotation", "negativeTranslationMatrix", "invertTransformMatrix", "matrix", "rotationComponent", "translationComponent", "invertedTranslation", "rotatePoint", "homogeneousCoordinate", "generateAnchors", "inputSize", "spec", "anchors", "i", "stride", "gridRows", "gridCols", "anchorsNum", "gridY", "anchorY", "gridX", "anchorX", "n", "transformRawCoords", "coordsRaw", "box", "angle", "rotationMatrix", "boxSize", "getBoxSize", "coordsScaled", "coord", "largeAngle", "coordsRotationMatrix", "buildRotationMatrix", "fixedRotationMatrix", "coordsRotated", "rotatePoint", "inverseRotationMatrix", "invertTransformMatrix", "boxCenter", "getBoxCenter", "offsets", "dot", "correctFaceRotation", "rotate", "input", "symmetryLine", "meshLandmarks", "blazeFaceLandmarks", "face", "env", "computeRotation", "center", "centerRaw", "rotated", "cutAndResize", "findFaceCenter", "mesh", "x", "m", "y", "calculateFaceBox", "previousBox", "keypointsCount", "faceBoxScaleFactor", "model", "anchors", "inputSize", "inputSizeT", "size", "load", "config", "_a", "env", "log", "loadModel", "generateAnchors", "decodeBoxes", "boxOutputs", "constants", "boxes", "tensor", "getBoxes", "inputImage", "_b", "_c", "_d", "t", "res", "sorted", "a", "b", "nms", "scores", "i", "confidence", "points", "rawBox", "scaledBox", "scaleBoxCoordinates", "enlargedBox", "enlargeBox", "squaredBox", "squarifyBox", "blazeposecoords_exports", "__export", "connected", "kpt", "inputSize", "anchorTensor", "numLayers", "strides", "createAnchors", "anchors", "layerId", "anchorCount", "lastSameStrideLayer", "stride", "featureMapHeight", "featureMapWidth", "y", "x", "anchorId", "a", "calc", "keypoints", "outputSize", "coords", "pt", "min", "max", "box", "boxRaw", "square", "center", "dist", "scale", "scaleFact", "env", "models", "inputSize", "skipped", "outputNodes", "cache", "cropBox", "padding", "lastTime", "sigmoid", "x", "loadDetect", "config", "_a", "loadModel", "inputs", "log", "createAnchors", "loadPose", "prepareImage", "input", "size", "_a", "_b", "t", "final", "cropBox", "height", "width", "padding", "constants", "tensor", "rescaleKeypoints", "keypoints", "outputSize", "kpt", "fixKeypoints", "leftPalm", "k", "leftWrist", "leftIndex", "rightPalm", "rightWrist", "rightIndex", "detectLandmarks", "config", "models", "outputNodes", "poseScore", "points", "distances", "keypointsRelative", "depth", "i", "score", "sigmoid", "presence", "adjScore", "positionRaw", "inputSize", "position", "distance", "kpts", "boxes", "calc", "annotations", "name", "indexes", "connected", "pt", "pt0", "pt1", "predict", "skipTime", "now", "lastTime", "skipFrame", "skipped", "cache", "labels", "model", "inputSize", "last", "lastTime", "skipped", "load", "config", "env", "log", "loadModel", "inputs", "process", "res", "outputShape", "t", "results", "detections", "arr", "nms", "i", "id", "score", "classVal", "label", "labels", "x", "y", "boxRaw", "box", "tensor", "predict", "input", "skipTime", "now", "skipFrame", "resolve", "outputSize", "resize", "objectT", "obj", "efficientposecoords_exports", "__export", "connected", "kpt", "model", "lastTime", "cache", "skipped", "load", "config", "env", "log", "loadModel", "max2d", "inputs", "minScore", "width", "height", "reshaped", "max", "newScore", "coordinates", "mod", "div", "y", "predict", "image", "skipTime", "now", "skipFrame", "resolve", "tensor", "resize", "enhance", "constants", "resT", "squeeze", "stack", "id", "x", "partScore", "kpt", "s", "prev", "curr", "a", "xRaw", "yRaw", "name", "indexes", "connected", "pt", "i", "pt0", "pt1", "annotations", "model", "last", "lastCount", "lastTime", "skipped", "load", "config", "_a", "env", "log", "loadModel", "predict", "image", "idx", "count", "_b", "skipFrame", "skipTime", "now", "resolve", "obj", "t", "inputSize", "constants", "data", "i", "a", "b", "tensor", "model", "last", "lastCount", "lastTime", "skipped", "load", "config", "_a", "env", "log", "loadModel", "predict", "input", "idx", "count", "_b", "skipFrame", "skipTime", "now", "resolve", "data", "t", "output", "tensor", "model", "last", "lastCount", "lastTime", "skipped", "load", "config", "env", "log", "loadModel", "predict", "input", "idx", "count", "_a", "_b", "skipFrame", "skipTime", "now", "resolve", "data", "t", "output", "tensor", "model", "inputSize", "irisEnlarge", "leftOutline", "meshAnnotations", "rightOutline", "eyeLandmarks", "irisLandmarks", "load", "config", "_a", "_b", "env", "log", "loadModel", "replaceIrisCoords", "rawCoords", "newCoords", "prefix", "keys", "i", "irisIndices", "key", "indices", "originalIndices", "j", "index", "getLeftToRightEyeDepthDifference", "leftEyeZ", "rightEyeZ", "getEyeBox", "face", "eyeInnerCornerIndex", "eyeOuterCornerIndex", "meshSize", "flip", "box", "squarifyBox", "enlargeBox", "calculateLandmarksBoundingBox", "boxSize", "getBoxSize", "crop", "flipped", "getEyeCoords", "eyeData", "eyeBox", "eyeBoxSize", "eyeRawCoords", "x", "y", "z", "getAdjustedIrisCoords", "irisCoords", "direction", "upperCenterZ", "lowerCenterZ", "averageZ", "coord", "augmentIris", "leftEyeBox", "leftEyeBoxSize", "leftEyeCrop", "rightEyeBox", "rightEyeBoxSize", "rightEyeCrop", "combined", "eyePredictions", "eyePredictionsData", "leftEyeData", "leftEyeRawCoords", "leftIrisRawCoords", "rightEyeData", "rightEyeRawCoords", "rightIrisRawCoords", "leftToRightEyeDepthDifference", "adjustedLeftIrisCoords", "adjustedRightIrisCoords", "LIPS_CONNECTIONS", "LEFT_EYE_CONNECTIONS", "LEFT_EYEBROW_CONNECTIONS", "LEFT_IRIS_CONNECTIONS", "RIGHT_EYE_CONNECTIONS", "RIGHT_EYEBROW_CONNECTIONS", "RIGHT_IRIS_CONNECTIONS", "FACE_OVAL_CONNECTIONS", "connectionsToIndices", "connections", "indices", "connection", "MEDIAPIPE_FACE_MESH_KEYPOINTS_BY_CONTOUR", "LIPS_CONNECTIONS", "LEFT_EYE_CONNECTIONS", "LEFT_EYEBROW_CONNECTIONS", "LEFT_IRIS_CONNECTIONS", "RIGHT_EYE_CONNECTIONS", "RIGHT_EYEBROW_CONNECTIONS", "RIGHT_IRIS_CONNECTIONS", "FACE_OVAL_CONNECTIONS", "indexLabelPairs", "label", "index", "MEDIAPIPE_FACE_MESH_KEYPOINTS", "LANDMARKS_REFINEMENT_LIPS_CONFIG", "LANDMARKS_REFINEMENT_LEFT_EYE_CONFIG", "LANDMARKS_REFINEMENT_RIGHT_EYE_CONFIG", "augment", "rawCoords", "results", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "t", "r", "val", "irisLDepth", "LANDMARKS_REFINEMENT_LEFT_EYE_CONFIG", "prev", "curr", "i", "irisRDepth", "LANDMARKS_REFINEMENT_RIGHT_EYE_CONFIG", "LANDMARKS_REFINEMENT_LIPS_CONFIG", "cache", "model", "inputSize", "predict", "input", "config", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "skipTime", "now", "skipFrame", "getBoxes", "faces", "newCache", "id", "size", "i", "box", "angle", "rotationMatrix", "face", "correctFaceRotation", "equilized", "histogramEqualization", "log", "env", "results", "faceConfidence", "t", "clampBox", "getRawBox", "pt", "key", "blazeFaceLandmarks", "meshT", "coordsReshaped", "rawCoords", "augment", "augmentIris", "transformRawCoords", "meshAnnotations", "index", "calculatedBox", "calculateFaceBox", "load", "loadModel", "triangulation", "TRI468", "uvmap", "UV468", "model", "last", "lastTime", "lastCount", "skipped", "load", "config", "_a", "env", "log", "loadModel", "enhance", "input", "tensor", "crop", "norm", "constants", "predict", "image", "idx", "count", "_b", "_c", "_d", "obj", "skipFrame", "skipTime", "now", "resolve", "enhanced", "resT", "gender", "t", "confidence", "argmax", "ageIdx", "all", "desc", "descriptor", "getBoxSize", "box", "getBoxCenter", "cutBoxFromImageAndResize", "image", "cropSize", "h", "w", "boxes", "scaleBoxCoordinates", "factor", "startPoint", "endPoint", "palmLandmarks", "coord", "enlargeBox", "center", "size", "newHalfSize", "squarifyBox", "centers", "halfSize", "normalizeRadians", "angle", "computeRotation", "point1", "point2", "radians", "buildTranslationMatrix", "x", "y", "dot", "v1", "v2", "product", "i", "getColumnFrom2DArr", "arr", "columnIndex", "column", "multiplyTransformMatrices", "mat1", "mat2", "size", "row", "col", "buildRotationMatrix", "rotation", "center", "cosA", "sinA", "rotationMatrix", "translationMatrix", "translationTimesRotation", "negativeTranslationMatrix", "invertTransformMatrix", "matrix", "rotationComponent", "translationComponent", "invertedTranslation", "rotatePoint", "homogeneousCoordinate", "anchors", "HandDetector", "model", "__publicField", "_a", "_b", "_c", "_d", "anchors", "anchor", "boxes", "t", "res", "tensor", "rawPalmLandmarks", "index", "input", "config", "constants", "scores", "nms", "hands", "p", "box", "startPoint", "endPoint", "palmLandmarks", "hand", "scaled", "scaleBoxCoordinates", "palmBoxEnlargeFactor", "handBoxEnlargeFactor", "palmLandmarkIds", "palmLandmarksPalmBase", "palmLandmarksMiddleFingerBase", "lastTime", "HandPipeline", "handDetector", "handPoseModel", "__publicField", "_a", "_b", "_c", "landmarks", "xs", "d", "ys", "startPoint", "endPoint", "palmLandmarks", "rotationMatrix", "rotatedPalmLandmarks", "coord", "rotatePoint", "boxAroundPalm", "enlargeBox", "squarifyBox", "boundingBox", "boxAroundHand", "i", "rawCoords", "box2", "angle", "boxSize", "getBoxSize", "scaleFactor", "coordsScaled", "coordsRotationMatrix", "buildRotationMatrix", "coordsRotated", "inverseRotationMatrix", "invertTransformMatrix", "boxCenter", "getBoxCenter", "originalBoxCenter", "dot", "image", "config", "useFreshBox", "boxes", "skipTime", "now", "skipFrame", "hands", "currentBox", "computeRotation", "palmCenter", "palmCenterNormalized", "rotatedImage", "env", "newBox", "croppedInput", "cutBoxFromImageAndResize", "handImage", "constants", "confidenceT", "keypoints", "confidence", "keypointsReshaped", "coords", "nextBoundingBox", "result", "enlarged", "a", "Finger", "value", "FingerCurl", "FingerDirection", "FingerGesture", "name", "__publicField", "finger", "curl", "confidence", "position", "weight", "total", "a", "b", "el", "detectedCurls", "detectedDirections", "fingerIdx", "detectedCurl", "expectedCurls", "expectedCurl", "score", "detectedDirection", "expectedDirections", "expectedDirection", "thumb", "index", "middle", "ring", "pinky", "Finger", "none", "half", "full", "FingerCurl", "verticalUp", "verticalDown", "horizontalLeft", "horizontalRight", "diagonalUpRight", "diagonalUpLeft", "diagonalDownRight", "diagonalDownLeft", "FingerDirection", "ThumbsUp", "FingerGesture", "finger", "Victory", "Point", "MiddleFinger", "OpenPalm", "fingergesture_default", "minConfidence", "options", "calculateSlope", "point1x", "point1y", "point2x", "point2y", "value", "slope", "getSlopes", "point1", "point2", "slopeXY", "slopeYZ", "angleOrientationAt", "angle", "weightageAt", "isVertical", "isDiagonal", "isHorizontal", "estimateFingerCurl", "startPoint", "midPoint", "endPoint", "start_mid_x_dist", "start_end_x_dist", "mid_end_x_dist", "start_mid_y_dist", "start_end_y_dist", "mid_end_y_dist", "start_mid_z_dist", "start_end_z_dist", "mid_end_z_dist", "start_mid_dist", "start_end_dist", "mid_end_dist", "cos_in", "angleOfCurve", "fingerCurl", "FingerCurl", "estimateHorizontalDirection", "max_dist_x", "estimatedDirection", "FingerDirection", "estimateVerticalDirection", "max_dist_y", "estimateDiagonalDirection", "reqd_vertical_direction", "reqd_horizontal_direction", "calculateFingerDirection", "fingerSlopes", "voteVertical", "voteDiagonal", "voteHorizontal", "start_end_x_y_dist_ratio", "max_dist", "calc_start_point_x", "calc_start_point_y", "calc_end_point_x", "calc_end_point_y", "totalAngle", "votes", "fingerSlope", "fingerVotes", "estimate", "landmarks", "slopesXY", "slopesYZ", "fingerCurls", "fingerDirections", "finger", "Finger", "points", "slopeAtXY", "slopeAtYZ", "point", "slopes", "pointIndexAt", "fingerPointsAt", "fingerCurled", "fingerPosition", "analyze", "keypoints", "estimatorRes", "fingerIdx", "match", "poses", "gesture", "fingergesture_default", "confidence", "meshAnnotations", "handDetectorModel", "handPoseModel", "handPipeline", "predict", "input", "config", "predictions", "hands", "i", "annotations", "key", "index", "keypoints", "box", "boxRaw", "pt", "landmarks", "analyze", "load", "_a", "_b", "env", "loadModel", "log", "handDetector", "HandDetector", "HandPipeline", "config", "extensions", "gl", "register", "instance", "_a", "log", "reset", "canvas", "err", "e", "ctx", "kernelConfig", "newKernelConfig", "current", "registerCustomOps", "config", "newKernels", "env", "kernelMod", "op", "kernelFloorMod", "kernelRotateWithOffset", "backend", "t", "log", "defaultFlags", "check", "instance", "force", "timeStamp", "now", "adapter", "adapterInfo", "available", "register", "mt", "simd", "e", "err", "newFlags", "updatedFlags", "key", "val", "init", "fakeOps", "kernelNames", "kernelName", "kernelConfig", "kernel", "models", "modelOutputNodes", "inputSize", "classes", "faceIndex", "boxExpandFact", "maxDetectorResolution", "detectorExpandFact", "skipped", "lastTime", "outputSize", "cache", "fingerMap", "loadDetect", "config", "_a", "env", "log", "fakeOps", "loadModel", "inputs", "loadSkeleton", "detectHands", "input", "config", "hands", "models", "t", "ratio", "height", "maxDetectorResolution", "width", "modelOutputNodes", "classScores", "faceIndex", "id", "nms", "scores", "classNum", "nmsIndex", "boxSlice", "boxYX", "boxData", "boxRaw", "scale", "detectorExpandFact", "boxFull", "outputSize", "score", "label", "classes", "hand", "tensor", "a", "b", "detectFingers", "h", "boxCrop", "inputSize", "constants", "rawScore", "coordsNorm", "kpt", "analyze", "key", "fingerMap", "index", "predict", "_a", "_b", "skipped", "skipTime", "now", "lastTime", "skipFrame", "cache", "resolve", "skipTimeExtended", "skipFrameExtended", "handBox", "oldCache", "i", "boxKpt", "square", "boxScale", "boxExpandFact", "boxScaleRaw", "bbox", "calc", "model", "cached", "skipped", "lastCount", "lastTime", "load", "config", "_a", "env", "log", "loadModel", "predict", "image", "idx", "count", "_b", "skipTime", "now", "skipFrame", "resolve", "resize", "res", "num", "movenetcoords_exports", "__export", "connected", "horizontal", "kpt", "relative", "vertical", "maxJitter", "cache", "bodyParts", "body", "pair", "horizontal", "left", "kp", "right", "tmp", "vertical", "lower", "higher", "compare", "relative", "leftTo", "rightTo", "distanceLeft", "distanceRight", "jitter", "keypoints", "i", "diff", "padInput", "input", "inputSize", "_a", "_b", "t", "final", "tensor", "rescaleBody", "outputSize", "kpt", "rescaledBoxes", "calc", "pt", "model", "inputSize", "skipped", "cache", "load", "config", "_a", "env", "log", "fakeOps", "loadModel", "parseSinglePose", "res", "image", "kpt", "keypoints", "score", "id", "positionRaw", "prev", "curr", "bodies", "newBox", "calc", "pt", "annotations", "name", "indexes", "connected", "i", "pt0", "kp", "pt1", "body", "bodyParts", "parseMultiPose", "totalScore", "a", "b", "predict", "input", "skipTime", "now", "skipFrame", "resolve", "t", "padInput", "rescaleBody", "jitter", "tensor", "model", "last", "lastTime", "skipped", "inputSize", "scaleBox", "load", "config", "env", "loadModel", "inputs", "log", "process", "res", "outputShape", "id", "results", "size", "strideSize", "baseSize", "scoresT", "a", "labels", "scores", "featuresT", "boxesMaxT", "boxIdxT", "boxIdx", "i", "j", "score", "cx", "cy", "boxOffset", "x", "y", "w", "h", "boxRaw", "box", "result", "nmsBoxes", "nmsScores", "nmsIdx", "nms", "_val", "idx", "b", "predict", "image", "skipTime", "now", "skipFrame", "resolve", "outputSize", "resizeT", "normT", "constants", "transposeT", "objectT", "obj", "partNames", "count", "partIds", "result", "jointName", "i", "connectedPartNames", "connectedPartIndices", "jointNameA", "jointNameB", "poseChain", "getBoundingBox", "keypoints", "coord", "maxX", "maxY", "minX", "minY", "x", "y", "scalePoses", "poses", "height", "width", "inputResolutionHeight", "inputResolutionWidth", "scaleY", "scaleX", "scalePose", "pose", "i", "score", "part", "position", "MaxHeap", "maxSize", "getElementValue", "__publicField", "max", "k", "j", "t", "getOffsetPoint", "keypoint", "offsets", "count", "getImageCoords", "outputStride", "heatmapY", "heatmapX", "clamp", "a", "min", "max", "squaredDistance", "y1", "x1", "y2", "x2", "dy", "dx", "addVectors", "b", "model", "poseNetOutputs", "localMaximumRadius", "outputStride", "squaredNmsRadius", "traverse", "edgeId", "sourceKeypoint", "targetId", "scores", "offsets", "displacements", "offsetRefineStep", "getDisplacement", "point", "getStridedIndexNearPoint", "height", "width", "clamp", "sourceKeypointIndices", "displacement", "targetKeypoint", "addVectors", "i", "targetKeypointIndices", "offsetPoint", "getOffsetPoint", "targetKeyPointIndices", "score", "partNames", "decodePose", "root", "displacementsFwd", "displacementsBwd", "tuples", "poseChain", "parentJoinName", "childJoinName", "partIds", "edgesFwd", "childJointId", "edgesBwd", "parentJointId", "numParts", "numEdges", "keypoints", "rootPoint", "getImageCoords", "edge", "sourceId", "scoreIsMaximumInLocalWindow", "keypointId", "heatmapY", "heatmapX", "localMaximum", "yStart", "yEnd", "yCurrent", "xStart", "xEnd", "xCurrent", "buildPartWithScoreQueue", "minConfidence", "numKeypoints", "queue", "MaxHeap", "withinRadius", "poses", "x", "y", "_a", "correspondingKeypoint", "squaredDistance", "getInstanceScore", "existingPoses", "result", "position", "decode", "maxDetected", "rootImageCoords", "a", "box", "getBoundingBox", "predict", "input", "config", "res", "resized", "normalized", "results3d", "buffers", "tensor", "t", "decoded", "scalePoses", "load", "env", "loadModel", "log", "model", "busy", "load", "config", "env", "loadModel", "log", "process", "input", "background", "_a", "_b", "inputImage", "width", "height", "t", "constants", "data", "tensor", "alphaCanvas", "canvas", "alphaCtx", "alphaData", "compositeCanvas", "compositeCtx", "compositeData", "i", "mergedCanvas", "bgImage", "ctxMerge", "Models", "__publicField", "getModelStats", "instance", "totalSizeFromManifest", "totalSizeWeights", "totalSizeLoading", "m", "modelStats", "percentageLoaded", "reset", "model", "load", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "_n", "_o", "_p", "_q", "_r", "_s", "_t", "_u", "_v", "_w", "_x", "_y", "_z", "env", "loadPose", "loadDetect", "loadSkeleton", "validateModel", "newInstance", "name", "log", "simpleOps", "ignoreOps", "ops", "missing", "url", "executor", "kernel", "op", "validate", "defined", "res", "options", "modelStats", "httpHandler", "url", "init", "log", "setModelLoadOptions", "config", "loadModel", "modelPath", "_a", "_b", "_c", "modelUrl", "join", "modelPathSegments", "shortModelName", "cachedModelName", "models_exports", "cachedModels", "e", "tfLoadOptions", "model", "b", "loaded", "artifacts", "err", "saveResult", "validateModel", "draw_exports", "__export", "all", "body", "canvas", "face", "gesture", "hand", "object", "options", "person", "getCanvasContext", "input", "log", "ctx", "rad2deg", "theta", "colorDepth", "z", "opt", "rgb", "point", "x", "y", "localOptions", "rect", "width", "height", "cx", "cy", "lines", "points", "pt", "curves", "i", "xc", "yc", "arrow", "from", "to", "radius", "angle", "options", "opt", "drawLabels", "f", "ctx", "_a", "_b", "labels", "emotion", "rad2deg", "i", "x", "y", "drawIrisElipse", "_c", "_d", "sizeX", "sizeY", "drawGazeSpheres", "valX", "valY", "pathV", "pathH", "drawGazeArrows", "leftGaze", "arrow", "rightGaze", "drawFacePolygons", "TRI468", "points", "index", "lines", "drawFacePoints", "point", "LANDMARKS_REFINEMENT_LIPS_CONFIG", "LANDMARKS_REFINEMENT_LEFT_EYE_CONFIG", "LANDMARKS_REFINEMENT_RIGHT_EYE_CONFIG", "drawFaceBoxes", "rect", "face", "inCanvas", "result", "drawOptions", "mergeDeep", "options", "getCanvasContext", "body", "inCanvas", "result", "drawOptions", "localOptions", "mergeDeep", "options", "ctx", "getCanvasContext", "i", "rect", "pt", "colorDepth", "point", "part", "connected", "curves", "hand", "inCanvas", "result", "drawOptions", "localOptions", "mergeDeep", "options", "ctx", "getCanvasContext", "h", "rect", "pt", "colorDepth", "point", "addHandLabel", "part", "title", "z", "addHandLine", "i", "object", "inCanvas", "result", "drawOptions", "localOptions", "mergeDeep", "options", "ctx", "getCanvasContext", "h", "rect", "label", "gesture", "inCanvas", "result", "drawOptions", "localOptions", "mergeDeep", "options", "ctx", "getCanvasContext", "i", "j", "where", "what", "who", "label", "drawTime", "person", "inCanvas", "result", "drawOptions", "localOptions", "mergeDeep", "options", "ctx", "getCanvasContext", "i", "rect", "label", "canvas", "input", "output", "all", "timeStamp", "now", "promise", "face", "body", "hand", "object", "gesture", "env", "expandFact", "alpha", "insidePoly", "x", "y", "polygon", "inside", "j", "i", "mask", "face", "width", "height", "buffer", "silhouette", "pt", "meshAnnotations", "output", "calculateGaze", "face", "radians", "pt1", "pt2", "offsetIris", "eyeRatio", "left", "irisCenter", "eyeCenter", "eyeSize", "eyeDiff", "strength", "calculateFaceAngle", "imageSize", "normalize", "v", "length", "subVectors", "a", "b", "x", "y", "z", "crossVectors", "rotationMatrixToEulerAngle", "r", "r00", "_r01", "_r02", "r10", "r11", "r12", "r20", "r21", "r22", "thetaX", "thetaY", "thetaZ", "mesh", "size", "pts", "pt", "yAxis", "xAxis", "zAxis", "matrix", "angle", "gaze", "detectFace", "instance", "input", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "_n", "_o", "_p", "_q", "_r", "_s", "_t", "_u", "_v", "_w", "_x", "_y", "_z", "_A", "_B", "_C", "timeStamp", "now", "ageRes", "gearRes", "genderRes", "emotionRes", "mobilefacenetRes", "insightfaceRes", "antispoofRes", "livenessRes", "descRes", "faceRes", "faces", "predict", "env", "i", "log", "masked", "mask", "rotation", "calculateFaceAngle", "irisSize", "tensor", "res", "body", "res", "gestures", "i", "leftWrist", "a", "rightWrist", "nose", "leftShoulder", "rightShoulder", "face", "zDiff", "xDiff", "mouthOpen", "chinDepth", "iris", "_a", "_b", "_c", "_d", "sizeXLeft", "sizeYLeft", "areaLeft", "sizeXRight", "sizeYRight", "areaRight", "center", "leftIrisCenterX", "rightIrisCenterX", "rightIrisCenterY", "leftIrisCenterY", "hand", "fingers", "finger", "pos", "closest", "best", "highest", "poses", "match", "pose", "bufferedResult", "interpolateTime", "calc", "newResult", "config", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "_n", "_o", "_p", "_q", "t0", "now", "elapsed", "bufferedFactor", "i", "box", "newBoxCoord", "boxRaw", "keypoints", "newKpt", "annotations", "coords", "efficientposecoords_exports", "blazeposecoords_exports", "movenetcoords_exports", "name", "indexes", "pt", "j", "pt0", "kp", "pt1", "b", "landmark", "coord", "k", "key", "val", "rotation", "newPersons", "t1", "env", "match_exports", "__export", "distance", "match", "similarity", "descriptor1", "descriptor2", "options", "sum", "i", "diff", "normalizeDistance", "dist", "order", "min", "max", "root", "norm", "descriptor", "descriptors", "lowestDistance", "index", "res", "normalizedSimilarity", "join", "faces", "bodies", "hands", "gestures", "shape", "_a", "_b", "_c", "_d", "_e", "_f", "id", "persons", "face", "person", "body", "hand", "gesture", "x", "y", "extractXY", "box", "minX", "minY", "face", "body", "warmupBitmap", "instance", "b64toBlob", "base64", "type", "res", "blob", "face", "body", "bitmap", "warmupCanvas", "resolve", "src", "img", "env", "canvas", "log", "ctx", "tensor", "warmupNode", "atob", "str", "tfjs_esm_exports", "data", "expanded", "runInference", "runCompile", "_a", "_b", "_c", "_d", "backendType", "webGLBackend", "numTensorsStart", "compiledModels", "modelName", "model", "key", "val", "shape", "dtype", "dim", "t", "e", "kernels", "numTensorsEnd", "warmup", "userConfig", "check", "t0", "now", "mergeDeep", "models_exports", "t1", "_numTensors", "_analyzeMemoryLeaks", "_checkSanity", "_sanity", "Human", "userConfig", "__publicField", "__privateAdd", "msg", "__privateGet", "currentTensors", "previousTensors", "__privateSet", "leaked", "log", "input", "d", "e", "similarity", "distance", "match", "event", "_a", "env", "tfVersion", "v", "config", "version", "mergeDeep", "setModelLoadOptions", "tfjs_esm_exports", "Models", "options", "output", "canvas", "result", "face", "body", "hand", "gesture", "object", "person", "all", "triangulation", "uvmap", "validateModel", "envTemp", "currentBackend", "reset", "msgs", "validate", "now", "getTensor", "process", "background", "enhance", "firstImageTensor", "secondImageTensor", "compare", "check", "timeStamp", "count", "model", "load", "current", "calc", "getModelStats", "t0", "res", "warmup", "t1", "profile", "kernels", "total", "kernel", "kernelArr", "key", "a", "b", "resolve", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "_n", "_o", "_p", "_q", "_r", "_s", "_t", "_u", "error", "timeStart", "img", "skip", "faceRes", "bodyRes", "handRes", "objectRes", "detectFace", "bodyConfig", "predict", "handConfig", "gestureRes", "iris", "shape", "join"]
}
